@using Microsoft.AspNet.Identity
@using EDR.Enums
@using EDR.Models
@using EDR.Data
@using System.Data.Entity

@if (Request.IsAuthenticated)
{
    var context = new ApplicationDbContext();
    var userid = User.Identity.GetUserId();
    //var user = new ApplicationUser();
    //user = context.Users.Where(u => u.Id == userid).Include("CurrentRole").FirstOrDefault();
    var roles = context.Roles.Where(r => r.Users.Any(u => u.UserId == userid));

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="glyphicon glyphicon-user"></i> @User.Identity.Name<span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li><a href="@Url.Action("Manage", "Dancer")"><i class="glyphicon glyphicon-user"></i> @User.Identity.Name</a></li>
                    <li role="separator" class="divider"></li>
                    <li>@Html.ActionLink("My Teacher Profile", "Manage", "Teacher")</li>
                    <li role="separator" class="divider"></li>
                    <li>@Html.ActionLink("My Owner Profile", "Manage", "Owner")</li>
                    <li role="separator" class="divider"></li>
                    <li>@Html.ActionLink("My Promoter Profile", "Manage", "Promoter")</li>
                    <li role="separator" class="divider"></li>
                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                </ul>
            </li>
        </ul>

    @*<ul class="nav navbar-nav navbar-right">
        <li>
            <a href="@Url.Action("Home", Session["CurrentRole"] != null ? Session["CurrentRole"].ToString() : "Dancer", new { username = User.Identity.Name })"><i class="glyphicon glyphicon-user"></i> @User.Identity.Name</a>
        </li>
        @if (User.IsInRole("Teacher") || User.IsInRole("Owner") || User.IsInRole("Promoter"))
        {
            <li role="presentation" class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-expanded="false">
                    Switch to <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                    </li>
                    <li>
                        @Html.ActionLink("Dancer Profile", "SwitchRole", "Account", routeValues: new { id = "" }, htmlAttributes: new { title = "Swith to Dancer Profile" })
                    </li>
                    @foreach(var role in roles)
                    {
                        <li>
                            @Html.ActionLink(role.Name + " Profile", "SwitchRole", "Account", routeValues: new { id = role.Name }, htmlAttributes: new { title = "Swith to " + role.Name + " Profile" })
                        </li>
                    }
                </ul>
            </li>
        }
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>*@
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
