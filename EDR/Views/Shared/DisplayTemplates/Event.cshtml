@model EDR.Models.Event
@using Microsoft.AspNet.Identity

@{
    var cls = Model is EDR.Models.Class ? (EDR.Models.Class)Model : null;
    var soc = Model is EDR.Models.Social ? (EDR.Models.Social)Model : null;
    var aud = Model is EDR.Models.Audition ? (EDR.Models.Audition)Model : null;
    var per = Model is EDR.Models.Performance ? (EDR.Models.Performance)Model : null;
    var reh = Model is EDR.Models.Rehearsal ? (EDR.Models.Rehearsal)Model : null;
    EDR.Enums.EventType eventtype = new EDR.Enums.EventType();

    var imgsrc = "";
    if (Model is EDR.Models.Class)
    {
        imgsrc = Model.PhotoUrl;
        eventtype = EDR.Enums.EventType.Class;
    }
    else if (Model is EDR.Models.Social)
    {
        imgsrc = Model.PhotoUrl;
        eventtype = EDR.Enums.EventType.Social;
    }
    else if (Model is EDR.Models.Audition)
    {
        imgsrc = "~/Content/images/audition.jpg";
        eventtype = EDR.Enums.EventType.Audition;
    }
    else if (Model is EDR.Models.Performance)
    {
        imgsrc = "~/Content/images/performance.jpg";
        eventtype = EDR.Enums.EventType.Performance;
    }
    else if (Model is EDR.Models.Rehearsal)
    {
        imgsrc = "~/Content/images/rehearsal.jpg";
        eventtype = EDR.Enums.EventType.Rehearsal;
    }
}
<style>
    .vertical-container {
        width: 100%;
        height: 100%;
        position: relative;
        display: block;
    }
    .vertical-container div {
        text-align: center;
        width: 100px;
        text-align: center;
        position: absolute;
        top: 55px;
        left: -30px;
        transform: rotate(-90deg);
    }
</style>
@{
    var instance = Model.EventInstances.Where(i => i.DateTime >= DateTime.Today).OrderBy(i => i.DateTime).FirstOrDefault();
    var reg = (instance != null && instance.EventRegistrations != null) ? instance.EventRegistrations.Where(r => r.UserId == User.Identity.GetUserId()).FirstOrDefault() : null;
}
<div class="row" style="padding: 5px !important; height: 150px;">
    <div class="box-default" style="padding: 5px; height: 100%;">
        <div class="col-lg-4 col-xs-4 nospace helper text-center" style="height: 100%; background-color: #000;">
            <div class="col-lg-2 col-xs-3 nospace text-center" style="height: 100%;">
                <div class="@(Model is EDR.Models.Class ? "btn-success" : Model is EDR.Models.Social ? "btn-info" : Model is EDR.Models.Performance ? "btn-warning" : Model is EDR.Models.Rehearsal ? "btn-danger" : "btn-primary") text-center vertical-container">
                    <div style="font-weight: bolder;">
                        @if (cls != null || soc != null)
                        {
                            @(cls != null ? cls.ClassType.ToString().ToUpper() : soc.SocialType.ToString().ToUpper())
                        }
                        else
                        {
                            @eventtype.ToString()
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-10 col-xs-9 nospace text-left textoverlaycontainer" style="height: 100%;">
                <div style="opacity:0.7;filter:alpha(opacity=70); height: 100%;">
                    <span style="line-height: 100%; vertical-align: middle;"></span><img style="max-width: 100%; max-height: 100%;" src="@Url.Content(EDR.Utilities.ApplicationUtility.CheckImageLink(imgsrc))" />
                </div>
                <div class="textoverlay topleft text-center">
                    <h3 class="nospace" style="color: #fff;">
                        @if (instance != null)
                        {
                            @instance.DateTime.ToString("MMM\nd")
                        }
                        else
                        {
                            <text>Past Event</text>
                        }
                    </h3>
                </div>
                <div class="textoverlay bottomright">
                    @if (cls != null || soc != null)
                    {
                        <h3 class="nospace" style="color: #fff;">
                            @if (Model.Free)
                            {
                            @:Free
                            }
                            else if (Model.Tickets.Count() != 0)
                            {
                            @Model.Tickets.Where(t => (t.Start == null || t.Start <= DateTime.Today) && (t.End == null || t.End >= DateTime.Today)).Min(t => t.Price).ToString("C0")
                            }
                            else if (Model is EDR.Models.Class)
                            {
                            @(((EDR.Models.Class)Model).School.Tickets.Where(t => (t.Start == null || t.Start <= DateTime.Today) && (t.End == null || t.End >= DateTime.Today)).Min(t => t.Price).ToString("C0"))
                            }
                            else
                            {
                            @:Free
                            }
                        </h3>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-xs-8 text-left" style="height: 100%;">
            <div class="row">
                @if (cls != null || soc != null)
                {
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" id="parentc">
                        <input id="rv" type="hidden" value="@(Model.Reviews.Count() != 0 ? Model.Reviews.Average(r => r.Rating) : 0)" class="ratingval" />
                        <div id="cont" class="rateYo"></div>
                    </div>
                }
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 nospace text-right">
                    @if (cls != null)
                    {
                        <div>
                            <span class="label label-success">
                                @{
                                    switch (cls.SkillLevel)
                                    {
                                        case 1:
                                            <text>Beginner</text>;
                                            break;
                                        case 2:
                                            <text>Beg/Int</text>;
                                            break;
                                        case 3:
                                            <text>Intermediate</text>;
                                            break;
                                        case 4:
                                            <text>Int/Adv</text>;
                                            break;
                                        case 5:
                                            <text>Advanced</text>;
                                            break;
                                    }
                                }
                            </span>
                        </div>
                                    }
                </div>
            </div>
            <div class="item-title text-primary">
                @if (Model is EDR.Models.Class || Model is EDR.Models.Social)
                {
                    <a href="@Url.Action("View", "Event", new { id = Model.Id, eventType = Model is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social })" onmouseover="openEvent(@Model.Id, @Model.Place.Latitude, @Model.Place.Longitude); return false;">
                        @Model.Name
                    </a>
                }
                else
                {
                    <a class="btnevent" href="#" data-toggle="modal" data-target='#@Model.Id' >
                        @Model.Name
                    </a>
                }
            </div>
            <div>
                @if (instance != null)
                {
                    <strong>
                        @instance.DateTime.DayOfWeek
                    @*<strong>@instance.DateTime.ToString("MMMM dd, yyyy")</strong>*@
                    <text>@@</text>
                    @Convert.ToDateTime(Model.StartTime).ToShortTimeString()
                </strong>
                }
                else
                {
                    <text>Past Event</text>
                }
            </div>
            <div class="small">
                @*@Html.DisplayFor(modelItem => Model.Place.Address)<br />*@
                @*@Html.DisplayFor(modelItem => Model.Place.Zip)*@
                <a target="_blank" href="https://www.google.com/maps/place/@Model.Place.Name+@Model.Place.Address,+@Model.Place.City,+@Model.Place.State+@Model.Place.Zip">
                    @*https://maps.google.com/?q=@Model.Place.Latitude,@Model.Place.Longitude*@
                    <i class="glyphicon glyphicon-map-marker"></i>
                    @Html.DisplayFor(modelItem => Model.Place.City), @(Model.Place.State != null ? Model.Place.State.ToString() : Model.Place.StateName)
                </a>
            </div>
            <div class="small">
                @if (cls != null)
                {
                    <text>
                        Teacher(s): @Html.DisplayFor(m => cls.Teachers, "TeacherLinks")
                    </text>
                }
            </div>
            <div style="padding: 0px !important; margin-top: 2px; white-space: normal; vertical-align: bottom;">
                @foreach (var s in Model.DanceStyles)
            {
                    <span class="label label-warning" style="margin: 1px;">@s.Name</span><text> </text>
                }
            </div>
        </div>
    </div>
</div>

@if (!(Model is EDR.Models.Class) && !(Model is EDR.Models.Social))
{
<!-- Modal Details -->
<div class="modal fade" id='@Model.Id' tabindex="-1" role="dialog" aria-labelledby="myDetails">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 id="regtitle" class="nospace">@Model.Name</h4>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <div>
                        @if (instance != null)
                        {
                            <strong>
                                @instance.DateTime.ToLongDateString()<br />
                                @Convert.ToDateTime(Model.StartTime).ToShortTimeString() to @Convert.ToDateTime(Model.EndTime).ToShortTimeString()
                            </strong>
                        }
                        else
                        {
                            <text>Past Event</text>
                        }
                    </div>
                    <div class="small">
                        @Html.DisplayFor(modelItem => Model.Place.Address)<br />
                        @Html.DisplayFor(modelItem => Model.Place.City), @(Model.Place.State.ToString() ?? Model.Place.StateName)
                        <div style="border: 1px solid #ddd;">
                            <a target="_blank" href="https://www.google.com/maps/place/@Model.Place.Name+@Model.Place.Address,+@Model.Place.City,+@Model.Place.State+@Model.Place.Zip">
                                <img style="width: 100%;" src="https://maps.googleapis.com/maps/api/staticmap?center=@Model.Place.Latitude,@Model.Place.Longitude&zoom=10&size=300x150&maptype=roadmap&markers=color:red%7Clabel:A%7C @Model.Place.Latitude, @Model.Place.Longitude&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]" title="@Model.Place.City, @Model.Place.StateName">
                            </a>
                        </div>
                    </div>
                    <div style="padding: 10px;" class="text-center">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div id="@("divRegister" + instance.Id)" style="@(reg == null ? "display:block" : "display:none")">
                                <button id="@("btnRegister" + instance.Id)" class="register btn btn-primary" value="@instance.Id">
                                    Add to Calendar
                                </button>
                            </div>
                            <div id="@("divUnregister" + instance.Id)" style="@(reg != null ? "display:block" : "display:none")">
                                <button id="@("btnUnregister" + instance.Id)" class="unregister btn btn-danger" value="@instance.Id">
                                    Remove from Calendar
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Details -->
}

<script>
    $(function () {
        $('#@("btnRegister" + instance.Id)').click(function (e) {
            var id = $(e.target).prop('value'); // $(this) refers to button that was clicked
            $.ajax({
                url: '@Url.Action("RegisterJSON", "Event", new { Area = "" })',
                data: { 'id': id },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    $('#@("divRegister" + instance.Id)').hide();
                    $('#@("divUnregister" + instance.Id)').show();
                    $('#calendar').fullCalendar('removeEvents');
                    $('#calendar').fullCalendar('refetchEvents');
                }
            })
        });
        $('#@("btnUnregister" + instance.Id)').click(function (e) {
            var id = $(e.target).prop('value'); // $(this) refers to button that was clicked
            $.ajax({
                url: '@Url.Action("UnRegisterJSON", "Event", new { Area = "" })',
                data: { 'id': id },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    $('#@("divRegister" + instance.Id)').show();
                    $('#@("divUnregister" + instance.Id)').hide();
                    $('#calendar').fullCalendar('removeEvents');
                    $('#calendar').fullCalendar('refetchEvents');
                }
            })
        });
    });
</script>