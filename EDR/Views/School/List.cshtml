@model EDR.Models.ViewModels.ListSchoolViewModel

@{
    ViewBag.Title = "All Schools";
}

<h2 class="text-center">All Schools</h2>

@if (User.IsInRole("Teacher"))
{
    <p class="text-center">
        @Html.ActionLink("Create New School", "Create")
    </p>
}

@using (Html.BeginForm("List", "School", FormMethod.Post, new { @class = "formmain" }))
{
    @Html.HiddenFor(m => m.SearchAddress.Latitude, new { Name = "lat", @class = "latfield" })
    @Html.HiddenFor(m => m.SearchAddress.Longitude, new { Name = "lng", @class = "lngfield" })
    @Html.HiddenFor(m => m.NELat, new { @class = "nelatfield" })
    @Html.HiddenFor(m => m.NELng, new { @class = "nelngfield" })
    @Html.HiddenFor(m => m.SWLat, new { @class = "swlatfield" })
    @Html.HiddenFor(m => m.SWLng, new { @class = "swlngfield" })
    @Html.HiddenFor(m => m.CenterLat, new { @class = "clatfield" })
    @Html.HiddenFor(m => m.CenterLng, new { @class = "clngfield" })
    @Html.HiddenFor(m => m.Zoom, new { @class = "czoomfield" })
    <div class="container bg-info text-center" style="padding: 10px;">
        <div class="form-inline">
            <div class="form-group">
                @*@Html.Label("Location:", htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })*@
                <div class="col-md-12 col-lg-12">
                    @Html.TextBoxFor(m => m.Location, new { placeholder = "Location", @class = "form-control locationsearch" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-lg-12">
                    @Html.HiddenFor(m => m.DanceStyleId, new { @class = "stylesearchid" })
                    @Html.TextBoxFor(m => m.Style, new { placeholder = "Dance Style", @class = "form-control stylesearch" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-lg-12">
                    @Html.HiddenFor(m => m.TeacherId, new { @class = "teachersearchid" })
                    @Html.TextBoxFor(m => m.Teacher, new { placeholder = "Teacher", @class = "form-control teachersearch" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-lg-12">
                    <input type="submit" value="Search Schools" class="btn btn-warning" />
                </div>
            </div>
        </div>
    </div>
}

<div class="map_canvas"></div>

@Html.DisplayFor(m => m.Schools, "Schools")

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")
<script src="../../Scripts/searchhelper.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="../../Scripts/jquery.geocomplete.js"></script>
    <link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
    <script src="~/Scripts/jquery.rateyo.js"></script>

<script>
    //  Map Marker Containers
    var markers = [];
    var infowindows = [];

    $(function () {
        //  Map Marker Containers
        //  Build up the Markers
        var map = $("#Location").geocomplete("map");
        @foreach(var s in Model.Schools.OrderBy(s => s.Name))
    {
        <text>
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng('@s.Latitude', @s.Longitude),
            map: map,
            title: '@s.Name',
            icon: "../../Content/images/MapMarker.png"
        });

        attachMessage(map, marker, '@s.Id', '@s.Name', '@s.Address', '@(s.City + ", " + s.State + " " + s.Zip)', '<a href="@Url.Action("View", "School", new { id = s.Id })">' + '@s.Name' + '</a>');
        markers.push(marker);
        </text>
    }

        function attachMessage(map, marker, num, placeName, address, address2, link) {
            var message = marker.title;
            var infowindow = new google.maps.InfoWindow({
                disableAutoPan: false,
                maxWidth: 200,
                content: '<div id="content" class="text-center" style="width: 200px;">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<div style="display: block;white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">' +
                link +
                '</div>' +
                '<div id="bodyContent">' +
                '<p>' +
                address + '<br>' +
                address2 +
                '</p>' +
                '</div>' +
                '</div>'
            });
            infowindows.push(infowindow);

            //  infowindow.open(map, marker);

            google.maps.event.addListener(marker, 'click', function () {
                clearWindows();
                infowindow.open(map, marker);
            });
        }
    });

    function clearWindows() {
        for (var i = 0; i < infowindows.length; i++) {
            infowindows[i].close();
        }
    }

    function openEvent(id, lati, long) {
        var latLng = new google.maps.LatLng(lati, long); //Makes a latlng
        var map = $("#Location").geocomplete("map");
        map.panTo(latLng); //Make map global
        markers[id].setMap(map);
        clearWindows();
        infowindows[id].open(map, markers[id]);
        return false;
    };
    $(function () {

        $(".rateYo").rateYo({
            starWidth: "15px",
            onInit: function (rating, rateYoInstance) {
                //  alert("init");
                var t = $(this);
                $(this).rateYo("option", "rating", t.parent('div').find('.ratingval').prop('value'));
                $(this).rateYo("option", "readOnly", true);
            }
        });
    });
</script>
}