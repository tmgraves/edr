@model EDR.Models.ViewModels.ManageSchoolViewModel

@{
    ViewBag.Title = "Manage " + Model.School.Name;
}

<h2>Manage @Model.School.Name</h2>
<hr />

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")

<script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="../../Scripts/jquery.geocomplete.js"></script>*@

<script type="text/javascript">
    $('#newmember').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("Search", "Dancer")',
                data: { searchString: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.Name,
                            value: item.Id
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#newmember').val(ui.item.label);
            $('#NewMemberId').val(ui.item.value);
            return false;
        },
        minLength: 1
    });

    $(function () {
        $("#newplace").geocomplete({
            details: "form",
            types: ["geocode", "establishment"],
        })
        .bind("geocode:result", function (event, result) {
            $('#School_Latitude').prop("value", result.geometry.location.lat());
            $('#School_Longitude').prop("value", result.geometry.location.lng());
            var street_num;
            var street_name;
            $.each(result.address_components, function (i, address_component)
            {
                //alert(address_component.types[0]);
                //alert(address_component.long_name);
                if (address_component.types[0] == "street_number")
                {
                    street_num = address_component.long_name;
                }
                else if (address_component.types[0] == "route") {
                    street_name = address_component.long_name;
                }
                else if (address_component.types[0] == "locality") {
                    $('#School_City').prop("value", address_component.long_name);
                }
                else if (address_component.types[0] == "administrative_area_level_1") {
                    $('#School_State').prop("value", address_component.long_name);
                }
                else if (address_component.types[0] == "postal_code") {
                    $('#School_Zip').prop("value", address_component.long_name);
                }
                else if (address_component.types[0] == "country") {
                    $('#School_Country').prop("value", address_component.long_name);
                }
            });
            //alert(street_num + " " + street_name);
            $('#School_Address').prop("value", street_num + " " + street_name);
            //  console.log(result);
        });
    });

    $(function () {
        $('#saveform.main').valid();

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            try {
                var valid = $('#saveform.main').valid();
            }
            catch (err) {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });

        //$('#saveform.main').validate;

        //$('#saveform.main').submit(function () {
        //    var valid = $('#saveform.main').valid();

        //    if (valid) {
        //        return true;
        //    }
        //    else {
        //        return false;
        //    }
        //});
    });
</script>
}

<div class="container-fluid">
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <div id="viewdiv">
                    <div class="text-right">
                        <input id="btnEdit" type="button" class="btn btn-primary" value="Edit" />
                    </div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.School.Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Name)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.Description)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Description)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.FacebookLink)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.FacebookLink)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.Address)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Address)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.Address2)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Address2)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.City)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.City)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.State)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.State)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.Zip)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Zip)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.School.Country)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.School.Country)
                        </dd>
                    </dl>
                </div>
                <div id="editdiv" style="display: none;">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    @using (Html.BeginForm("Save", "School", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                    {
                        @Html.HiddenFor(m => m.School.Id)
                        @Html.HiddenFor(model => model.School.Address)
                        @Html.HiddenFor(model => model.School.Address2)
                        @Html.HiddenFor(model => model.School.City)
                        @Html.HiddenFor(model => model.School.State)
                        @Html.HiddenFor(model => model.School.Zip)
                        @Html.HiddenFor(model => model.School.Country)
                        @Html.HiddenFor(model => model.School.Latitude)
                        @Html.HiddenFor(model => model.School.Longitude)
                        @Html.HiddenFor(model => model.School.DateStarted)
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input type="submit" id="btnsave" value="Save" class="btn btn-primary" />
                            <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                        </div>
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.LabelFor(model => model.School.Name, htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.School.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.School.Name, "", new { @class = "text-danger" })
                            </dd>
                        </dl>

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.LabelFor(model => model.School.Description, htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.School.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.School.Description, "", new { @class = "text-danger" })
                            </dd>
                        </dl>

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.LabelFor(model => model.School.FacebookLink, htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.School.FacebookLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.School.FacebookLink, "", new { @class = "text-danger" })
                            </dd>
                        </dl>

                        @*<dl class="dl-horizontal">
                            <dt>
                                @Html.LabelFor(model => model.School.Public, htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.School.Public)
                                @Html.ValidationMessageFor(model => model.School.Public, "", new { @class = "text-danger" })
                            </dd>
                        </dl>

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.LabelFor(model => model.School.DateStarted, htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.School.DateStarted, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.School.DateStarted, "", new { @class = "text-danger" })
                            </dd>
                        </dl>*@

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.Label("New Place", htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                <input id="newplace" type="text" placeholder="Search for a new Location" class="form-control" />
                            </dd>
                        </dl>

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.Label("Location", htmlAttributes: new { @class = "control-label" })
                            </dt>
                            <dd>
                                @Html.TextArea("Location", Model.School.Address + "\n" + Model.School.City + ", " + Model.School.State + " " + Model.School.Zip + "\n" + Model.School.Country, 6, 50, new { @class = "form-control", Name = "formatted_address", @readonly = true })
                            </dd>
                        </dl>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Members</h3>
                @using (Html.BeginForm("AddMember", "School", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.School.Id)
                    @Html.HiddenFor(m => m.NewMemberId)
                    <input type="text" id="newmember" placeholder="Search for a User" required class="form-control" />
                    <input type="submit" value="Add Member" />
                }
                <div id="membersdiv">
                    @using (Html.BeginForm("UpdateMembers", "School", FormMethod.Post))
                    {
                        @Html.HiddenFor(model => model.School.Id)
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Admin</th>
                                    <th></th>
                                </tr>
                            </thead>
                            @Html.EditorFor(model => model.School.Members)
                        </table>
                        @*<table class="table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Admin</th>
                                    <th></th>
                                </tr>
                            </thead>
                            @for (int i = 0; i < Model.School.Members.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.HiddenFor(model => model.School.Members.ToList()[i].Id)
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.School.Members.ToList()[i].User.FirstName)
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.School.Members.ToList()[i].Admin)
                                    </td>
                                </tr>
                            }
                        </table>*@
                                    <div>
                                        <input type="submit" value="Update Members" />
                                    </div>
                                }
                                @*@Html.Partial("~/Views/School/_UpdateMembersPartial.cshtml", Model.School.Members, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "Members" }})

                    @{
                         WebGrid grid = new WebGrid(source: Model.School.Members, canPage: false);
                     }
                     @using (Html.BeginForm("UpdateMembers", "School", FormMethod.Post))
                     {
                         @Html.HiddenFor(model => model.School.Id)
                         <div>
                             @grid.GetHtml(
                                         tableStyle: "gridtable",
                                         htmlAttributes: new { id = "checkableGrid" },
                                         columns: grid.Columns
                                         (
                                         grid.Column(format: @<text> <input type="checkbox" value="@item.UserId" @(item.Admin ? "checked='checked'" : "") name="userids" /> </text>, header: "Admin"
                                         ),
                                         grid.Column("User.FullName", "Name")
                                         )
                                     )
                         </div>
                         <div>
                             <input type="submit" value="Update Members" />
                         </div>
                     }

                     <table class="table">
                         <thead>
                             <tr>
                                 <th>Name</th>
                                 <th>Admin</th>
                                 <th></th>
                             </tr>
                         </thead>
                         @foreach (var item in Model.School.Members)
                         {
                             <tr>
                                 <td>
                                     @Html.DisplayFor(member => item.User.FullName)
                                 </td>
                                 <td>
                                     @Html.DisplayFor(member => item.Admin)
                                 </td>
                                 <td>
                                     @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                     @Html.ActionLink("Details", "View", new { id = item.Id }) |
                                     @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                 </td>
                             </tr>
                         }
                     </table>*@
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Tickets</h3>
                @Html.ActionLink("Add Ticket", "AddTicket", "Store", new { schoolId = Model.School.Id }, null)
                <table class="table">
                    <thead>
                        <tr>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Purchase Limit</th>
                            <th>Valid From</th>
                            <th>Valid To</th>
                            <th>Related Event</th>
                            <th></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.School.Tickets)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(member => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(member => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(member => item.Limit)
                            </td>
                            <td>
                                @Html.DisplayFor(member => item.Start)
                            </td>
                            <td>
                                @Html.DisplayFor(member => item.End)
                            </td>
                            <td>
                                @if (item.Event != null)
                                {
                                    @item.Event.Name
                                }
                            </td>
                            <td>
                                @Html.ActionLink("Details", "ViewTicket", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "DeleteTicket", new { id = item.Id })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Classes</h3>
                @Html.ActionLink("Add a Class", "Create", "Event", new { eventType = EDR.Enums.EventType.Class, schoolId = Model.School.Id, role = EDR.Enums.RoleName.Teacher }, null)
                <table class="table">
                    <thead>
                        <tr>
                            <th>Class</th>
                            <th>Registrations</th>
                            <th></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.School.Classes)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(member => item.Name)
                            </td>
                            <td>
                                @item.EventInstances.Sum(i => i.EventRegistrations.Count())
                            </td>
                            <td>
                                @Html.ActionLink("Manage", "Manage", "Event", new { id = item.Id, eventType = EDR.Enums.EventType.Class }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Performance Teams</h3>
                @Html.ActionLink("Add a Team", "Create", "Team", new { schoolId = Model.School.Id }, null)
                <table class="table">
                    <thead>
                        <tr>
                            <th>Team</th>
                            <th></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.School.Teams)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(member => item.Name)
                            </td>
                            <td>
                                @Html.ActionLink("Manage", "Manage", "Team", new { id = item.Id }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>




<p>
    @Html.ActionLink("Back to School", "View", new { id = Model.School.Id })
</p>
<p>
    @Html.ActionLink("Back to List", "List")
</p>
