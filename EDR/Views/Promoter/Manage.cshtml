@model EDR.Models.ViewModels.PromoterManageViewModel

@{
    ViewBag.Title = "Manage Promoter Profile";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("All Promoters", "List", "Promoter")</li>
    <li>@Html.ActionLink("Promoter Profile", "Home", "Promoter", new { username = Model.Promoter.ApplicationUser.UserName }, null)</li>
    <li class="active">Manage Profile</li>
</ol>

<h2 class="page-header">
    Manage Promoter Profile
</h2>

<div class="container-fluid">
    <div class="row" style="padding-bottom: 10px;">
        <div class="col-xs-12">
            <a href="#" style="width: 100% !important;" class="btn btn-success" data-uri="scan://scan" onclick="clickHandler(this.dataset.uri)"><i class="glyphicon glyphicon-screenshot"></i> Open Code Scanner</a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-md-6">
            <div class="panel panel-default">
                <div class="panel-body bg-info">
                    <div id="viewdiv">
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input id="btnEdit" type="button" class="btn btn-primary" value="Edit" />
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div id="img_container">
                                    <img id="profilepic" src="@Url.Content(EDR.Utilities.ApplicationUtility.CheckImageLink(Model.Promoter.ApplicationUser.PhotoUrl))" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Promoter.ApplicationUser.FullName)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.LabelFor(model => model.Promoter.Phone, htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Promoter.Phone)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.LabelFor(model => model.Promoter.ContactEmail, htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Promoter.ContactEmail)
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <hr />
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.Label("Facebook Link", htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    <a href="@Model.Promoter.Facebook" title="Facebook Page" style="width: 150px;" target="_blank">
                                        <div class="item-short">@Model.Promoter.Facebook</div>
                                    </a>
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Promoter.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    <a href="@Model.Promoter.Website" title="Website" style="width: 150px;" target="_blank">
                                        <div class="item-short">@Model.Promoter.Website</div>
                                    </a>
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div id="editdiv" style="display: none;">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @using (Html.BeginForm("Manage", "Promoter", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Promoter.Id)
                            @Html.HiddenFor(model => model.Promoter.ApplicationUser.Id)
                            <div class="text-right" style="padding-bottom: 10px;">
                                <input type="submit" id="btnsave" value="Save" class="btn btn-success" />
                                <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                            </div>
                            <div class="col-lg-12">
                                <div class="col-lg-6">
                                    <div id="img_container">
                                        <img id="profilepic" src="@Url.Content(Model.Promoter.ApplicationUser.PhotoUrl ?? "~/Content/images/NoProfilePic.gif")" />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.DisplayFor(model => model.Promoter.ApplicationUser.FullName)
                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.LabelFor(model => model.Promoter.Phone, htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.EditorFor(model => model.Promoter.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Promoter.Phone, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.LabelFor(model => model.Promoter.ContactEmail, htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.EditorFor(model => model.Promoter.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Promoter.ContactEmail, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <hr />
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.Label("Facebook Link", htmlAttributes: new { @class = "control-label col-md-2" })
                                    </dt>
                                    <dd>
                                        @Html.EditorFor(model => model.Promoter.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Promoter.Facebook, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.LabelFor(model => model.Promoter.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </dt>
                                    <dd>
                                        @Html.EditorFor(model => model.Promoter.Website, new { htmlAttributes = new { @class = "form-control", @placeholder = "e.g. https://www.google.com" } })
                                        @Html.ValidationMessageFor(model => model.Promoter.Website, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-md-6">
            <div class="panel panel-default">
                <div class="panel-body bg-warning">
                    <h3>Import Facebook Events</h3>
                    <div id="importfbclasses">
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body buttoncontainer">
                    <h3>Socials</h3>
                    @Html.ActionLink("Create Social", "Create", "Event", new { eventType = EDR.Enums.EventType.Social, role = EDR.Enums.RoleName.Promoter }, new { @class = "btn btn-warning actionbutton" })
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Social</th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.Promoter.Socials)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink(item.Name, "View", "Event", new { id = item.Id, eventType = EDR.Enums.EventType.Social }, null)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body buttoncontainer">
                    <h3>Promoter Groups (Financial Info)</h3>
                    <button id="btnAddGroup" type="button" class="btn btn-warning actionbutton" data-toggle="modal" data-target="#modalPromoterGroup">
                        Add Promoter Group
                    </button>
                    <table class="table table-striped" style="max-width: 100%;">
                        <thead>
                            <tr>
                                <th>Group</th>
                                <th>Promoters</th>
                                <th></th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.Promoter.PromoterGroups)
                        {
                            <tr>
                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    @item.Promoters.Count()
                                </td>
                                <td>
                                    @Html.ActionLink("View Group", "ManageGroup", "Promoter", new { id = item.Id, promoterid = Model.Promoter.Id }, new { @class = "btn btn-primary" })
                                    @Html.ActionLink("Delete", "DeleteGroup", "Promoter", new { id = item.Id, promoterId = Model.Promoter.Id }, new { @class = "btn btn-danger" })
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Add Promoter Group -->
<div class="modal fade" id="modalPromoterGroup" tabindex="-1" role="dialog" aria-labelledby="myPromoterGroup">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h3 class="modal-title">Add Promoter Group</h3>
                <h4>Please enter group info and bank details so you can receive payments from ticket sles on the site</h4>
            </div>
            <div class="modal-body">
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @using (Html.BeginForm("AddGroup", "Promoter", FormMethod.Post, new { @id = "addgroupform", @class = "main" }))
                {
                    @Html.HiddenFor(x => x.Promoter.Id, new { @Value = Model.Promoter.Id })
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.Name, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PayeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PayeeName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PayeeName, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PayeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PayeeAddress, new { @class = "form-control locationsearch" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PayeeAddress, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PayeeCity, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PayeeCity, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PayeeCity, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PayeeState, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PayeeState, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PayeeState, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PayeeZip, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PayeeZip, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PayeeZip, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    @*<dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.PaymentInformation, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.PaymentInformation, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.PaymentInformation, "", new { @class = "text-danger" })
                        </dd>
                    </dl>*@
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.BankName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.BankName, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.BankAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.BankAccount, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.BankAccount, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.LabelFor(model => model.NewPromoterGroup.RoutingNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.NewPromoterGroup.RoutingNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPromoterGroup.RoutingNumber, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input type="submit" id="btnsaveaudition" value="Save" class="btn btn-primary" />
                            <input id="btncancelaudition" type="button" class="btn btn-primary" value="Cancel" data-dismiss="modal" />
                        </div>
                }
            </div>
            <div class="modal-footer">
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Modal Add Promoter Group -->

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
    <script src="~/Scripts/readmore.js"></script>
    <script src="~/Scripts/browser-deeplink.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]"></script>
    <script src="../../Scripts/jquery.geocomplete.js"></script>

    <script>
        deeplink.setup({
            iOS: {
                appId: "698925807",
                appName: "QR Code Reader",
            },
            android: {
                appId: "me.scan.android.client"
            }
        });

        $(function () {
            $("#NewPromoterGroup_PayeeAddress").geocomplete({
                details: "form",
                types: ["geocode", "establishment"],
            })
            .bind("geocode:result", function (event, result) {
                //$.each(result.reviews, function (i, review) {
                //    alert(review.text);
                //});
                var street_num;
                var street_name;
                $.each(result.address_components, function (i, address_component) {

                    //alert(address_component.types[0]);
                    //alert(address_component.long_name);
                    if (address_component.types[0] == "street_number") {
                        street_num = address_component.long_name;
                    }
                    else if (address_component.types[0] == "route") {
                        street_name = address_component.long_name;
                    }
                    else if (address_component.types[0] == "locality") {
                        $('#NewPromoterGroup_PayeeCity').prop("value", address_component.long_name);
                    }
                    else if (address_component.types[0] == "administrative_area_level_1") {
                        $('#NewPromoterGroup_PayeeState').prop("value", address_component.long_name);
                    }
                    else if (address_component.types[0] == "postal_code") {
                        $('#NewPromoterGroup_PayeeZip').prop("value", address_component.long_name);
                    }
                });
                //alert(street_num + " " + street_name);
                $('#NewPromoterGroup_PayeeAddress').prop("value", street_num + " " + street_name);
                //  console.log(result);
            });
        });

        function clickHandler(uri) {
            deeplink.open(uri);
            return false;
        }

        $(function () {
        LoadClasses();

        function LoadClasses() {
            $.get('@Url.Action("FacebookEventsPartial", "Dancer")', { 'username': '@User.Identity.Name', 'eventType': 'Social', 'role': 'promoter' }, function (data) {
                $("#importfbclasses").empty();
                $("#importfbclasses").html(data);
                $('#importfbclasses').readmore({
                    speed: 500,
                    collapsedHeight: 100,
                    moreLink: '<a href="#">View All Events</a>'
                });
            });
        };

        $('#saveform.main').valid();

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            try {
                var valid = $('#saveform.main').valid();
            }
            catch (err) {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });

        $('#saveform.main').submit(function () {
            var valid = $('#saveform.main').valid();
        });
    });
    $('#Facebook').change(function () {
        if ($(this).val().length > 0) {
            if ($(this).val().toString().indexOf("http") != 0) {
                $(this).val("https://" + $(this).val());
            }
        }
    });
    $('#Website').change(function () {
        if ($(this).val().length > 0)
        {
            if ($(this).val().toString().indexOf("http") != 0) {
                $(this).val("http://" + $(this).val());
            }
        }
    });
    </script>
}