@model EDR.Models.ViewModels.TeamIndexViewModel

@{
    ViewBag.Title = "Search Performance Dance Teams";
    ViewBag.Keywords = "Dance Performance Team " + String.Join(" ", Model.DanceStyles);
    ViewBag.Description = "Search for " + String.Join(", ", Model.DanceStyles) + " performance teams.";
}

<ol class="breadcrumb">
    <li class="active">Find a Dance Team</li>
</ol>
<h1 class="text-center">Find a Dance Team</h1>
@using (Html.BeginForm("Index", "Team", FormMethod.Post, new { @class = "formmain" }))
{
    @Html.HiddenFor(m => m.SearchAddress.Latitude, new { Name = "lat", @class = "latfield" })
    @Html.HiddenFor(m => m.SearchAddress.Longitude, new { Name = "lng", @class = "lngfield" })
    @Html.HiddenFor(m => m.NELat, new { @class = "nelatfield" })
    @Html.HiddenFor(m => m.NELng, new { @class = "nelngfield" })
    @Html.HiddenFor(m => m.SWLat, new { @class = "swlatfield" })
    @Html.HiddenFor(m => m.SWLng, new { @class = "swlngfield" })
    @Html.HiddenFor(m => m.CenterLat, new { @class = "clatfield" })
    @Html.HiddenFor(m => m.CenterLng, new { @class = "clngfield" })
    @Html.HiddenFor(m => m.Zoom, new { @class = "czoomfield" })
    <div class="container-fluid bg-info text-center" style="padding: 0px !important; margin-bottom: 5px;">
        <div class="form-inline">
            <div class="row" style="padding-top: 5px; padding-bottom: 5px;">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Location, new { placeholder = "Location", @class = "form-control locationsearch" })
                </div>
                <div class="form-group">
                    @Html.HiddenFor(m => m.TeacherId, new { @class = "teachersearchid" })
                    @Html.TextBoxFor(m => m.Teacher, new { placeholder = "Teacher", @class = "form-control teachersearch" })
                </div>
                <div class="form-group">
                    @Html.HiddenFor(m => m.DanceStyleId, new { @class = "stylesearchid" })
                    @Html.TextBoxFor(m => m.Style, new { placeholder = "Dance Style", @class = "form-control stylesearch" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Search Teams" class="btn btn-warning" />
                </div>
            </div>
            <div class="map_canvas"></div>
        </div>
    </div>
}
<div class="col-lg-12" style="padding: 10px;">
    <div id="myButtons" class="btn-group" data-toggle="buttons">
        <label class="btn btn-warning btn-sm active">
            <input type="radio" name="options" id="listbtn" autocomplete="off" checked class="rbutton">
            <i class="glyphicon glyphicon-th-list"></i>
            List
        </label>
        <label class="btn btn-warning btn-sm">
            <input type="radio" name="options" id="calendarbtn" autocomplete="off" class="rbutton">
            <i class="glyphicon glyphicon-calendar"></i>
            Calendar
        </label>
    </div>
</div>
<div class="col-lg-12" id="teamsdiv" style="overflow: auto; overflow-x: hidden;">
    <div class="row">
        <div id="listdiv">
            @Html.DisplayFor(m => m.Teams, "Teams")
        </div>
        <div id='script-warning'>
            <code>php/get-events.php</code> must be running.
        </div>
        <div id='loading'>loading...</div>
        <div id='calendar'></div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="../../Scripts/searchhelper.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script src="../../Scripts/jquery.geocomplete.js"></script>
    <link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
    <script src="~/Scripts/jquery.rateyo.js"></script>

<link href="~/Content/fullcalendar/fullcalendar.css" rel="stylesheet" />
<link href="~/Content/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print" />
<script src="~/Scripts/fullcalendar/moment.min.js"></script>
@*<script src="~/Scripts/fullcalendar/jquery.min.js"></script>*@
<script src="~/Scripts/fullcalendar/fullcalendar.js"></script>

<script>
    $(document).ready(function() {
        $(window).resize(function() {
            var bodyheight = $(this).height() - 600;
            //alert($(this).height());
            //alert(bodyheight);
            $("#teamsdiv").height(bodyheight);
        }).resize();
    });

    $("#calendar").hide();
    $('#listbtn').parent().on("click", function () {
        $('#listdiv').show();
        $("#calendar").hide();
        //  $("#calendar").css({"visibility": "hidden"});
    });

    $('#calendarbtn').parent().on("click", function () {
        $('#listdiv').hide();
        $("#calendar").show();
        //  $("#calendar").css({"visibility": "visible"});
        $('#calendar').fullCalendar('render');
    });

    $('#calendar').fullCalendar({
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'month,basicWeek,basicDay'
        },
        defaultDate: new Date(),
        editable: false,
        eventLimit: true, // allow "more" link when too many events
        eventSources: [
            {
                url: '@Url.Action("GetAuditionInstances", "Team")',
                traditional: true,
                data: {
                        neLat: $('.nelatfield').val(),
                        neLng: $('.nelngfield').val(),
                        swLat: $('.swlatfield').val(),
                        swLng: $('.swlngfield').val(),
                        styleId: $('.stylesearchid').val(),
                        teacherId: $('.teachersearchid').val(),
                        skillLevel: $('#SkillLevel').val() == null ? new Array() : $('#SkillLevel').val(),
                        },
                    error: function() {
                        $('#script-warning').show();
                }
            },
            {
                url: '@Url.Action("GetPerformanceInstances", "Team")',
                traditional: true,
                data: {
                    neLat: $('.nelatfield').val(),
                    neLng: $('.nelngfield').val(),
                    swLat: $('.swlatfield').val(),
                    swLng: $('.swlngfield').val(),
                    styleId: $('.stylesearchid').val(),
                    teacherId: $('.teachersearchid').val(),
                    skillLevel: $('#SkillLevel').val() == null ? new Array() : $('#SkillLevel').val(),
                },
                error: function() {
                    $('#script-warning').show();
                }
            },
        ],
        eventMouseover: function(event) {
            openEvent(event.id, event.lat, event.lng);
            //// opens events in a popup window
            //window.open(event.url, 'gcalevent', 'width=700,height=600');
            return false;
        },

        loading: function(bool) {
            $('#loading').toggle(bool);
        }
    });

    //  Map Marker Containers
    var markers = [];
    var infowindows = [];
    $(function () {
        //  Map Marker Containers
        //  Build up the Markers
        var map = $("#Location").geocomplete("map");
        @foreach(var s in Model.Teams)
    {
        <text>
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng('@s.Latitude', @s.Longitude),
            map: map,
            title: '@s.Name',
            icon: "../../Content/images/MapMarker.png"
        });

        attachMessage(@s.Id, map, marker, '@s.Id', '@s.Name', '@s.Address', '@(s.City + ", " + s.State + " " + s.Zip)', '<a href="@Url.Action("View", "Team", new { id = s.Id })">' + '@s.Name' + '</a>');
        markers.push({
            id: @s.Id,
            marker: marker
        });
        </text>
    }

        function attachMessage(id, map, marker, num, placeName, address, address2, link) {
            var message = marker.title;
            var infowindow = new google.maps.InfoWindow({
                disableAutoPan: false,
                maxWidth: 200,
                content: '<div id="content" class="text-center" style="width: 200px;">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<div class="large" style="display: block;white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-weight: bold;">' +
                link +
                '</div>' +
                '<div id="bodyContent">' +
                '<p>' +
                address + '<br>' +
                address2 +
                '</p>' +
                '</div>' +
                '</div>'
            });
            infowindows.push({
                id: id,
                infowindow: infowindow
            });

            //  infowindow.open(map, marker);

            google.maps.event.addListener(marker, 'click', function () {
                clearWindows();
                infowindow.open(map, marker);
            });
        }
    });

    function clearWindows() {
        for (var i = 0; i < infowindows.length; i++) {
            infowindows[i].infowindow.close();
        }
    };

    function openEvent(id, lati, long) {
        var latLng = new google.maps.LatLng(lati, long); //Makes a latlng
        var map = $("#Location").geocomplete("map");
        map.panTo(latLng); //Make map global
        var mark = markers.filter(function (item) { return item.id == id })[0];
        mark.marker.setMap(map);
        //  markers[id].setMap(map);
        clearWindows();
        iwin = infowindows.filter(function (item) { return item.id == id })[0];
        iwin.infowindow.open(map, mark.marker);
        //  infowindows[id].open(map, markers[id]);
        return false;
    };
    //function openEvent(id, lati, long) {
    //    var latLng = new google.maps.LatLng(lati, long); //Makes a latlng
    //    var map = $("#Location").geocomplete("map");
    //    map.panTo(latLng); //Make map global
    //    markers[id].setMap(map);
    //    clearWindows();
    //    infowindows[id].open(map, markers[id]);
    //    return false;
    //};
</script>
}
