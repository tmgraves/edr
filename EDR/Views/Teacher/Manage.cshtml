@model EDR.Models.ViewModels.TeacherManageViewModel

@{
    ViewBag.Title = "Manage";
}

<h2>Manage</h2>
@Html.ActionLink("View Profile", "Home", new { id = User.Identity.Name })

<div class="container-fluid">
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Teacher.ApplicationUser.FullName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Teacher.ApplicationUser.FullName)
                    </dd>
                </dl>
            </div>
        </div>
        <div class="panel panel-info">
            <h4 class="col-lg-6 col-md-6 col-sm-6 col-xs-6">My Schools</h4>
            @Html.ActionLink("Add School", "Create", "School", new { role = EDR.Enums.RoleName.Teacher }, new { @class = "btn btn-text" })
            <div class="panel-body">
                <div class="row">
                </div>
                @if (Model.Teacher.Schools != null && Model.Teacher.Schools.Count() > 0)
                {
                    foreach (var sch in Model.Teacher.Schools.OrderBy(s => s.Name))
                    {
                        <div class="row" style="padding: 2px;">
                            @Html.ActionLink(sch.Name, "View", "School", new { id = sch.Id }, new { @class = "btn btn-link" })
                        </div>
                    }
                }
                else
                {
                    @: No Schools
                }
                @*<a class="btn btn-primary" href="@Url.Action("ImportClassFromFacebook", "Event")">
                    <h4>More Events...</h4>
                </a>*@
            </div>
        </div>
        <div class="panel panel-info">
            <h4 class="col-lg-6 col-md-6 col-sm-6 col-xs-6">My Teams</h4>
            <div class="panel-body">
                <div class="row">
                </div>
                @if (Model.Teacher.Teams != null && Model.Teacher.Teams.Count() > 0)
                {
                    foreach (var t in Model.Teacher.Teams.OrderBy(s => s.Name))
                    {
                        <div class="row" style="padding: 2px;">
                            @Html.ActionLink(t.Name, "View", "Team", new { id = t.Id }, new { @class = "btn btn-link" })
                        </div>
                    }
                }
                else
                {
                    @: No Teams
                }
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body ">
                <h4>Dance Styles</h4>
                @using (Ajax.BeginForm("AddStyle", new AjaxOptions()
                    {
                        UpdateTargetId = "styles",
                        OnSuccess = "done(this)"
                    }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.Teacher.ApplicationUser.Id)

                    <div class="form-inline">
                        <div class="form-group">
                            @Html.HiddenFor(m => m.NewStyleId, new { @class = "stylesearchId" })
                            <input type="text" placeholder="Dance Style" class="form-control stylesearch" />
                            <input class="btn btn-primary" type="submit" value="Add" />
                        </div>
                    </div>
                }
                <div id="styles">
                    @Html.Partial("~/Views/Shared/_DancerStylesPartial.cshtml", new EDR.Models.ViewModels.DancerStylesViewModel() { Id = Model.Teacher.ApplicationUser.Id, Styles = Model.Teacher.DanceStyles.ToList(), Controller = "Teacher" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Classes</h3>
                @Html.ActionLink("Create Class", "Create", "Event", new { eventType = EDR.Enums.EventType.Class }, null)
                <table class="table">
                    <thead>
                        <tr>
                            <th>Class</th>
                            <th></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Teacher.Classes)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(member => item.Name)
                            </td>
                            <td>
                                @Html.ActionLink("Manage", "Manage", "Event", new { id = item.Id, eventType = EDR.Enums.EventType.Class }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>

    <script type="text/javascript">
        $('.stylesearch').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../DanceStyle/Search',
                    data: { searchString: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            select: function (event, ui) {
                $('.stylesearch').val(ui.item.label);
                $('.stylesearchId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        function done(form) {
        $('.stylesearch').prop('value', "");
        $('.stylesearchid').prop('value', "");
    }
    </script>
}