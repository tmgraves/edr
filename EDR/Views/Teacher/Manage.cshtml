@model EDR.Models.ViewModels.TeacherManageViewModel

@{
    ViewBag.Title = "Manage Teacher Profile";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("All Teachers", "List", "Teacher")</li>
    <li>@Html.ActionLink("Teacher Profile", "Home", "Teacher", new { username = Model.Teacher.ApplicationUser.UserName }, new { })</li>
    <li class="active">Manage Profile</li>
</ol>

<h2 class="page-header">
    Manage Teacher Profile
</h2>

<style>
    img {
        max-width: 100%; /* This rule is very important, please do not ignore this! */
    }

    input[type="file"] {
        display: none;
    }

    #img_container {
        position: relative;
        display: inline-block;
        text-align: center;
    }

    #profilepic {
        width: 200px;
    }
</style>
<div class="container-fluid">
    <div class="row" style="padding-bottom: 10px;">
        <div class="col-xs-12">
            <a href="#" style="width: 100% !important;" class="btn btn-success" data-uri="scan://scan" onclick="clickHandler(this.dataset.uri)"><i class="glyphicon glyphicon-screenshot"></i> Open Code Scanner</a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-md-6">
            <div class="panel panel-default">
                <div class="panel-body bg-info">
                    <div id="viewdiv">
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input id="btnEdit" type="button" class="btn btn-primary" value="Edit" />
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div id="img_container">
                                    <img id="profilepic" src="@Url.Content(EDR.Utilities.ApplicationUtility.CheckImageLink(Model.Teacher.ApplicationUser.PhotoUrl))" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Teacher.ApplicationUser.FullName)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.LabelFor(model => model.Teacher.Experience, htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Teacher.Experience) Year(s)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="row">
                                    <dl>
                                        <dt>
                                            @Html.LabelFor(model => model.Teacher.Phone, htmlAttributes: new { @class = "control-label" })
                                        </dt>
                                        <dd>
                                            @Html.DisplayFor(model => model.Teacher.Phone)
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <hr />
                            <dl>
                                <dt>
                                    @Html.Label("About You", htmlAttributes: new { @class = "control-label" })
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Teacher.Resume)
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.Label("Facebook Link", htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    <a href="@Model.Teacher.FacebookLink" title="Facebook Page" style="width: 150px;" target="_blank">
                                        <div class="item-short">@Model.Teacher.FacebookLink</div>
                                    </a>
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Teacher.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    <a href="@Model.Teacher.Website" title="Website" style="width: 150px;" target="_blank">
                                        <div class="item-short">@Model.Teacher.Website</div>
                                    </a>
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Teacher.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Teacher.ContactEmail)
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div id="editdiv" style="display: none;">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @using (Html.BeginForm("Manage", "Teacher", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Teacher.Id)
                            @Html.HiddenFor(model => model.Teacher.ApplicationUser.Id)
                            <div class="text-right" style="padding-bottom: 10px;">
                                <input type="submit" id="btnsave" value="Save" class="btn btn-success" />
                                <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                            </div>
                            <div class="col-lg-12">
                                <div class="col-lg-6">
                                    <div id="img_container">
                                        <img id="profilepic" src="@Url.Content(Model.Teacher.ApplicationUser.PhotoUrl ?? "~/Content/images/NoProfilePic.gif")" />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.DisplayFor(model => model.Teacher.ApplicationUser.FullName)
                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.Label("When did you start Teaching?", htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.TextBoxFor(m => m.Teacher.StartDate, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Teacher.StartDate, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="row">
                                        <dl>
                                            <dt>
                                                @Html.LabelFor(model => model.Teacher.Phone, htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.EditorFor(model => model.Teacher.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Teacher.Phone, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <hr />
                                <dl>
                                    <dt>
                                        @Html.Label("About You", htmlAttributes: new { @class = "control-label" })
                                    </dt>
                                    <dd>
                                        @Html.TextAreaFor(model => model.Teacher.Resume, htmlAttributes: new { @class = "form-control", @style = "width: 100%; max-width: 100%;", @rows = "10" })
                                        @Html.ValidationMessageFor(model => model.Teacher.Resume, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.Label("Facebook Link", htmlAttributes: new { @class = "control-label col-md-2" })
                                    </dt>
                                    <dd>
                                        @Html.EditorFor(model => model.Teacher.FacebookLink, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Teacher.FacebookLink, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.LabelFor(model => model.Teacher.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </dt>
                                    <dd>
                                        @Html.EditorFor(model => model.Teacher.Website, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Teacher.Website, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.LabelFor(model => model.Teacher.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </dt>
                                    <dd>
                                        @Html.EditorFor(model => model.Teacher.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Teacher.ContactEmail, "", new { @class = "text-danger" })
                                    </dd>
                                </dl>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="panel panel-info buttoncontainer">
                <h4 class="col-lg-6 col-md-6 col-sm-6 col-xs-6">My Schools</h4>
                @Html.ActionLink("Add School", "Create", "School", new { role = EDR.Enums.RoleName.Teacher }, new { @class = "btn btn-warning actionbutton" })
                <div class="panel-body">
                    <div class="row">
                    </div>
                    @if (Model.Teacher.Schools != null && Model.Teacher.Schools.Count() > 0)
                    {
                        foreach (var sch in Model.Teacher.Schools.OrderBy(s => s.Name))
                        {
                            <div class="row" style="padding: 2px;">
                                @Html.ActionLink(sch.Name, "View", "School", new { id = sch.Id }, new { @class = "btn btn-link" })
                            </div>
                        }
                    }
                    else
                    {
                        @: No Schools
                }
                    @*<a class="btn btn-primary" href="@Url.Action("ImportClassFromFacebook", "Event")">
                        <h4>More Events...</h4>
                    </a>*@
                </div>
            </div>
            <div class="panel panel-info">
                <h4 class="col-lg-6 col-md-6 col-sm-6 col-xs-6">My Teams</h4>
                <div class="panel-body">
                    <div class="row">
                    </div>
                    @if (Model.Teacher.Teams != null && Model.Teacher.Teams.Count() > 0)
                    {
                        foreach (var t in Model.Teacher.Teams.OrderBy(s => s.Name))
                        {
                            <div class="row" style="padding: 2px;">
                                @Html.ActionLink(t.Name, "View", "Team", new { id = t.Id }, new { @class = "btn btn-link" })
                            </div>
                        }
                    }
                    else
                    {
                        @: No Teams
                }
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body ">
                    <h4>What Styles do you Teach?</h4>
                    @using (Ajax.BeginForm("AddStyle", new AjaxOptions()
                    {
                        UpdateTargetId = "styles",
                        OnSuccess = "done(this)"
                    }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(m => m.Teacher.ApplicationUser.Id)

                        <div class="form-inline">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.NewStyleId, new { @class = "stylesearchid" })
                                <input type="text" placeholder="Dance Style" class="form-control stylesearch" />
                                <input class="btn btn-primary" type="submit" value="Add" />
                            </div>
                        </div>
                    }
                    <div id="styles">
                        @Html.Partial("~/Views/Shared/_DancerStylesPartial.cshtml", new EDR.Models.ViewModels.DancerStylesViewModel() { Id = Model.Teacher.ApplicationUser.Id, Styles = Model.Teacher.DanceStyles.ToList(), Controller = "Teacher" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6">
            <div class="panel panel-default buttoncontainer">
                <div class="panel-body ">
                    <h3>Classes</h3>
                    @Html.ActionLink("Create Class", "Create", "Event", new { eventType = EDR.Enums.EventType.Class }, new { @class = "btn btn-warning actionbutton" })
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Class</th>
                                <th></th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.Teacher.Classes)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(member => item.Name)
                                </td>
                                <td>
                                    @Html.ActionLink("Manage", "Manage", "Event", new { id = item.Id, eventType = EDR.Enums.EventType.Class }, null)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]"></script>
<script src="~/Scripts/browser-deeplink.js"></script>

    <script type="text/javascript">
        deeplink.setup({
            iOS: {
                appId: "698925807",
                appName: "QR Code Reader",
            },
            android: {
                appId: "me.scan.android.client"
            }
        });

        function clickHandler(uri) {
            deeplink.open(uri);
            return false;
        }

        $('.stylesearch').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../DanceStyle/Search',
                    data: { searchString: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            select: function (event, ui) {
                $('.stylesearch').val(ui.item.label);
                $('.stylesearchid').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        function done(form) {
        $('.stylesearch').prop('value', "");
        $('.stylesearchid').prop('value', "");
    }
    $(function () {
        $('#saveform.main').valid();

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            try
            {
                var valid = $('#saveform.main').valid();
            }
            catch(err)
            {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });

        $('#saveform.main').submit(function () {
            var valid = $('#saveform.main').valid();
        });
    });
    </script>
}