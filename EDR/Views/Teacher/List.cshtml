@model EDR.Models.ViewModels.TeacherListViewModel

@{
    ViewBag.Title = "List";
}

<h1 class="text-center">Teachers</h1>

<style>
    .map_canvas {
        width: 100%;
        height: 200px;
    }
</style>

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")

    <script type="text/javascript">
        $('#Style').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("Search", "DanceStyle")',
                    data: { searchString: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            select: function (event, ui) {
                $('#Style').val(ui.item.label);
                $('#DanceStyleId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        $('#Teacher').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("Search", "Teacher")',
                    data: { searchString: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            select: function (event, ui) {
                $('#Teacher').val(ui.item.label);
                $('#TeacherId').val(ui.item.value);
                return false;
            },
            minLength: 1
        });

        $('.formmain').submit(function () {
            var map = $("#Location").geocomplete("map");
            $("#Zoom").val(map.getZoom());
            var bounds = map.getBounds();
            var ne = bounds.getNorthEast(); // LatLng of the north-east corner
            var sw = bounds.getSouthWest(); // LatLng of the south-west corder
            var center = map.getCenter();
            $("#NELat").val(ne.lat());
            $("#NELng").val(ne.lng());
            $("#SWLat").val(sw.lat());
            $("#SWLng").val(sw.lng());
            $("#CenterLat").val(center.lat());
            $("#CenterLng").val(center.lng());
            if ($('#Teacher').val() == "")
            {
                $('#TeacherId').prop('value', "");
            }
            if ($('#Style').val() == "")
            {
                $('#DanceStyleId').prop('value', "");
            }
        });
    </script>
}

<script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="../../Scripts/jquery.geocomplete.js"></script>
<script>
    $(function () {

        var options = {
            map: ".map_canvas"
        };

        $("#Location").geocomplete(options)
          .on("geocode:result", function(event, result){
          });
    });

    $(function () {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(success);
        }

        function success(position) {
            var loc = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            @if (Model.CenterLat != null && Model.CenterLng != null)
            {
                <text>
            loc = new google.maps.LatLng(@Model.CenterLat, @Model.CenterLng);
            </text>
            }
            var map = $("#Location").geocomplete("map");
            //  map.setZoom(0);
            map.setCenter(loc);
        }
    });

    $(function () {
        var map = $("#Location").geocomplete("map");
        @if (Model.Zoom != null)
        {
            <text>
        map.setZoom(@Model.Zoom.ToString());
        </text>
        }
        else
        {
            <text>
        map.setZoom(10);
        </text>
        }
    });

    $(function () {
        //  Map Marker Containers
        var markers = [];
        var infowindows = [];
        //  Map Marker Containers
        //  Build up the Markers
        var map = $("#Location").geocomplete("map");
        @foreach(var s in Model.Teachers)
    {
        <text>
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng('@s.ApplicationUser.Latitude', @s.ApplicationUser.Longitude),
            map: map,
            title: '@s.ApplicationUser.FullName',
            icon: "http://maps.google.com/mapfiles/kml/pal2/icon2.png"
        });

        attachMessage(map, marker, '@s.Id', '@s.ApplicationUser.FullName', '@(s.ApplicationUser.City + ", " + s.ApplicationUser.State + " " + s.ApplicationUser.ZipCode)', '<a href="@Url.Action("Home", "Teacher", new { username = s.ApplicationUser.UserName })">' + '@s.ApplicationUser.FullName' + '</a>');
        markers.push(marker);
        </text>
    }

        function attachMessage(map, marker, num, placeName, address2, link) {
            var message = marker.title;
            var infowindow = new google.maps.InfoWindow({
                disableAutoPan: false,
                maxWidth: 200,
                content: '<div id="content" class="text-center" style="width: 200px;">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<div style="display: block;white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">' +
                link +
                '</div>' +
                '<div id="bodyContent">' +
                '<p>' +
                address2 +
                '</p>' +
                '</div>' +
                '</div>'
            });
            infowindows.push(infowindow);

            //  infowindow.open(map, marker);

            google.maps.event.addListener(marker, 'click', function () {
                clearWindows();
                infowindow.open(map, marker);
            });
        }

        //google.maps.event.addListener(map, 'zoom_changed', function () {
        //    var map = $("#Location").geocomplete("map");
        //    $("#Zoom").val(map.getZoom());
        //});

        function clearWindows() {
            for (var i = 0; i < infowindows.length; i++) {
                infowindows[i].close();
            }
        }
    });
</script>

@using (Html.BeginForm("List", "Teacher", FormMethod.Post, new { @class = "formmain" }))
{
    @Html.HiddenFor(m => m.SearchAddress.Latitude, new { Name = "lat" })
    @Html.HiddenFor(m => m.SearchAddress.Longitude, new { Name = "lng" })
    @Html.HiddenFor(m => m.NELat)
    @Html.HiddenFor(m => m.NELng)
    @Html.HiddenFor(m => m.SWLat)
    @Html.HiddenFor(m => m.SWLng)
    @Html.HiddenFor(m => m.CenterLat)
    @Html.HiddenFor(m => m.CenterLng)
    @Html.HiddenFor(m => m.Zoom)
    <div class="container bg-info text-center" style="padding: 10px;">
        <div class="form-inline">
            <div class="form-group">
                @Html.TextBoxFor(m => m.Location, new { placeholder = "Location", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.HiddenFor(m => m.DanceStyleId)
                @Html.TextBoxFor(m => m.Style, new { placeholder = "Dance Style", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.HiddenFor(m => m.TeacherId)
                @Html.TextBoxFor(m => m.Teacher, new { placeholder = "Teacher", @class = "form-control" })
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<div class="map_canvas"></div>

<table class="table">
    <tr>
        <th>
            @Html.Label("Teacher Name")
        </th>
    </tr>

    @foreach (var item in Model.Teachers)
    {
        <tr>
            <td>
                @Html.ActionLink(item.ApplicationUser.FullName, "Home", "Teacher", new { username = item.ApplicationUser.UserName }, null)
            </td>
        </tr>
    }

</table>
