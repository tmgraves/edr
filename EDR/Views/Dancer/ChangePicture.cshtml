@model EDR.Models.ViewModels.ChangePictureViewModel

@{
    ViewBag.Title = "ChangePicture";
}

<style>
    img {
        max-width: 100%; /* This rule is very important, please do not ignore this! */
    }

    input[type="file"] {
        display: none;
    }
</style>

<div class="container" style="padding: 10px;">
    <h2>Change Picture</h2>
    @ViewBag.Message
    <div class="container">
        <div class="row">
            @*<div class="col-md-2">
            </div>*@
            @*@if (Model.Dancer.UserPictures.Where(x => x.ProfilePicture).FirstOrDefault() != null)
        {
            <img class="img-thumbnail" src="@Url.Content(Model.Dancer.UserPictures.Where(x => x.ProfilePicture).FirstOrDefault().ThumbnailFilename)" />
        }
        else
        {
            <img class="img-thumbnail" src="~/Content/images/NoProfilePic.gif" />
        }*@


            <p>
                <img id="profilepic" class="img-thumbnail" src="@Url.Content(Model.PhotoUrl ?? "~/Content/images/NoProfilePic.gif")" />
            </p>
            <!-- Modal Popup to add new picture -->
            <button id="btnChangePicture" type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalPic">
                Change Picture
            </button>

            <!-- Modal Upload -->
            <div class="modal fade" id="modalPic" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h3 class="picheader">Upload a New Picture</h3>
                        </div>
                        <div class="modal-body">
                            <div id="divPick" class="text-center">
                                <p>
                                    <button id="btnNewPicture" type="button" class="btn btn-primary">
                                        Upload New Picture
                                    </button>
                                </p>
                                <p>
                                    <button id="btnPickFacebook" type="button" class="btn btn-warning">
                                        Choose a Facebook Picture
                                    </button>
                                </p>
                            </div>
                            <div id="divOptions" style="display: none;">
                                <div class="row text-center" style="padding: 5px;">
                                    <div id="divUploadPic" style="display: none;">
                                        <label for="imgInp" class="btn btn-primary btn-lg">
                                            Choose File
                                        </label>
                                        <input id="imgInp" type="file" accept="image/*" />
                                    </div>
                                    <div id="divFacebookPic" style="display: none;">
                                        @if (Model.FacebookPictures != null && Model.FacebookPictures.Count() > 0)
                                    {
                                        foreach (var photo in Model.FacebookPictures.OrderByDescending(photo => photo.PhotoDate))
                                        {
                                                <div class="col-lg-3 thumbnail text-center" style="height: 150px;">
                                                    <div style="height: 100px;">
                                                        <img src="@photo.Source" style="max-height: 100px;" />
                                                    </div>
                                                    <div class="caption">
                                                        <button class="pickfbpic btn btn-info" value="@photo.LargeSource">Pick</button>
                                                    </div>
                                                </div>
                                        }
                                    }
                                    else
                                    {
                                            @:No Facebook pictures found.
                                        }
                                    </div>
                                </div>
                                <div class="row" id="croppic">
                                    <div>
                                        <img class="img-responsive" id="image" alt="">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button id="btnupload" class="btn btn-danger" data-dismiss="modal" style="display: none;">Upload</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal Facebook -->
            @*<div class="modal fade" id="modalFacebook" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h3>Choose a Facebook Picture</h3>
                        </div>
                        <div class="modal-body">
                            <div id="cropfacebookpic" style="display: none;">
                                <img id="facebookpic" src="" style="max-height: 400px;" />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button id="btnuploadFacebook" class="btn btn-danger" data-dismiss="modal" style="display: none;">Upload</button>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
    @*<div id="availablefbpics">
        </div>*@
    @*<ul class="list-inline">
            @foreach (var photo in Model.FacebookPictures.OrderByDescending(photo => photo.PhotoDate))
            {
                <li>
                    <div class="thumbnail">
                        <a href="@photo.Link" target="_blank">
                            @if (photo.Source != null)
                            {
                                <img src="@photo.Source" />
                            }
                        </a>
                        <div class="caption">
                            <button class="pickfbpic btn btn-info" value="@photo.LargeSource">Pick</button>
                        </div>
                    </div>
                </li>
            }
        </ul>*@
    @*@Html.ActionLink("Add to Locker", "AddFacebookPicture", "Dancer", new { id = photo.Id, album = photo.Album, name = photo.Name, largeSource = photo.LargeSource, link = photo.Link, photodate = photo.PhotoDate, source = photo.Source }, htmlAttributes: new { @class = "btn btn-primary" })*@
        @*@using (Html.BeginForm("UploadPicture",
                            "Dancer",
                            FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
        {
            @Html.Partial("~/Views/Shared/_FileUploadPartial.cshtml")
        }*@
        @*<div class="form-group form-inline">
            <input type="file" name="file" id="file" class="form-control" accept="image/*" />
            <input id="submit" type="submit" class="btn btn-default" value="Submit" />
        </div>
        <p>
            @ViewBag.Message
        </p>

        <script type="text/javascript">
        $('#submit').click(function () {
            //  Check file type is image
            var fupload = document.getElementById("file");
            if (fupload.files[0].type.match('image/*')) {
                return true;
            }
            else {
                alert("You must select an image file for upload");
                return false;
            }
            //  Check file type is image

            //check whether browser fully supports all File API
                if (window.File && window.FileReader && window.FileList && window.Blob) {
                    //get the file size and file type from file input field
                    var fsize = $('#file')[0].files[0].size;

                    if (fsize > 1048576) //do something if file size more than 1 mb (1048576)
                    {
                        alert("File is too big.  Please try another.");
                        return false;
                    } else {
                        return true;
                    }
                } else {
                    alert("Please upgrade your browser, because your current browser lacks some new features we need!");
                }
            });
        </script>*@



        @*<div class="row">
            <div class="col-md-12 ">
                <h4>Available Pictures</h4>
                <ul class="list-inline">
                    @if (Model.Dancer.UserPictures != null && Model.Dancer.UserPictures.Count > 0)
                    {
                        foreach (var photo in Model.Dancer.UserPictures)
                        {
                            <li style="vertical-align: top; width: 150px;">
                                <div class="photoTile">
                                    <img class="img-thumbnail" src="@Url.Content(photo.ThumbnailFilename)" />
                                </div>
                                @if (!photo.ProfilePicture)
                                {
                                    <a title="Make Profile Picture" href="@Url.Action("ProfilePicture", "Dancer", new { id = photo.Id })">
                                        <i class="glyphicon glyphicon-user btn btn-primary"></i>
                                        <span class="sr-only">Edit</span>
                                    </a>
                                    <a title="Delete Picture" href="@Url.Action("DeletePicture", "Dancer", new { pictureId = photo.Id })" onclick="return confirm('Are you sure you want to DELETE this picture?')">
                                        <i class="glyphicon glyphicon glyphicon-remove btn btn-danger"></i>
                                        <span class="sr-only">Delete</span>
                                    </a>
                                }
                            </li>
                        }
                    }
                    else
                    {
                        @:You have no pictures.
                }
                </ul>
            </div>
        </div>*@

    @*@if (Model.Dancer.CurrentRole != null)
    {
        if (Model.Dancer.CurrentRole.Name == "Owner")
        {
            <a class="btn btn-primary" href="@Url.Action("Home", "Owner", new { username = Model.Dancer.UserName })">Back to Owner Page</a>
        }
        else if (Model.Dancer.CurrentRole.Name == "Promoter")
        {
            <a class="btn btn-primary" href="@Url.Action("Home", "Promoter", new { username = Model.Dancer.UserName })">Back to Promoter Page</a>
        }
        else if (Model.Dancer.CurrentRole.Name == "Teacher")
        {
            <a class="btn btn-primary" href="@Url.Action("Home", "Teacher", new { username = Model.Dancer.UserName })">Back to Teacher Page</a>
        }
    }
    else
    {
            <a class="btn btn-primary" href="@Url.Action("Home", "Dancer", new { username = Model.Dancer.UserName })">Back to Dancer Page</a>
    }*@
</div>

@section Scripts
{
    <!-- Scripts -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    <link href="../../Content/cropper.css" rel="stylesheet">
    <script src="../../Scripts/cropper.js"></script>

    <script>
        function loadImage(input) {
            if (input.files && input.files[0]) {
                if (input.files[0].size < 1000000)
                {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#image').cropper({
                            aspectRatio: 10 / 10,
                            zoomable: false,
                        });
                        $("#image").cropper('replace', e.target.result);
                        $("#btnupload").show();
                    }

                    reader.readAsDataURL(input.files[0]);
                }
                else
                {
                    alert("Pick a smaller file");
                }
            }
        }

        $("#imgInp").change(function () {
            loadImage(this);
            $("#croppic").show();
        });

        $(function () {
            $('#btnupload').click(function () {
                try {
                    var imageData = $("#image").cropper("getCroppedCanvas").toDataURL('png', 1);
                    $.ajax({
                        url: "@Url.Action("UploadImageAsync", "Dancer")",
                        type: 'POST',
                        data: { 'imageData': imageData },
                        dataType: 'json',
                        timeout: 300000,
                        success: function (result) {
                            var status;
                            var filePath;
                            $.each(result, function (key, value) {
                                if (key == "UploadStatus")
                                {
                                    status = value;
                                }
                                else{
                                    filePath = value;
                                }
                            });
                            if (status == "Success")
                            {
                                $('#profilepic').attr('src', filePath);
                                $("#image").cropper('destroy');
                                $('#image').attr('src', "");
                                $("#btnupload").hide();
                            }
                            else
                            {
                                alert("Upload Failed");
                            }
                        }
                    });
                }
                catch (err) {
                    alert(err.message);
                }
            });

            $('#btnChangePicture').click(function () {
                $('#divPick').show();
                $('#divOptions').hide();
            });

            $('#btnNewPicture').click(function () {
                $('#divPick').hide();
                $('#divOptions').show();
                $('#divUploadPic').show();
                $('#divFacebookPic').hide();
                $('#croppic').hide();
                $('#image').attr('src', "");
            });

            $('#btnPickFacebook').click(function () {
                $('#divPick').hide();
                $('#divOptions').show();
                $('#divUploadPic').hide();
                $('#divFacebookPic').show();
                $('#croppic').hide();
                $('#image').attr('src', "");

                @*$.ajax({
                    url: '@Url.Action("GetFacebookPictures", "Dancer")',
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        var row = ""
                        $.each(data, function (index, item) {
                            row += "<div class='col-lg-3 thumbnail text-center' style='height: 150px;'>" +
                                "<div style='height: 100px;'>" +
                                    "<img src='" + item.Thumbnail + "' style='max-height: 100px;' />" +
                                "</div>" +
                                "<div class='caption'>" +
                                    "<button class='pickfbpic btn btn-info' value='" + item.Url + "'>Pick</button>" +
                                "</div>" +
                            "</div>"
                        });
                        $(row).find('.pickfbpic').click(function () {
                            alert("here");
                        }).end();
                        $("#availablefbpics").html(row);
                    }
                })*@
                });

            $('.pickfbpic').click(function () {
                var src = $(this).prop('value');
                $('#image').attr('src', src);
                $('#croppic').show();
                $('#divFacebookPic').hide();
                $('#image').cropper({
                    aspectRatio: 10 / 10,
                    zoomable: false,
                });
                $("#image").cropper('replace', src);
                $("#btnupload").show();
            });

            //$('#btnuploadFacebook').click(function () {
            //    try {
            //        var imageData = $("#facebookpic").cropper("getCroppedCanvas").toDataURL('png', 1);
            //        $.ajax({
            //            url: "@Url.Action("UploadImageAsync", "Dancer")",
            //            type: 'POST',
            //            data: { 'imageData': imageData },
            //            dataType: 'json',
            //            timeout: 300000,
            //            success: function (result) {
            //                var status;
            //                var filePath;
            //                $.each(result, function (key, value) {
            //                    if (key == "UploadStatus") {
            //                        status = value;
            //                    }
            //                    else {
            //                        filePath = value;
            //                    }
            //                });
            //                if (status == "Success") {
            //                    $('#profilepic').attr('src', filePath);
            //                    $("#facebookpic").cropper('destroy');
            //                    $('#facebookpic').attr('src', "");
            //                    $("#btnuploadFacebook").hide();
            //                }
            //                else {
            //                    alert("Upload Failed");
            //                }
            //            }
            //        });
            //    }
            //    catch (err) {
            //        alert(err.message);
            //    }
            //});
        });
    </script>
}
