@model EDR.Models.ViewModels.DancerManageViewModel

@{
    ViewBag.Title = "Manage My Profile";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("All Dancers", "List", "Dancer")</li>
    <li>@Html.ActionLink("Dancer Profile", "Home", "Dancer", new { username = Model.Dancer.UserName }, new { })</li>
    <li class="active">Manage Profile</li>
</ol>

<div class="container-fluid">
    <div>
        <div class="panel panel-default">
            <div class="panel-body bg-info">
                <div id="viewdiv">
                    <div class="buttoncontainer">
                        <input id="btnEdit" type="button" class="btn btn-primary actionbutton" value="Edit" />
                        <div>
                            <div id="img_container" class="buttoncontainer">
                                <img id="profilepic" src="@Url.Content(Model.Dancer.PhotoUrl ?? "~/Content/images/NoProfilePic.gif")" />
                                <button id="btnChangePicture" type="button" class="btn btn-info actionbutton" data-toggle="modal" data-target="#modalPic">
                                    Change
                                </button>
                            </div>
                        </div>
                        <div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @Html.DisplayFor(model => model.Dancer.FullName, new { @class = "" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.LabelFor(model => model.Dancer.Experience, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @Html.DisplayFor(model => model.Dancer.Experience) Year(s)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.LabelFor(model => model.Dancer.Location, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @Html.DisplayFor(model => model.Dancer.Location)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("Facebook", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    <a rel="nofollow" href='https://www.facebook.com/@Model.Dancer.FacebookUsername' target="_blank" class="btn btn-primary btn-sm" title="@Model.Dancer.FacebookUsername">
                                        Facebook Page
                                    </a>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("Instagram", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @if (Model.Dancer.InstagramUsername == null)
                                    {
                                        <a class="btn btn-primary" href=@Url.Action("AddInstagram", "SocialMedia", null) title="Link to your Instagram" style="width: 150px;">
                                            <img class="img-rounded" style="height: 30px;" src="@Url.Content("~/Content/images/instagram.png")" />
                                            Add Instagram
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(m => m.Dancer.InstagramUsername)
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("Spotify", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @if (Model.Dancer.SpotifyId == null)
                                    {
                                        <a class="btn btn-primary btn-sm" href=@Url.Action("AddSpotify", "SocialMedia", null) title="Link to your Spotify">
                                            <img class="img-rounded" style="height: 30px;" src="@Url.Content("~/Content/images/spotify.png")" />
                                            Add Spotify
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(m => m.Dancer.SpotifyId)
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("Playlist", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    <div class="row">
                                        @if (Model.Dancer.SpotifyId != null)
                                        {
                                            <iframe class="spotifyplayer" src="https://embed.spotify.com/?uri=@Model.Dancer.SpotifyUri" width="50" height="100" frameborder="0" allowtransparency="true"></iframe>
                                            @*<div class="item-short">@Model.Dancer.SpotifyUri</div>*@
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-3">
                                    @Html.Label("YouTube", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-xs-9">
                                    @Html.DisplayFor(model => model.Dancer.YouTubeUsername)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="editdiv" style="display: none;">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    @using (Html.BeginForm("Manage", "Dancer", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Dancer.Id)
                        @Html.HiddenFor(model => model.Dancer.UserName)
                        @Html.HiddenFor(model => model.Dancer.Email)
                        @Html.HiddenFor(model => model.Dancer.Latitude)
                        @Html.HiddenFor(model => model.Dancer.Longitude)
                        @Html.HiddenFor(model => model.Dancer.PhotoUrl)
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input type="submit" id="btnsave" value="Save" class="btn btn-success" />
                            <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                        </div>

                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div id="img_container">
                                    <img id="profilepic" src="@Url.Content(Model.Dancer.PhotoUrl ?? "~/Content/images/NoProfilePic.gif")" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-6" style="padding: 0px !important;">
                                        <dl>
                                            <dt>
                                                @Html.Label("First Name", htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.EditorFor(model => model.Dancer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Dancer.FirstName, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                    <div class="col-lg-6" style="padding: 0px !important;">
                                        <dl>
                                            <dt>
                                                @Html.Label("Last Name", htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.EditorFor(model => model.Dancer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Dancer.LastName, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12" style="padding: 0px !important;">
                                        <dl>
                                            <dt>
                                                @Html.LabelFor(model => model.Dancer.StartDate, htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.TextBoxFor(m => m.Dancer.StartDate, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Dancer.StartDate, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12" style="padding: 0px !important;">
                                        <dl>
                                            <dt>
                                                @Html.LabelFor(model => model.Dancer.Location, htmlAttributes: new { @class = "control-label" })
                                            </dt>
                                            <dd>
                                                @Html.TextBoxFor(model => model.Dancer.Location, new { @class = "form-control", @placeholder = "Enter your Location" })
                                                @Html.ValidationMessageFor(model => model.Dancer.Location, "", new { @class = "text-danger" })
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.Label("Facebook Username", htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @Html.DisplayFor(m => m.Dancer.FacebookUsername)
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Dancer.InstagramUsername, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Dancer.InstagramUsername)
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Dancer.SpotifyId, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Dancer.SpotifyId)
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.Label("Spotify Playlist Uri", htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @if (Model.Dancer.SpotifyToken != null)
                                    {
                                        @Html.DropDownListFor(m => m.Dancer.SpotifyUri, Model.SpotifyPlaylists.Select(p => new SelectListItem() { Text = p.name, Value = p.uri }), "", new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        <a class="btn btn-primary btn-sm" href=@Url.Action("AddSpotify", "SocialMedia", null) title="Link to your Spotify">
                                            <img class="img-rounded" style="height: 30px;" src="@Url.Content("~/Content/images/spotify.png")" />
                                            Add Spotify
                                        </a>
                                    }
                                    @*<div class="item-short">@Model.Dancer.SpotifyUri</div>*@
                                    @*@Html.EditorFor(model => model.Dancer.SpotifyUri, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Dancer.SpotifyUri, "", new { @class = "text-danger" })*@
                                </dd>
                            </dl>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.LabelFor(model => model.Dancer.YouTubeUsername, htmlAttributes: new { @class = "control-label col-md-2" })
                                </dt>
                                <dd>
                                    @Html.EditorFor(model => model.Dancer.YouTubeUsername, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Dancer.YouTubeUsername, "", new { @class = "text-danger" })
                                </dd>
                            </dl>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="panel with-nav-tabs panel-default">
            <div class="panel-heading nospace" style="border-bottom: none !important;">
                <ul class="nav nav-tabs nav-tabs-justified nospace">
                    <li class="nospace active"><a href="#tabRegistrations" data-toggle="tab"><h4 class="nospace">Registrations</h4></a></li>
                    <li class="nospace"><a href="#tabTickets" data-toggle="tab"><h4 class="nospace">Tickets</h4></a></li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade in active" id="tabRegistrations">
                        <div class="text-center">
                            <div id="myButtons" class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary btn-sm active">
                                    <input type="radio" name="options" id="listbtn" autocomplete="off" checked class="rbutton"> List View
                                </label>
                                <label class="btn btn-primary btn-sm">
                                    <input type="radio" name="options" id="calendarbtn" autocomplete="off" class="rbutton"> Calendar View
                                </label>
                            </div>
                        </div>
                        <div id="listdiv">
                            <div class="text-center" style="padding: 10px;">
                                <label><input type="radio" name="pastpresent" value="present" checked> Present</label>
                                <label><input type="radio" name="pastpresent" value="past"> Past</label>
                            </div>
                            <div id="presentdiv">
                                <table class="table table-condensed table-hover">
                                    <thead>
                                        <tr>
                                            <th>Date/Time</th>
                                            <th>Class/Social</th>
                                            <th>Code</th>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model.Dancer.EventRegistrations.Where(r => r.Instance.DateTime >= DateTime.Today).OrderBy(r => r.Instance.DateTime))
                                    {
                                        @*<tr>
                                            <td colspan="3">
                                                https://@Request.Url.Host/Event/CheckinByCode/@item.Id
                                            </td>
                                        </tr>*@
                                        <tr>
                                            <td style="max-width: 75px;">
                                                @item.Instance.DateTime.ToString("ddd, M/d")<br />
                                                @@@Convert.ToDateTime(item.Instance.StartTime).ToShortTimeString()
                                            </td>
                                            <td style="max-width: 150px;">
                                                <a href=@Url.Action((item.Instance.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social).ToString(), "Event", new { id = item.Instance.EventId }) title="@item.Instance.Event.Name">
                                                    <div class="oneline">@item.Instance.Event.Name</div>
                                                </a>
                                                @*@Html.ActionLink(item.Instance.Event.Name, "View", "Event", new { id = item.Instance.EventId, eventType = item.Instance.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social }, null)*@
                                            </td>
                                            <td style="max-width: 50px;">
                                                <input type="hidden" class="registrantname" value="@(item.FirstName + " " + item.LastName)" />
                                                @if (item.Checkedin != null)
                                                {
                                                    <div class="btn btn-success">
                                                        <i class="glyphicon glyphicon-ok"></i>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <button id="btnCheckIn" type="button" class="btn btn-success" data-toggle="modal" data-target="#modalRegistrationCode" value="@("https://" + Request.Url.Host + "/Event/CheckinByCode/" + item.Id)">
                                                        <i class="glyphicon glyphicon-qrcode"></i>
                                                        @*<img style="max-width: 100%;" src="~/Content/images/qrsample.png" />*@
                                                    </button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <div id="pastdiv" style="display: none;">
                                <table class="table table-condensed table-hover">
                                    <thead>
                                        <tr>
                                            <th>Date/Time</th>
                                            <th>Class/Social</th>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model.Dancer.EventRegistrations.Where(r => r.Instance.DateTime < DateTime.Today).OrderByDescending(r => r.Instance.DateTime))
                                    {
                                        <tr>
                                            <td style="max-width: 100px;">
                                                @item.Instance.DateTime.ToString("ddd, M/d")
                                                @@ @Convert.ToDateTime(item.Instance.StartTime).ToShortTimeString()
                                            </td>
                                            <td style="max-width: 200px;">
                                                <a href=@Url.Action((item.Instance.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social).ToString(), "Event", new { id = item.Instance.EventId }) title="@item.Instance.Event.Name">
                                                    <div class="oneline">@item.Instance.Event.Name</div>
                                                </a>
                                                @*@Html.ActionLink(item.Instance.Event.Name, "View", "Event", new { id = item.Instance.EventId, eventType = item.Instance.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social }, null)*@
                                            </td>
                                            @*<td style="max-width: 40px;">
                                                    <img style="max-width: 100%;" src="~/Content/images/qrsample.png" />
                                                </td>*@
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                        <div id='script-warning'>
                            <code>php/get-events.php</code> must be running.
                        </div>
                        <div id='loading'>loading...</div>
                        <div id='calendar'></div>
                    </div>
                    <div class="tab-pane fade" id="tabTickets">
                        <div class="text-center" style="padding: 10px;">
                            <label><input type="radio" name="usedtickets" value="available" checked> Available</label>
                            <label><input type="radio" name="usedtickets" value="used"> Used</label>
                        </div>
                        <div id="availableticketsdiv">
                            <table class="table table-condensed">
                                <thead>
                                    <tr>
                                        <th>Ticket</th>
                                        <th class="text-center">Purchased</th>
                                        <th class="text-center">Qty</th>
                                        <th class="text-center">Used/Total</th>
                                    </tr>
                                </thead>
                                @foreach (var item in Model.Dancer.Tickets.Where(t => t.EventRegistrations.Count() < (t.Quantity * t.Ticket.Quantity)))
                                {
                                    <tr>
                                        <td class="text-left">
                                            <p>
                                                @if (item.Ticket.EventId != null)
                                                {
                                                    <a href="@Url.Action((item.Ticket.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social).ToString(), "Event", new { id = item.Ticket.EventId })">
                                                        @item.Ticket.Event.Name
                                                    </a>
                                                }
                                                else
                                                {
                                                    @Html.ActionLink(item.Ticket.School.Name, "View", "School", new { id = item.Ticket.SchoolId, school = EDR.Utilities.ApplicationUtility.ToUrlSlug(item.Ticket.School.Name), location = EDR.Utilities.ApplicationUtility.ToUrlSlug(item.Ticket.School.City) }, null)
                                                }
                                            </p>
                                            @(String.Format("{0:N0}", item.Ticket.Quantity) + " tix for " + String.Format("{0:C}", item.Ticket.Price))
                                        </td>
                                        <td class="text-center" style="vertical-align: bottom;">
                                            @item.DatePurchased.ToShortDateString()
                                        </td>
                                        <td class="text-right" style="vertical-align: bottom;">
                                            @String.Format("{0:N0}", item.Quantity)
                                        </td>
                                        <td class="text-right" style="vertical-align: bottom;">
                                            @String.Format("{0:N0}", item.EventRegistrations.Count())/<b>@String.Format("{0:N0}", item.Quantity * item.Ticket.Quantity)</b>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div id="usedticketsdiv" style="display: none;">
                            <table class="table table-condensed">
                                <thead>
                                    <tr>
                                        <th>Ticket</th>
                                        <th class="text-center">Purchased</th>
                                        <th class="text-center">Qty</th>
                                        <th class="text-center">Used/Total</th>
                                    </tr>
                                </thead>
                                @foreach (var item in Model.Dancer.Tickets.Where(t => t.EventRegistrations.Count() >= (t.Quantity * t.Ticket.Quantity)))
                                {
                                    <tr>
                                        <td class="text-left">
                                            <p>
                                                @if (item.Ticket.EventId != null)
                                                {
                                                    <a href="@Url.Action((item.Ticket.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social).ToString(), "Event", new { id = item.Ticket.EventId })">
                                                        @item.Ticket.Event.Name
                                                    </a>
                                                }
                                                else
                                                {
                                                    @Html.ActionLink(item.Ticket.School.Name, "View", "School", new { id = item.Ticket.SchoolId, school = EDR.Utilities.ApplicationUtility.ToUrlSlug(item.Ticket.School.Name), location = EDR.Utilities.ApplicationUtility.ToUrlSlug(item.Ticket.School.City) }, null)
                                                }
                                            </p>
                                            @(String.Format("{0:N0}", item.Ticket.Quantity) + " tix for " + String.Format("{0:C}", item.Ticket.Price))
                                        </td>
                                        <td class="text-center" style="vertical-align: bottom;">
                                            @item.DatePurchased.ToShortDateString()
                                        </td>
                                        <td class="text-right" style="vertical-align: bottom;">
                                            @String.Format("{0:N0}", item.Quantity)
                                        </td>
                                        <td class="text-right" style="vertical-align: bottom;">
                                            @String.Format("{0:N0}", item.EventRegistrations.Count())/<b>@String.Format("{0:N0}", item.Quantity * item.Ticket.Quantity)</b>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="nospace">Dance Styles</h4>
            </div>
            <div class="panel-body ">
                @using (Ajax.BeginForm("AddStyle", new AjaxOptions()
                {
                    UpdateTargetId = "styles",
                    OnSuccess = "done(this)"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.Dancer.Id)
                    @Html.HiddenFor(s => s.NewStyleId, new { @class = "stylesearchid" })
                    <div class="form-inline">
                        <div class="form-group">
                            <div class="col-md-10 col-lg-10 input-group">
                                <input type="text" placeholder="Dance Style" class="form-control stylesearch" />
                                <div class="input-group-btn">
                                    <input class="btn btn-primary" type="submit" value="Add" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div id="styles">
                    @Html.Partial("~/Views/Shared/_DancerStylesPartial.cshtml", new EDR.Models.ViewModels.DancerStylesViewModel() { Id = Model.Dancer.Id, Styles = Model.Dancer.DanceStyles.ToList(), Controller = "Dancer" })
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="nospace">Performance Teams</h4>
            </div>
            <div class="panel-body">
                <table class="table table-striped table-condensed">
                    @foreach (var item in Model.Dancer.OrganizationMembers.Select(m => m.Organization).OfType<EDR.Models.Team>())
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.Name, "View", "Team", new { id = item.Id }, new { @class = "text-primary text-left", @style = "text-align: left !important; width: 100% !important; max-width: 100% !important;" })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal Registration Code -->
<div class="modal fade" id="modalRegistrationCode" tabindex="-1" role="dialog" aria-labelledby="myModalRegistrationCode">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 id="regtitle" class="nospace">Your Registration Code</h4>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <h4 id="registrant"></h4>
                    <div class="barcode" style="display: inline-block; text-align: center;"><input class="regid" type="hidden" /></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Registration Code -->


@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    @Scripts.Render("~/bundles/jqueryUI")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
    <link href="~/Content/fullcalendar/fullcalendar.css" rel="stylesheet" />
    <link href="~/Content/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print" />
    <script src="~/Scripts/fullcalendar/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar/fullcalendar.js"></script>
    <script src="~/Scripts/jquery-qrcode-0.14.0.js"></script>

    <script type="text/javascript">
    $.validator.setDefaults({
        ignore: ""
    })

    $('#modalRegistrationCode').on('show.bs.modal', function (e) {
        var par = $(e.relatedTarget).parent();
        var name = par.find('.registrantname').val();
        $('#registrant').text(name);

        var regid = $(e.relatedTarget).prop('value');
        $('.barcode').empty();
        $('.barcode').qrcode({
            "render": "div",
            "size": 200,
            "color": "#3a3",
            "text": regid
        });
        //  $('#rehearsalId').val(rehearsalid);
    })

    $('input[name="pastpresent"]').on('change', function (e) {
        if ($('input[name="pastpresent"]:checked').val() == "present")
        {
            $('#presentdiv').show();
            $('#pastdiv').hide();
        }
        else
        {
            $('#presentdiv').hide();
            $('#pastdiv').show();
        }
    });

    $('input[name="usedtickets"]').on('change', function (e) {
        if ($('input[name="usedtickets"]:checked').val() == "available") {
            $('#availableticketsdiv').show();
            $('#usedticketsdiv').hide();
        }
        else {
            $('#availableticketsdiv').hide();
            $('#usedticketsdiv').show();
        }
    });
    
    //$('input[type="radio"]').on('click change', function (e) {
    //    alert("here");
    //});

    $("#calendar").hide();
    $('#listbtn').parent().on("click", function () {
        $('#listdiv').show();
        $("#calendar").hide();
    });

    $('#calendarbtn').parent().on("click", function () {
        $('#listdiv').hide();
        $("#calendar").show();
        $('#calendar').fullCalendar('render');
    });

    $('#calendar').fullCalendar({
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'agendaWeek, month'
        },
        defaultDate: new Date(),
        defaultView: 'agendaWeek',
        editable: false,
        eventLimit: true, // allow "more" link when too many events
        events: {
            url: '@Url.Action("GetEventRegitrations", "Dancer")',
            traditional: true,
            data: {
                id: '@Model.Dancer.Id',
            },
            error: function () {
                $('#script-warning').show();
            },
        },
        views: {
            month: { // name of view
                titleFormat: 'MMM YYYY'
                // other view-specific options here
            },
            basicWeek: { // name of view
                titleFormat: 'MMM DD'
                // other view-specific options here
            }
        },
        loading: function (bool) {
            $('#loading').toggle(bool);
        },
        //eventAfterAllRender: function (view) {
        //    $("#calendar").css({ "visibility": "hidden" });
        //    $("#calendar").hide();
        //}
    });

        $('.stylesearch').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("Search", "DanceStyle")',
                data: { searchString: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.Name,
                            value: item.Id
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('.stylesearch').val(ui.item.label);
            $('.stylesearchid').val(ui.item.value);
            return false;
        },
        minLength: 1
    });

    function done(form) {
        $('.stylesearch').prop('value', "");
        $('.stylesearchid').prop('value', "");
    }

    $(function () {
        $('#saveform.main').valid();

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            try
            {
                var valid = $('#saveform.main').valid();
            }
            catch(err)
            {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });

        $('#saveform.main').submit(function () {
            var valid = $('#saveform.main').valid();
        });
    });
    </script>

    <script type="text/javascript">
        $(function () {
        $("#Dancer_Location").geocomplete({
            details: "form",
            types: ["geocode", "establishment"],
        })
        .bind("geocode:result", function (event, result) {
            $('#Dancer_Latitude').prop("value", result.geometry.location.lat());
            $('#Dancer_Longitude').prop("value", result.geometry.location.lng());
        });
    });

    </script>

    //  Change Image
    <link href="../../Content/cropper.css" rel="stylesheet">
    <script src="../../Scripts/cropper.js"></script>

    <script>
        function loadImage(input) {
            if (input.files && input.files[0]) {
                if (input.files[0].size < 10000000)
                {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#image').cropper({
                            aspectRatio: 10 / 10,
                            zoomable: false,
                            viewMode: 2,
                        });
                        $("#image").cropper('replace', e.target.result);
                        $("#btnupload").show();
                    }

                    reader.readAsDataURL(input.files[0]);
                }
                else
                {
                    alert("Pick a smaller file");
                }
            }
        }

        $("#imgInp").change(function () {
            loadImage(this);
            $("#croppic").show();
        });

        $(function () {
            $('#btnupload').click(function () {
                try {
                    var imageData = $("#image").cropper("getCroppedCanvas").toDataURL('png', 1);
                    $.ajax({
                        url: "@Url.Action("UploadImageAsync", "Dancer")",
                        type: 'POST',
                        data: { 'imageData': imageData },
                        dataType: 'json',
                        timeout: 300000,
                        success: function (result) {
                            var status;
                            var filePath;
                            $.each(result, function (key, value) {
                                if (key == "UploadStatus")
                                {
                                    status = value;
                                }
                                else{
                                    filePath = value;
                                }
                            });
                            if (status == "Success")
                            {
                                $('#profilepic').attr('src', filePath);
                                $("#image").cropper('destroy');
                                $('#image').attr('src', "");
                                $("#btnupload").hide();
                            }
                            else
                            {
                                alert("Upload Failed");
                            }
                        }
                    });
                }
                catch (err) {
                    alert(err.message);
                }
            });

            $('#btnChangePicture').click(function () {
                $('#divPick').show();
                $('#divOptions').hide();
            });

            $('#btnNewPicture').click(function () {
                $('#divPick').hide();
                $('#divOptions').show();
                $('#divUploadPic').show();
                $('#divFacebookPic').hide();
                $('#croppic').hide();
                $('#image').attr('src', "");
            });

            $('#btnPickFacebook').click(function () {
                $('#divPick').hide();
                $('#divOptions').show();
                $('#divUploadPic').hide();
                $('#divFacebookPic').show();
                $('#croppic').hide();
                $('#image').attr('src', "");
                });

            $('.pickfbpic').click(function () {
                var src = $(this).prop('value');
                $('#image').attr('src', src);
                $('#croppic').show();
                $('#divFacebookPic').hide();
                $('#image').cropper({
                    aspectRatio: 10 / 10,
                    zoomable: false,
                    viewMode: 2,
                });
                $("#image").cropper('replace', src);
                $("#btnupload").show();
            });
        });
    </script>
}
