@model EDR.Models.ViewModels.HomeIndexViewModel

@{
    ViewBag.Title = "Social Dancing Classes & Events";
    ViewBag.Keywords = "Social Dance Classes Workshops Events " + String.Join(" ", Model.DanceStyles.Select(d => d.Name).ToArray());
    ViewBag.Description = "Your resource for social dance events & classes.  Explore " + String.Join(", ", Model.DanceStyles.Select(d => d.Name).ToArray()) + ".";
}
@section jumbotron
{
    <div class="jumbotron" style="background: url(/Content/images/dancebanner.jpg) no-repeat; background-size: cover; position: relative; padding: 0px !important;">
        <div style="max-height:100%;background:#fff;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0.6;filter:alpha(opacity=50);z-index:1;"></div>
        <div class="container" style="z-index:2; position:relative;">
            <div class="row text-center">
                <div style="height: 350px; padding: 30px;">
                    <span style="line-height: 100%; vertical-align: middle;"></span><img src="~/Content/images/Eat_Dance_Repeat_Small.png" style="max-height: 100%;" />
                </div>
                @*<img src="~/Content/images/eatdancerepeat.png" style="width: 75%;" />
                <h3 class="text-info" style="margin-top: 50px;">Your source for everything social dance related</h3>*@
                @*<h1 style="font-family: 'Lucida Console', monospace">Eat. Dance. Repeat.</h1>*@
                @*<form id="bootstrapSelectForm" method="post" class="form-horizontal">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-primary btn-lg dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                            Are You
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li role="presentation">@Html.ActionLink("a New Visitor?", "View", "Visitor", null, null)</li>
                            <li role="presentation">@Html.ActionLink("a Dancer?", "Home", "Dancer", new { username = User.Identity.IsAuthenticated ? User.Identity.Name : "NotLoggedIn" }, null)</li>
                            <li role="presentation">@Html.ActionLink("a Teacher?", "Home", "Teacher", new { username = User.Identity.IsAuthenticated ? User.Identity.Name : "NotLoggedIn" }, null)</li>
                            <li role="presentation">@Html.ActionLink("a Promoter?", "Home", "Promoter", new { username = User.Identity.IsAuthenticated ? User.Identity.Name : "NotLoggedIn" }, null)</li>
                            <li role="presentation">@Html.ActionLink("a Studio/Club/Restaurant Owner?", "Home", "Owner", new { username = User.Identity.IsAuthenticated ? User.Identity.Name : "NotLoggedIn" }, null)</li>
                        </ul>
                    </div>
                </form>*@
            </div>
        </div>
</div>
}
<div class="row text-center">
    <h2>Events in Your Area</h2>
    <div class="form-inline text-center col-lg-12">
        <div class="col-lg-3">
        </div>
        <div class="form-group col-lg-6">
            <div class="input-group input-group-lg" style="max-width: 100% !important; width: 100% !important;">
                <input type="text" id="location" class="form-control" style="max-width: 100% !important; width: 100% !important;" />
                <div class="input-group-btn">
                    <button id="search" type="button" style="max-width: 100% !important; width: 100% !important;" class="btn btn-primary">Search</button>
                </div><!-- /btn-group -->
            </div>
        </div>
        <div class="col-lg-3">
        </div>
    </div>
</div>
<input id="lat" hidden="hidden" />
<input id="lng" hidden="hidden" />
<div id="events">
</div>

<div class="row text-center" id="styles" style="background-color: #eee; margin-top: 40px;">
    <div class="row">
        <h2>Popular Dance Styles</h2>
    </div>
    <div class="row">
        @foreach (var item in Model.DanceStyles.OrderByDescending(s => s.Events.Count()).Take(4).ToList())
        {
            <div class="col-lg-3 col-md-3">
                @Html.DisplayFor(i => item, "DanceStyle")
            </div>
        }
    </div>
    <div style="padding: 10px;">
        <h4>Looking for a specific style? @Html.ActionLink("Explore all Dance Styles", "Explore")</h4>
    </div>
</div>
<div class="row">
    <div class="text-center col-lg-8 col-md-8 col-lg-offset-2 col-md-offset-2" style="padding: 10px;">
        <ul class="nav nav-pills nav-justified" role="tablist">
            <li>
                <div class="fb-like" data-href="https://developers.facebook.com/eatdancerepeat" data-layout="button_count" data-action="like" data-size="small" data-show-faces="true" data-share="true"></div>
            </li>
            <li>
                <a rel="nofollow" title="Follow Eat Dance Repeat on Facebook" href="https://www.facebook.com/eatdancerepeat" target="_blank"><img src="~/Content/images/FindUsonFacebook.png" /></a>
            </li>
            <li>
                <a href="https://twitter.com/intent/tweet?screen_name=eatdancerepeat" class="twitter-mention-button" data-show-count="false">Tweet to @@eatdancerepeat</a>
                <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
            </li>
        </ul>
    </div>
</div>

<div id="fb-root"></div>
<script>
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7&appId=729899787046926";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

@section Scripts
{
<link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jqueryUI")
@Scripts.Render("~/bundles/GeoComplete")
<script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="../../Scripts/jquery.geocomplete.js"></script>
<link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
<script src="~/Scripts/jquery.rateyo.js"></script>

<script>
    $(function () {
        $("#search").click(function () {
            LoadEvents($("#lat").val(), $("#lng").val());
        });
    });

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(success);
    }

    function success(position) {
        var loc = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        //  LoadEvents(loc.lat(), loc.lng());
        //  alert(JSON.stringify(loc));
        //  buildLocation(loc);
        buildLocation(position.coords.latitude.toString() + ", " + position.coords.longitude.toString());
    }

    function buildLocation(loc) {
        //  alert("search");
        var options = {
            location: loc
        };

        $("#location").geocomplete(options)
        .bind("geocode:result", function (event, result) {
            var city;
            var state;
            var country;
            $('#lat').prop("value", result.geometry.location.lat());
            $('#lng').prop("value", result.geometry.location.lng());
            $.each(result.address_components, function (i, address_component) {
                if (address_component.types[0] == "locality") {
                    city = address_component.long_name;
                }
                else if (address_component.types[0] == "administrative_area_level_1") {
                    state = address_component.long_name;
                }
                else if (address_component.types[0] == "country") {
                    country = address_component.short_name;
                }
            });

            //  alert(city + ", " + state + ", " + country);
            $('#location').prop('value', city + ", " + state + ", " + country);
            LoadEvents(result.geometry.location.lat(), result.geometry.location.lng());
        });
    }

    $(document).ready(function () {

        LoadEvents(); //Loads partial view

    });

    function BuildRatingStars() {
        $(".rateYo").rateYo({
            starWidth: "18px",
            ratedFill: "#FFD700",
            normalFill: "#ccc",
            onInit: function (rating, rateYoInstance) {
                var t = $(this);
                $(this).rateYo("option", "rating", t.parent('div').find('.ratingval').prop('value'));
                $(this).rateYo("option", "readOnly", true);
            }
        });
    }

    function LoadEvents(lat, lng) {
        $.get('@Url.Action("GetEventsPartial", "Home")', { 'lat': lat, 'lng': lng }, function (data) {
            $("#events").empty();
            $("#events").html(data);
            BuildRatingStars();
        });
    }

    function doNavigate() {
        window.location.href = document.getElementById("UrlList").value;
    }
</script>
}