@model EDR.Models.ViewModels.HomeLearnViewModel
@using EDR.Models
@using EDR.Utilities

@{
    ViewBag.Title = "Learn to Dance";
}

<h1 class="page-header">Pick a Class...</h1>

@using (Html.BeginForm("Learn", "Home", FormMethod.Get))
{
    <p>
        Choose a Dance Style: @Html.DropDownList("danceStyle", "All")
        Choose a Teacher: @Html.DropDownList("teacher", "All")
        Choose a Place: @Html.DropDownList("place", "All")
        Choose Skill Level: @Html.DropDownList("skillLevel", "All")
        <input type="submit" value="Search" class="btn btn-primary" />
    </p>
}
<div class="tabbable">
    <ul class="nav nav-tabs nav-justified" role="tablist">
        <li class="active"><a href="#classes" data-toggle="tab">Classes (@Model.Classes.Count().ToString())</a></li>
        <li><a href="#workshops" data-toggle="tab">Workshops (@Model.Workshops.Count().ToString())</a></li>
    </ul>
    <div class="tab-content">
        <div id="classes" class="tab-pane active">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Class</th>
                        <th>Where</th>
                        <th>When</th>
                        <th>Teacher(s) <a style="font-size: small; font-weight: normal;" href="@Url.Action("List", "Teacher")">View All</a></th>
                        <th>Level</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Classes)
                    {
                        <tr>
                            <td>
                                <strong>@item.Name</strong><br />
                                Dance Styles:<ul class="list-inline">
                                    @if (item.DanceStyles != null)
                                    {
                                        foreach (var s in item.DanceStyles)
                                        {
                                            <li>@Html.ActionLink(s.Name, "Details", "DanceStyle", new { id = s.Id }, null)</li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.ActionLink(item.Place.Name, "Details", "Place", new { id = item.Place.Id }, null)<br />
                                @item.Place.Address
                                @item.Place.Address2<br />
                                @item.Place.City, 
                                @item.Place.State 
                                @item.Place.Zip
                            </td>
                            <td>
                                @if (item.Recurring)
                                {
                                    @ApplicationUtility.GetNextDate(item.StartDate, item.Frequency, (int)item.Interval, item.Day).ToLongDateString()<br />
                                    @item.StartDate.ToString("%h:mm tt")@:~@item.StartDate.AddMinutes(item.Duration).ToString("%h:mm tt")<br />
                                    @:Every @item.Day (@(item.Interval == null ? "" : (item.Interval == 2 ? "Bi-" : (item.Interval == 3 ? "Tri-" : "")))@item.Frequency)
                                    @*@String.Format("{0:dddd, M/d/yy}", item.StartDate)<br />@String.Format("{0:h:mm tt}", item.StartDate)*@
                                }
                                else
                                {
                                    @item.StartDate.ToLongDateString()<br />@item.StartDate.ToString("%h:mm tt")@:~@item.StartDate.AddMinutes(item.Duration).ToString("%h:mm tt")
                                }<br />
                            </td>
                            <td>
                                <ul class="list-inline">
                                    @if (item.Teachers != null)
                                    {
                                        foreach (var t in item.Teachers)
                                        {
                                            <li>@Html.ActionLink(t.ApplicationUser.FullName, "View", "Teacher", new { username = t.ApplicationUser.UserName }, null)</li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SkillLevel)
                            </td>
                            <td>
                                @(item.Price.HasValue ? String.Format("{0:c}", item.Price) : "Free")
                            </td>
                            <td>
                                @Html.ActionLink("Pick this Class", "Details", "Class", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="workshops" class="tab-pane">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Workshop</th>
                        <th>Where</th>
                        <th>When</th>
                        <th>Teacher(s) <a style="font-size: small; font-weight: normal;" href="@Url.Action("List", "Teacher")">View All</a></th>
                        <th>Level</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Workshops)
                    {
                        <tr>
                            <td>
                                <strong>@item.Name</strong><br />
                                Dance Styles:<ul class="list-inline">
                                    @if (item.DanceStyles != null)
                                    {
                                        foreach (var s in item.DanceStyles)
                                        {
                                            <li>@Html.ActionLink(s.Name, "Details", "DanceStyle", new { id = s.Id }, null)</li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.ActionLink(item.Place.Name, "Details", "Place", new { id = item.Place.Id }, null)<br />
                                @item.Place.Address
                                @item.Place.Address2<br />
                                @item.Place.City,
                                @item.Place.State
                                @item.Place.Zip
                            </td>
                            <td>
                                @if (item.Recurring)
                                {
                                    @ApplicationUtility.GetNextDate(item.StartDate, item.Frequency, (int)item.Interval, item.Day).ToLongDateString()<br />
                                    @item.StartDate.ToString("%h:mm tt")@:~@item.StartDate.AddMinutes(item.Duration).ToString("%h:mm tt")<br />
                                    @:Every @item.Day (@(item.Interval == null ? "" : (item.Interval == 2 ? "Bi-" : (item.Interval == 3 ? "Tri-" : "")))@item.Frequency)
                                    @*@String.Format("{0:dddd, M/d/yy}", item.StartDate)<br />@String.Format("{0:h:mm tt}", item.StartDate)*@
                                }
                                else
                                {
                                    @item.StartDate.ToLongDateString()<br />@item.StartDate.ToString("%h:mm tt")@:~@item.StartDate.AddMinutes(item.Duration).ToString("%h:mm tt")
                                }<br />
                            </td>
                            <td>
                                <ul class="list-inline">
                                    @if (item.Teachers != null)
                                    {
                                        foreach (var t in item.Teachers)
                                        {
                                            <li>@Html.ActionLink(t.ApplicationUser.FullName, "View", "Teacher", new { username = t.ApplicationUser.UserName }, null)</li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SkillLevel)
                            </td>
                            <td>
                                @(item.Price.HasValue ? String.Format("{0:c}", item.Price) : "Free")
                            </td>
                            <td>
                                @Html.ActionLink("Pick this Class", "Details", "Class", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div><!-- /.tab-content -->
</div><!-- /.tabbable -->

<a href="@Request.UrlReferrer.ToString()">Back</a>

@*<h4>Available Classes</h4>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Place</th>
                <th>Start</th>
                <th>End</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Classes)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "Details", "Class", new { id = item.Id }, null)
                    </td>
                    <td>
                        @Html.ActionLink(item.Place.Name, "Details", "Place", new { id = item.Place.Id }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @(item.Price.HasValue ? item.Price.ToString() : "Free")
                    </td>
                </tr>
            }
        </tbody>
    </table>*@

