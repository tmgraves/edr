@model EDR.Models.ViewModels.LearnViewModel
@using EDR.Models
@using EDR.Utilities
@using MvcCheckBoxList.Model

@{
    ViewBag.Title = "Learn to Dance";
}

<h1 class="page-header">Find a Class/Workshop</h1>

@using (Html.BeginForm("Learn", "Home", FormMethod.Get))
{
    @Html.Hidden("NELat", 0)
    @Html.Hidden("NELng", 0)
    @Html.Hidden("SWLat", 0)
    @Html.Hidden("SWLng", 0)
    @Html.Hidden("CenterLat", 0)
    @Html.Hidden("CenterLng", 0)
    @Html.Hidden("Zoom", 0)
    <div class="row col-lg-12 col-md-12">
        <div class="col-lg-12 col-md-12" style="margin-bottom: 5px;">
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2 col-lg-2 input-lg" })
                    <div class="col-md-10 col-lg-10">
                        @Html.TextBox("location", null, new { @class = "form-control input-lg", @placeholder = "Enter your location (Los Angeles, CA, 90065, etc)" })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6">
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.DanceStyles, htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })
                    <div class="col-md-8 col-lg-8">
                        @Html.DropDownList("danceStyle", new SelectList(Model.DanceStyles.OrderBy(s => s.Name), "Id", "Name", Model.DanceStyleId), "All", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DanceStyles, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top: 5px;">
                <div class="form-group">
                    @Html.LabelFor(model => model.SkillLevel, htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })
                    <div class="col-md-8 col-lg-8">
                        @Html.DropDownList("skillLevel", new SelectList(new List<int> { 1, 2, 3, 4, 5 }, Model.SkillLevel), "All", new { @class = "form-control col-lg-6 col-md-6" })
                        @Html.ValidationMessageFor(model => model.SkillLevel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top: 5px;">
                <div class="form-group">
                    @Html.LabelFor(model => model.Places, htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })
                    <div class="col-md-8 col-lg-8">
                        @Html.DropDownList("place", new SelectList(Model.Places.OrderBy(p => p.Name), "Id", "Name", Model.PlaceId), "All", new { @class = "form-control col-lg-6 col-md-6" })
                        @Html.ValidationMessageFor(model => model.Places, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top: 5px;">
                <div class="form-group">
                    @Html.LabelFor(model => model.Teachers, htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })
                    <div class="col-md-8 col-lg-8">
                        @Html.DropDownList("teacher", new SelectList(Model.Teachers.OrderBy(t => t.ApplicationUser.FullName), "ApplicationUser.Id", "ApplicationUser.FullName", Model.TeacherId), "All", new { @class = "form-control col-lg-6 col-md-6" })
                        @Html.ValidationMessageFor(model => model.Teachers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6">
            <div class="row">
                <div class="form-group">
                    @Html.Label("daysLabel", "Day(s) of Week:", htmlAttributes: new { @class = "control-label col-md-4 col-lg-4" })
                    <div class="col-md-8 col-lg-8">
                        @Html.CheckBoxList("days",
                                            x => x.DaysOfWeek,
                                            x => x,
                                            x => x,
                                            x => Model.Days,
                                            new HtmlListInfo(HtmlTag.table, 2, new { @class = "checkboxlist" }, TextLayout.Default, TemplateIsUsed.No))
                        @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row col-lg-12 col-md-12" style="margin: 5px;">
        <input type="submit" value="Search Classes" class="btn btn-warning" />
    </div>
}
<div class="row">
    @Html.Partial("~/Views/Shared/_EventListPartial.cshtml", new EDR.Models.ViewModels.EventsViewModel() { Events = Model.Classes, Location = Model.SearchAddress, EventType = EDR.Enums.EventType.Class, Zoom = Model.Zoom })
</div>

@*<div class="tabbable">
    <ul class="nav nav-tabs nav-justified" role="tablist">
        <li class="active"><a href="#classes" data-toggle="tab">Classes (@Model.Classes.Count().ToString())</a></li>
        <li><a href="#workshops" data-toggle="tab">Workshops (@Model.Workshops.Count().ToString())</a></li>
    </ul>
    <div class="tab-content">
        <div id="classes" class="tab-pane active">
        </div>
        <div id="workshops" class="tab-pane">
            @Html.Partial("~/Views/Shared/_EventListPartial.cshtml", new EDR.Models.ViewModels.EventsViewModel() { Events = Model.Workshops, Location = Geolocation.ParseAddress("90065"), EventType = EDR.Enums.EventType.Class })
        </div>
    </div><!-- /.tab-content -->
</div><!-- /.tabbable -->*@

<a class="btn btn-primary" href="@Request.UrlReferrer.ToString()">Back</a>

@*<h4>Available Classes</h4>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Place</th>
                <th>Start</th>
                <th>End</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Classes)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "Details", "Class", new { id = item.Id }, null)
                    </td>
                    <td>
                        @Html.ActionLink(item.Place.Name, "Details", "Place", new { id = item.Place.Id }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @(item.Price.HasValue ? item.Price.ToString() : "Free")
                    </td>
                </tr>
            }
        </tbody>
    </table>*@

