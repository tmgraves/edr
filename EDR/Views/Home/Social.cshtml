@model EDR.Models.ViewModels.SocialViewModel

@{
    ViewBag.Title = "Find a Dance Social";
}

<ol class="breadcrumb">
    <li class="active">All Socials</li>
</ol>

<h1 class="text-center">Social Dance Events</h1>

@if (User.IsInRole("Promoter"))
{
    <p class="text-center">
        @Html.ActionLink("Add a Social", "Create", "Event", new { role = "Promoter", eventType = EDR.Enums.EventType.Social }, null)
    </p>
}

@using (Html.BeginForm("Social", "Home", FormMethod.Post, new { @class = "formmain" }))
{
    @Html.HiddenFor(m => m.SearchAddress.Latitude, new { Name = "lat", @class = "latfield" })
    @Html.HiddenFor(m => m.SearchAddress.Longitude, new { Name = "lng", @class = "lngfield" })
    @Html.HiddenFor(m => m.NELat, new { @class = "nelatfield" })
    @Html.HiddenFor(m => m.NELng, new { @class = "nelngfield" })
    @Html.HiddenFor(m => m.SWLat, new { @class = "swlatfield" })
    @Html.HiddenFor(m => m.SWLng, new { @class = "swlngfield" })
    @Html.HiddenFor(m => m.CenterLat, new { @class = "clatfield" })
    @Html.HiddenFor(m => m.CenterLng, new { @class = "clngfield" })
    @Html.HiddenFor(m => m.Zoom, new { @class = "czoomfield" })
    <div class="container bg-info text-center" style="padding: 0px !important;">
        <div class="form-inline">
            <div class="row" style="padding-top: 5px; padding-bottom: 5px;">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Location, new { placeholder = "Location", @class = "form-control locationsearch" })
                </div>
                <div class="form-group">
                    @Html.HiddenFor(m => m.DanceStyleId, new { @class = "stylesearchid" })
                    @Html.TextBoxFor(m => m.Style, new { placeholder = "Dance Style", @class = "form-control stylesearch" })
                </div>
                <div class="form-group">
                    @Html.ListBoxFor(m => m.Days,
                                        (Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>().Select(enu => new SelectListItem() { Text = enu.ToString(), Value = enu.ToString() })).ToList(), new { multiple = "multiple", @class = "form-control", @style = "display: none;" })
                </div>
                @*<select id="Days" name="Days" multiple="multiple">
                    <option value="Monday">Monday</option>
                    <option value="Tuesday">Tuesday</option>
                    <option value="Wednesday">Wednesday</option>
                    <option value="Thursday">Thursday</option>
                    <option value="Friday">Friday</option>
                    <option value="Saturday">Saturday</option>
                    <option value="Sunday">Sunday</option>
                </select>*@

                @*<div class="form-group">
                    <a href="#days" class="toggle btn btn-default">Day of Week <span class="caret"></span></a>
                    <div id="daysdiv" class="well text-left" style="display: none;">
                        @Html.CheckBoxListFor(model => model.Days,
                                                    model => (Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>().Select(enu => new SelectListItem() { Text = enu.ToString(), Value = enu.ToString() })).ToList(),
                                                    item => item.Value,
                                                    item => item.Text,
                                                    model => (Model.Days != null ? (Model.Days.Select(d => new SelectListItem() { Text = d.ToString(), Value = d.ToString() })) : null),
                                                    new MvcCheckBoxList.Model.HtmlListInfo(MvcCheckBoxList.Model.HtmlTag.table, 1, new { @class = "checkboxlist text-warning" }, MvcCheckBoxList.Model.TextLayout.Default))
                    </div>
                </div>*@
                <div class="form-group">
                    <input type="submit" value="Search Socials" class="btn btn-warning" />
                </div>
            </div>
        </div>
        <div class="map_canvas"></div>
    </div>
}

<div class="col-lg-12 text-center" style="padding: 10px;">
    <div id="myButtons" class="btn-group" data-toggle="buttons">
        <label class="btn btn-info active">
            <input type="radio" name="options" id="listbtn" autocomplete="off" checked class="rbutton"> List View
        </label>
        <label class="btn btn-info">
            <input type="radio" name="options" id="calendarbtn" autocomplete="off" class="rbutton"> Calendar View
        </label>
    </div>
</div>

<div id="listdiv">
    @Html.DisplayFor(m => m.Socials, "Socials")
</div>
<div id='script-warning'>
    <code>php/get-events.php</code> must be running.
</div>
<div id='loading'>loading...</div>
<div id='calendar'></div>

@section Scripts
{
<link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/foolproof")
@Scripts.Render("~/bundles/jqueryUI")
@Scripts.Render("~/bundles/GeoComplete")
<script src="../../Scripts/searchhelper.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="../../Scripts/jquery.geocomplete.js"></script>
<link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
<script src="~/Scripts/jquery.rateyo.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap-multiselect.js"></script>
<link rel="stylesheet" href="~/Content/bootstrap-multiselect.css" type="text/css" />

<link href="~/Content/fullcalendar/fullcalendar.css" rel="stylesheet" />
<link href="~/Content/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print" />
<script src="~/Scripts/fullcalendar/moment.min.js"></script>
<script src="~/Scripts/fullcalendar/fullcalendar.js"></script>

<script>
    $(function () {
        $('#Days').multiselect({
            nonSelectedText: 'Day of Week',
            buttonClass: 'multiselectbutton form-control',
            buttonText: function(options, select) {
                return 'Day of Week';
            }
        });
        $('#Days').show();
    });

    //  Global Map Variables
    var markers = [];
    var infowindows = [];
    $(function () {
        //  Map Marker Containers
        //  Build up the Markers
        var map = $("#Location").geocomplete("map");
        @foreach(var s in Model.Socials.OrderBy(s => s.NextDate))
    {
        <text>
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng('@s.Place.Latitude', @s.Place.Longitude),
            map: map,
            title: '@s.Name',
            icon: "../../Content/images/MapMarker.png"
        });

        attachMessage(@s.Id, map, marker, '@s.Id', '@s.Name', '@s.Place.Address', '@(s.Place.City + ", " + s.Place.State + " " + s.Place.Zip)', '<a href="@Url.Action("View", "Event", new { id = s.Id, eventType = EDR.Enums.EventType.Social })">' + '@s.Name' + '</a>');
        markers.push({
            id: @s.Id,
            marker: marker
        });
        </text>
    }

        function attachMessage(id, map, marker, num, placeName, address, address2, link) {
            var message = marker.title;
            var infowindow = new google.maps.InfoWindow({
                disableAutoPan: false,
                maxWidth: 200,
                content: '<div id="content" class="text-center" style="width: 200px;">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<div style="display: block;white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">' +
                link +
                '</div>' +
                '<div id="bodyContent">' +
                '<p>' +
                address + '<br>' +
                address2 +
                '</p>' +
                '</div>' +
                '</div>'
            });
            infowindows.push({
                id: id,
                infowindow: infowindow
            });

            //  infowindow.open(map, marker);

            google.maps.event.addListener(marker, 'click', function () {
                clearWindows();
                infowindow.open(map, marker);
            });
        }
    });

    function clearWindows() {
        for (var i = 0; i < infowindows.length; i++) {
            infowindows[i].infowindow.close();
        }
    };

    function openEvent(id, lati, long) {
        var latLng = new google.maps.LatLng(lati, long); //Makes a latlng
        var map = $("#Location").geocomplete("map");
        map.panTo(latLng); //Make map global
        var mark = markers.filter(function (item) { return item.id == id })[0];
        mark.marker.setMap(map);
        //  markers[id].setMap(map);
        clearWindows();
        iwin = infowindows.filter(function (item) { return item.id == id })[0];
        iwin.infowindow.open(map, mark.marker);
        //  infowindows[id].open(map, markers[id]);
        return false;
    };

</script>

<script>
    $(function () {
        $("#calendar").css({"visibility": "hidden"});
        $('#listbtn').parent().on("click", function () {
            $('#listdiv').show();
            $("#calendar").css({"visibility": "hidden"});
        });

        $('#calendarbtn').parent().on("click", function () {
            $('#listdiv').hide();
            $("#calendar").css({"visibility": "visible"});
        });

        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,basicWeek,basicDay'
            },
            defaultDate: new Date(),
            editable: true,
            eventLimit: true, // allow "more" link when too many events
            events: {
                url: '../../Home/GetSocials',
                traditional: true,
                data: {
                    neLat: $('.nelatfield').val(),
                    neLng: $('.nelngfield').val(),
                    swLat: $('.swlatfield').val(),
                    swLng: $('.swlngfield').val(),
                    styleId: $('.stylesearchid').val(),
                    days: $('#Days').val(),
                },
                error: function() {
                    $('#script-warning').show();
                }
            },
            eventMouseover: function(event) {
                openEvent(event.id, event.lat, event.lng);
                //// opens events in a popup window
                //window.open(event.url, 'gcalevent', 'width=700,height=600');
                return false;
            },

            loading: function(bool) {
                $('#loading').toggle(bool);
            }
        });

        $(".rateYo").rateYo({
            starWidth: "15px",
            onInit: function (rating, rateYoInstance) {
                //  alert("init");
                var t = $(this);
                $(this).rateYo("option", "rating", t.parent('div').find('.ratingval').prop('value'));
                $(this).rateYo("option", "readOnly", true);
            }
        });
    });
    //$(function () {
    //    $( ".toggle" ).click(function() {
    //        // Animation complete.
    //        $("#daysdiv").css({
    //            'position': 'absolute',
    //            'z-index' : '100',
    //            'width' : '150px',
    //            'left': $(this).offset().left,
    //            'top': $(this).offset().top + $(this).height() + 15
    //        });
    //        $( "#daysdiv" ).toggle( "fast", function() {
    //        });
    //    });
    //});
</script>

}