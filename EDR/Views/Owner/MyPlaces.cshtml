@model EDR.Models.ViewModels.OwnerViewViewModel
@using EDR.Models
@using EDR.Utilities

@{
    Layout = "~/Views/Owner/_OwnerLayout.cshtml";
}

<style>
    #map-canvas {
        width: 100%;
        height: 400px;
    }
</style>
<script src="https://maps.googleapis.com/maps/api/js"></script>
<script>
    var map;
    var markers = [];

    function initialize() {
        var mapOptions = {
            zoom: 14,
            zoomControl: false,
            center: new google.maps.LatLng('@Model.Address.Latitude', '@Model.Address.Longitude')
        };

        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        @{
            int idx = 1;
            var today = DateTime.Today;
            foreach(var pl in Model.Owner.Places)
            {
                <text>
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng('@pl.Latitude', '@pl.Longitude'),
                        map: map,
                        title: '@pl.Name',
                        icon: "http://maps.google.com/mapfiles/kml/paddle/" + @idx + "-lv.png"
                    });

                    attachSecretMessage(marker, '@pl.Id', '@pl.Name', '@pl.Address <br/> @pl.City , @pl.State  @pl.Zip', '<a href="@Url.Action("Home", "Place", new { id = pl.Id })">' + marker.title + '</a>', 5, 5);
                    markers.push(marker);

        </text>
                idx += 1;
            }
        }

        clearMarkers();
    }

    function clearMarkers() {
        setAllMap(null);
    }

    function setAllMap(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // The five markers show a secret message when clicked
    // but that message is not within the marker's instance data
    function attachSecretMessage(marker, num, placeName, address, link, students, classes) {
        var message = marker.title;
        var infowindow = new google.maps.InfoWindow({
            disableAutoPan: true,
            content: '<div id="content">' +
            '<div id="siteNotice">'+
            '</div>'+
            '<h4 id="firstHeading" class="firstHeading">' + link + '</h4>'+
            '<div id="bodyContent">'+
            '<p>' +
            address + '<br/>' +
            '</p>' +
            '</div>' +
            '</div>'
            });

        infowindow.open(map, marker);

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });
    }

    function openPlace(id, lati, long) {
        var latLng = new google.maps.LatLng(lati, long); //Makes a latlng
        map.panTo(latLng); //Make map global
        map.setZoom(14);
        clearMarkers();
        markers[id].setMap(map);
        return false;
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h4 class="page-header">My Places</h4>
        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6" style="height: 400px; overflow-x: auto;">
            @if (Model.Owner.Places.Count() > 0)
            {
                @Html.Partial("~/Views/Shared/_CompactPlaceListPartial.cshtml", Model.Owner.Places)
            }
            else
            {
                @:No Places
            }
        </div>
        <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6">
            <div class="container" id="map-canvas"></div>
        </div>
    </div>
</div>