@model EDR.Models.ViewModels.EventManageViewModel

@{
    ViewBag.Title = "Manage";
}

<h2>Manage @Model.Event.Name</h2>
@section Scripts
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
}
<script type="text/javascript">
    $(function () {
        var form = $('#saveform2.main');
        alert(form.prop('id'));
        try {
            var valid = form.valid();
            alert(valid);
        }
        catch (err) {
            document.getElementById("demo").innerHTML = err.message;
        }
        var form2 = $('#saveform.main');
        alert(form2.prop('id'));

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            var form = $('#saveform.main');
            alert(form.prop('id'));
            try
            {
                var valid = form.valid();
                alert(valid);
            }
            catch(err)
            {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });
        $('#saveform.main').validate;
        $('#btnsave').click(function () {
            alert("here");
            var form = $('#saveform.main');
            alert(form.prop('id'));
        });
        $('#btnsave2').click(function () {
            var form = $('#saveform2.main');
            alert(form.valid());
        });
    });
</script>
<p id="demo"></p>
@using (Html.BeginForm("Create", "Event", FormMethod.Post, new { @id = "saveform2", @class = "main" }))
{
    @Html.EditorFor(model => model.Event.Name, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Event.Name, "", new { @class = "text-danger" })
    @Html.TextBoxFor(m => m.Event.StartDate)
    @Html.ValidationMessageFor(model => model.Event.StartDate, "", new { @class = "text-danger" })
    <input type="button" id="btnsave2" value="Save" class="btn btn-primary" />
}
@*<div class="container-fluid">
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <div id="viewdiv">
                    <div class="text-right">
                        <input id="btnEdit" type="button" class="btn btn-primary" value="Edit" />
                    </div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Name)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Name)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.StartDate)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.StartDate)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.EndDate)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.EndDate)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.StartTime)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.StartTime)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.EndTime)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.EndTime)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            Repeat Event?
                        </dt>
                        <dd>
                            @(Model.Event.Recurring ? "Yes" : "No")
                        </dd>
                    </dl>
                    <div id="repeat" @(Model.Event.Recurring ? "" : "hidden='hidden'")>
                        <dl class="dl-horizontal">
                            <dt>
                                Repeats
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Event.Frequency)
                            </dd>
                        </dl>
                        <dl class="dl-horizontal">
                            <dt>
                                Every
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Event.Interval, new { @class = "form-control" })
                                @if (Model.Event.Frequency == EDR.Enums.Frequency.Daily)
                                {
                                    @: Day(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Weekly)
                                {
                                    @: Week(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Monthly)
                                {
                                    @: Month(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Yearly)
                                {
                                    @: Year(s)
                            }
                            </dd>
                        </dl>
                        <div id="monthly" @(Model.Event.Frequency == EDR.Enums.Frequency.Monthly ? "" : "hidden='hidden'")>
                            <dl class="dl-horizontal">
                                <dt>
                                    On the
                                </dt>
                                <dd>
                                    @Model.Event.MonthDays @Model.Event.StartDate.DayOfWeek
                                </dd>
                            </dl>
                        </div>
                    </div>

                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.FacebookLink)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.FacebookLink)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Description)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Description)
                        </dd>
                    </dl>
                </div>
                <div id="editdiv" style="display: none;">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    @using (Html.BeginForm("Save", "Event", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                    {
                    @Html.HiddenFor(x => x.EventType)
                    @Html.HiddenFor(x => x.Event.Id)
                    <div class="text-right" style="padding-bottom: 10px;">
                        <input type="submit" id="btnsave" value="Save" class="btn btn-primary" />
                        <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                    </div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Name)
                        </dt>
                        <dd>
                            @Html.EditorFor(model => model.Event.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Event.Name, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.StartDate)
                        </dt>
                        <dd>
                            @Html.DisplayFor(m => m.Event.StartDate, "{0:yyyy-MM-dd}")
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.EndDate)
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.Event.EndDate, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Event.EndDate, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.StartTime)
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.Event.StartTime, "{0:HH:mm}", htmlAttributes: new { @type = "time", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Event.StartTime, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.EndTime)
                        </dt>
                        <dd>
                            @Html.TextBoxFor(m => m.Event.EndTime, "{0:HH:mm}", htmlAttributes: new { @type = "time", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Event.EndTime, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            Repeat Event?
                        </dt>
                        <dd>
                            @(Model.Event.Recurring ? "Yes" : "No")
                        </dd>
                    </dl>
                    <div id="repeat" @(Model.Event.Recurring ? "" : "hidden='hidden'")>
                        <dl class="dl-horizontal">
                            <dt>
                                Repeats
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Event.Frequency)
                            </dd>
                        </dl>
                        <dl class="dl-horizontal">
                            <dt>
                                Every
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Event.Interval, new { @class = "form-control" })
                                @if (Model.Event.Frequency == EDR.Enums.Frequency.Daily)
                                {
                                    @: Day(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Weekly)
                                {
                                    @: Week(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Monthly)
                                {
                                    @: Month(s)
                                        }
                                else if (Model.Event.Frequency == EDR.Enums.Frequency.Yearly)
                                {
                                    @: Year(s)
                            }
                            </dd>
                        </dl>
                        <div id="monthly" @(Model.Event.Frequency == EDR.Enums.Frequency.Monthly ? "" : "hidden='hidden'")>
                            <dl class="dl-horizontal">
                                <dt>
                                    On the
                                </dt>
                                <dd>
                                    @Model.Event.MonthDays @Model.Event.StartDate.DayOfWeek
                                </dd>
                            </dl>
                        </div>
                    </div>

                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.FacebookLink)
                        </dt>
                        <dd>
                            @Html.EditorFor(model => model.Event.FacebookLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Event.FacebookLink, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Description)
                        </dt>
                        <dd>
                            @Html.EditorFor(model => model.Event.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Event.Description, "", new { @class = "text-danger" })
                        </dd>
                    </dl>
                    }
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body ">
                <section>
                    <h3>Place</h3>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Place.Name)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Place.Name)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Place.Address)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Place.Address)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Place.City)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Place.City)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Place.State)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Place.State)
                        </dd>
                    </dl>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Event.Place.Zip)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Event.Place.Zip)
                        </dd>
                    </dl>
                </section>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        @if (Model.Event.Recurring)
        {
            <div class="panel panel-default">
                <div class="panel-body ">
                    <h3>Event Dates</h3>
                    <table class="table table-condensed table-striped">
                        <thead>
                            <tr>
                                <th>
                                    Event Date
                                </th>
                                <th class="text-center">
                                    Attendees
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        @foreach(var i in Model.Event.EventInstances)
                        {
                            <tr>
                                <td>
                                    @i.DateTime.ToShortDateString()
                                </td>
                                <td class="text-center">
                                    @i.EventRegistrations.Count()
                                </td>
                                <td>
                                    @Html.ActionLink("Delete", "DeleteInstance", "Event", new { id = i.Id }, null)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        }
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Tickets</h3>
                @Html.ActionLink("Add Ticket", "AddTicket", "Event", new { id = Model.Event.Id }, null)
                <table class="table table-condensed table-striped">
                    <thead>
                        <tr>
                            <th>
                                Ticket Type
                            </th>
                            <th class="text-center">
                                Sold
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    @foreach (var i in Model.Event.Tickets)
                    {
                        <tr>
                            <td>
                                @(String.Format("{0:N0}", i.Quantity) + " @ " + String.Format("{0:C}", i.Price))
                            </td>
                            <td class="text-center">
                                @i.UserTickets.Sum(t => t.EventRegistrations.Count())
                            </td>
                            <td>
                                @Html.ActionLink("Delete", "DeleteTicket", "Event", new { id = i.Id }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>*@
