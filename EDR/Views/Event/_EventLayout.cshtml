@model EDR.Models.ViewModels.EventViewModel
@using EDR.Utilities
@using EDR.Models
@using EDR.Enums

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var eventType = Model.Class != null ? EventType.Class : EventType.Social;
    if (Model.Class != null)
    {
        ViewBag.Title = "Class Details";
    }
    else if (Model.Social != null)
    {
        ViewBag.Title = "Social Details";
    }
}

@{string ctrName = ViewContext.RouteData.Values["action"].ToString();}

<div class="row">
    <h1 class="page-header">
        @Model.Event.Name  <small>(@(Model.Event is Class ? ((Class)Model.Event).ClassType.ToString() : ((Social)Model.Event).SocialType.ToString()))</small>
        @if (User.Identity != null && ((Model.Event is Class && Model.Class.Teachers.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)) || (Model.Event is Social && Model.Social.Promoters.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1))
        {
            @*<a style="font-size: medium;" href="@Url.Action("Edit", "Dancer")">Edit Profile</a>*@
            <a class="btn btn-info" title="Edit" href="@Url.Action("Edit", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">
                <i class="glyphicon glyphicon-pencil" style="vertical-align: middle;"></i>
                <span class="sr-only">Edit</span>
            </a>
        }
        <br />
        <small>@@ @Html.ActionLink(@Model.Event.Place.Name, "Details", "Place", new { id = Model.Event.Place.Id }, null)</small>
    </h1>
</div>
<div class="row">
    <div class="well col-lg-3 col-md-3 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
                @if (Model.Event.VideoUrl != null)
                {
                    <div style="height: 150px;">
                        @Html.Partial("~/Views/Shared/_VideoPlayerPartial.cshtml", new Video() { PhotoUrl = Model.Event.PhotoUrl, VideoUrl = Model.Event.VideoUrl })
                    </div>
                }
                else
                {
                if (Model.Event.PhotoUrl != null)
                    {
                        <a target="_blank" href="@Url.Content(Model.Event.PhotoUrl)">
                            <div class="croppedpic" style="height: 150px;">
                                <img src="@Url.Content(Model.Event.PhotoUrl)" />
                            </div>
                        </a>
                    }
                    else
                    {
                        <img src="~/Content/images/MissingImage.jpg" />
                    }
                }
                @if (User.Identity != null && ((Model.Event is Class && Model.Class.Teachers.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)) || (Model.Event is Social && Model.Social.Promoters.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1))
                {
                    <p>
                        <a style="font-size: small;" href="@Url.Action("ChangeCover", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">Change Cover</a>
                    </p>
                }


                <div class="row">
                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-3">
                        When:
                    </label>
                    <div class="text-success text-left col-lg-9 col-md-9 col-sm-9 col-xs-9" style="font-weight: bold;">
                        @if (Model.Event.Recurring)
                            {
                                @Model.Event.NextDate.ToString("ddd, MMM dd, yyyy")
                                <br />@:(@(Model.Event.Interval == null ? "" : (Model.Event.Interval == 2 ? "Bi-" : (Model.Event.Interval == 3 ? "Tri-" : "")))@Model.Event.Frequency)
                                if (Model.Event.Frequency == Frequency.Monthly)
                                {
                                    string[] daysarray = Model.Event.MonthDays.Split(new char[] { '-' }).OrderBy(x => x).ToArray();
                                    for(int i = 0; i < daysarray.Count(); i++)
                                    {
                                        if (daysarray[i] == "1")
                                        {
                                            daysarray[i] = "1st";
                                        }
                                        if (daysarray[i] == "2")
                                        {
                                            daysarray[i] = "2nd";
                                        }
                                        if (daysarray[i] == "3")
                                        {
                                            daysarray[i] = "3rd";
                                        }
                                        if (daysarray[i] == "4")
                                        {
                                            daysarray[i] = "4th";
                                        }
                                        if (daysarray[i] == "5")
                                        {
                                            daysarray[i] = "5th";
                                        }
                                    }
                                    <text><br />Every </text>@(String.Join(",", daysarray) + " " + Model.Event.Day.ToString().Substring(0,3))
                                }
                            }
                        else
                        {
                            @Model.Event.StartDate.ToString("ddd, MMM dd, yyyy")
                        }
                        @if (!Model.Event.AllDay)
                        {
                            <br />
                            if (Model.Event.StartTime != null && Model.Event.EndTime != null)
                            {
                                @(((DateTime)Model.Event.StartTime).ToString("%h:mm tt"))
                                @:~
                                @(((DateTime)Model.Event.EndTime).ToString("%h:mm tt"))
                            }
                        }
                    </div>
                </div>
                @if (Model.Event is Class)
                    {
                    <div class="row">
                        <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-3">
                            Teachers:
                        </label>
                        <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 text-left">
                            @*@Html.Partial("~/Views/Shared/_BasicTeacherListPartial.cshtml", Model.Class.Teachers.OrderBy(x => x.ApplicationUser.FullName))*@
                            <ul class="list-inline">
                                @foreach (var teacher in Model.Class.Teachers)
                                    {
                                    <li>
                                        <a class="label label-warning" href="@Url.Action("Home", "Teacher", new { username = teacher.ApplicationUser.UserName }) ">
                                            @teacher.ApplicationUser.FullName
                                        </a>
                                    </li>
                                    }
                            </ul>
                        </div>
                    </div>
                    }
                <div class="row">
                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-3">
                        Styles:
                    </label>
                    <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 text-left">
                        <ul class="list-inline">
                            @foreach (var item in Model.Event.DanceStyles)
                                {
                                <li>@Html.ActionLink(item.Name, "Details", "DanceStyle", new { styleName = item.Name }, new { @class = "label label-info" })</li>
                                }
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-3">
                        Where:
                    </label>
                    <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 text-left text-primary" style="white-space: normal;">
                        @Model.Event.Place.Name<br />
                        @Model.Event.Place.Address
                        @Model.Event.Place.Address2 <br />
                        @Model.Event.Place.City,
                        @Model.Event.Place.State
                        @Model.Event.Place.Zip
                    </div>
                    <a target="_blank" href="https://maps.google.com/?q=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude">
                        <img class="img-thumbnail" src="https://maps.googleapis.com/maps/api/staticmap?center=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude&zoom=10&size=250x100&maptype=roadmap&markers=color:red%7Clabel:A%7C @Model.Event.Place.Latitude, @Model.Event.Place.Longitude" title="@Model.Event.Place.City, @Model.Event.Place.State">
                    </a>
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                @if (User.Identity.IsAuthenticated)
                    {
                        if (Model.Event.EventMembers.Where(m => m.Member.UserName == User.Identity.Name).Count() == 0)
                        {
                            <p>
                                <a class="btn btn btn-primary col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 5px;" title="Signup" href="@Url.Action("Signup", "Event", new { id = Model.Event.Id, eventType = Model.EventType, returnUrl = Request.Url.AbsolutePath })">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                    Add to Your Calendar
                                </a>
                            </p>
                        }
                        else
                        {
                            <p>
                                <a class="btn btn btn-primary col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 5px;" title="Remove" href="@Url.Action("LeaveEvent", "Event", new { id = Model.Event.Id, eventType = Model.EventType, returnUrl = Request.Url.AbsolutePath })">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                    Remove from Your Calendar
                                </a>
                            </p>
                        }
                    }
                @if (Model.EventType == EventType.Class)
                    {
                        if (User.Identity.IsAuthenticated && User.IsInRole("Teacher") && Model.ClassTeacherInvitations.Where(i => i.Teacher.ApplicationUser.UserName == User.Identity.Name).Count() == 0 && Model.Class.Teachers.Where(t => t.ApplicationUser.UserName == User.Identity.Name).Count() == 0)
                        {
                            <p>
                                <a class="btn btn btn-warning col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 5px;" title="Signup" href="@Url.Action("JoinTeachers", "Event", new { id = Model.Event.Id, returnUrl = Request.Url.AbsolutePath })">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    Join As a Teacher
                                </a>
                            </p>
                        }
                    }
                @if (User.Identity != null && ((Model.Event is Class && Model.Class.Teachers.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)) || (Model.Event is Social && Model.Social.Promoters.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1))
                {
                    <p>
                        <a class="btn btn btn-danger col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 5px;" title="Delete" href="@Url.Action("Delete", "Event", new { id = Model.Event.Id, eventType = Model.EventType, returnUrl = Model.ReturnUrl })" onclick="return confirm('Are you sure you want to DELETE this Event?')">
                            <i class="glyphicon glyphicon-remove"></i>
                            Delete Event
                        </a>
                    </p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-9 col-lg-9 col-sm-12 col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <ul class="nav nav-pills nav-justified" role="tablist">
                    <li @if (ctrName == "View") { <text> class="active" </text>      }><a href="@Url.Action("View", "Event", new { id = Model.Event.Id, eventType = Model.EventType })"><i class="glyphicon glyphicon-home"></i> Details</a></li>
                    <li @if (ctrName == "Reviews") { <text> class="active" </text>     }><a href="@Url.Action("Reviews", "Event", new { id = Model.Event.Id, eventType = Model.EventType })"><i class="glyphicon glyphicon-comment"></i> Reviews (@Model.Event.Reviews.Where(r => r.Like).Count() <i class="glyphicon glyphicon-thumbs-up"></i> | @Model.Event.Reviews.Where(r => !r.Like).Count() <i class="glyphicon glyphicon-thumbs-down"></i>)</a></li>
                    <li @if (ctrName == "Videos") { <text> class="active" </text>       }><a href="@Url.Action("Videos", "Event", new { id = Model.Event.Id, eventType = Model.EventType })"><i class="glyphicon glyphicon-facetime-video"></i> Videos</a></li>
                    <li @if (ctrName == "Pictures") { <text> class="active" </text>        }><a href="@Url.Action("Pictures", "Event", new { id = Model.Event.Id, eventType = Model.EventType })"><i class="glyphicon glyphicon-camera"></i> Pictures</a></li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>
</div>
<p>
    <a class="btn btn-primary" href="@Session["ReturnUrl"]">Back</a>
</p>


<div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
    @if (Model.Event is Class)
    {
        <ul class="list-inline">
            @if (Model.Class.Teachers.Where(t => t.ApplicationUser.UserName == User.Identity.Name).Count() == 1)
            {
                foreach (var invite in Model.ClassTeacherInvitations.Where(i => i.Approved == null))
                {
                    <li>
                        <div class="panel panel-default">
                            <div>
                                <a class="btn btn-warning" href="@Url.Action("ApproveTeacher", "Event", new { classId = invite.Class.Id, teacherId = invite.Teacher.Id, returnUrl = @Url.Action("View", new { id = @Model.Event.Id }) }) " style="text-decoration: none; width: 100%;">
                                    Approve Teacher
                                </a>
                            </div>
                            <div style="display: inline-block; vertical-align: top;">
                                <a class="btn btn-default" href="@Url.Action("Home", "Teacher", new { username = invite.Teacher.ApplicationUser.UserName }) " style="text-decoration: none;">
                                    <div class="pull-left" style="height: 40px; width: 40px; overflow: hidden;">
                                        @if (invite.Teacher.ApplicationUser.UserPictures != null && invite.Teacher.ApplicationUser.UserPictures.Count > 0)
                                        {
                                            <img class="pull-left" style="width: 40px;" src="@Url.Content(invite.Teacher.ApplicationUser.UserPictures.First().ThumbnailFilename)" />
                                        }
                                        else
                                        {
                                            <img class="pull-left" style="width: 40px;" src="@Url.Content("~/Content/images/NoPic.png")" />
                                        }
                                    </div>
                                    <span class="text-primary" style="vertical-align: top;">@invite.Teacher.ApplicationUser.FullName</span>
                                </a>
                            </div>
                        </div>
                    </li>
                }
            }
        </ul>
    }
</div>

