@model EDR.Models.ViewModels.EventInstanceManageViewModel

@{
    ViewBag.Title = "ManageInstance";
}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/foolproof")
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/GeoComplete")
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>

<script>
    $(function () {
        //alert("here");
        //var form = $('#saveform2.main');
        //alert(form.prop('id'));
        //try {
        //    var valid = form.valid();
        //    alert(valid);
        //}
        //catch (err) {
        //    document.getElementById("demo").innerHTML = err.message;
        //}
        $('#saveform.main').valid();

        $('#btnEdit').click(function () {
            $('#viewdiv').hide();
            $('#editdiv').show();
            try {
                var valid = $('#saveform.main').valid();
            }
            catch (err) {
                document.getElementById("demo").innerHTML = err.message;
            }
        });
        $('#btncanceledit').click(function () {
            $('#viewdiv').show();
            $('#editdiv').hide();
        });
        $('#saveform.main').validate;
    });

    $('.time').change(function () {
        var start = $('.timeelement.begintime');
        var end = $('.timeelement.endtime');
        var shour = $('.time.hour.start option:selected').val();
        var smin = $('.time.minute.start option:selected').val();
        var sampm = $('.time.ampm.start option:selected').val();
        var ehour = $('.time.hour.end option:selected').val();
        var emin = $('.time.minute.end option:selected').val();
        var eampm = $('.time.ampm.end option:selected').val();

        var time = new Date();
        start.prop('value', new Date(time.getDate().toString() + "/" + time.getMonth().toString() + "/" + time.getYear().toString() + " " + shour.toString() + ":" + smin.toString() + " " + sampm));
        end.prop('value', new Date(time.getDate().toString() + "/" + time.getMonth().toString() + "/" + time.getYear().toString() + " " + ehour.toString() + ":" + emin.toString() + " " + eampm));

        CheckDates();
    });

    function CheckDates() {
        var start = $('.timeelement.begintime').val();
        var end = $('.timeelement.endtime').val();

        if (new Date(start) > new Date(end)) {
            $('#EndTimevalidationMessage').show();
            return false;
        }
        else {
            $('#EndTimevalidationMessage').hide();
            return true;
        }
    }
</script>
}

<h2>Manage Instance</h2>
<p>
    @Html.ActionLink("Back to Event", "Manage", new { id = Model.Instance.EventId, eventType = Model.Instance.Event is EDR.Models.Class ? EDR.Enums.EventType.Class : EDR.Enums.EventType.Social })
</p>
<hr />
<div class="container-fluid">
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Details</h3>
                <div id="viewdiv">
                    <div class="text-right">
                        <input id="btnEdit" type="button" class="btn btn-primary" value="Edit" />
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayName("Event")
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Instance.Event.Name)
                            </dd>

                            <dt>
                                @Html.DisplayName("Place")
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Instance.Place.Name)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.DateTime)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Instance.DateTime)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.StartTime)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Instance.StartTime)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.EndTime)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Instance.EndTime)
                            </dd>

                        </dl>
                    </div>
                </div>
                <div id="editdiv" style="display: none;">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    @using (Html.BeginForm("SaveInstance", "Event", FormMethod.Post, new { @id = "saveform", @class = "main" }))
                    {
                        <div class="text-right" style="padding-bottom: 10px;">
                            <input type="submit" id="btnsave" value="Save" class="btn btn-primary" />
                            <input id="btncanceledit" type="button" class="btn btn-primary" value="Cancel" />
                        </div>
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.DateTime)
                            </dt>
                            <dd>
                                @Html.EditorFor(model => model.Instance.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Instance.DateTime, "", new { @class = "text-danger" })
                            </dd>
                        </dl>
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.StartTime)
                            </dt>
                            <dd>
                                <div class="time">
                                    @Html.DropDownList("StartHour", new SelectList(new List<SelectListItem>
                                                {
                                                    new SelectListItem { Text = "01", Value = "1" },
                                                    new SelectListItem { Text = "02", Value = "2" },
                                                    new SelectListItem { Text = "03", Value = "3" },
                                                    new SelectListItem { Text = "04", Value = "4" },
                                                    new SelectListItem { Text = "05", Value = "5" },
                                                    new SelectListItem { Text = "06", Value = "6" },
                                                    new SelectListItem { Text = "07", Value = "7" },
                                                    new SelectListItem { Text = "08", Value = "8" },
                                                    new SelectListItem { Text = "09", Value = "9" },
                                                    new SelectListItem { Text = "10", Value = "10" },
                                                    new SelectListItem { Text = "11", Value = "11" },
                                                    new SelectListItem { Text = "12", Value = "12" }
                                                    }, "Value", "Text", null), new { @class = "form-control time hour start", style = "width: 70px; display: inline;" })
                                    @Html.DropDownList("StartMinute", new SelectList(new List<string> { "00", "15", "30", "45" }), new { @class = "form-control time minute start", style = "width: 70px; display: inline;" })
                                    @Html.DropDownList("StartAMPM", new SelectList(new List<string>() { "AM", "PM" }), new { @class = "form-control time ampm start", style = "width: 70px; display: inline;" })
                                    @Html.HiddenFor(m => m.Instance.StartTime, new { @class = "timeelement begintime" })
                                    @Html.ValidationMessageFor(model => model.Instance.StartTime, "", new { @class = "text-danger" })
                                </div>
                            </dd>
                        </dl>
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Instance.EndTime)
                            </dt>
                            <dd>
                                <div class="time">
                                    @Html.DropDownList("EndHour", new SelectList(new List<SelectListItem>
                                                {
                                                    new SelectListItem { Text = "01", Value = "1" },
                                                    new SelectListItem { Text = "02", Value = "2" },
                                                    new SelectListItem { Text = "03", Value = "3" },
                                                    new SelectListItem { Text = "04", Value = "4" },
                                                    new SelectListItem { Text = "05", Value = "5" },
                                                    new SelectListItem { Text = "06", Value = "6" },
                                                    new SelectListItem { Text = "07", Value = "7" },
                                                    new SelectListItem { Text = "08", Value = "8" },
                                                    new SelectListItem { Text = "09", Value = "9" },
                                                    new SelectListItem { Text = "10", Value = "10" },
                                                    new SelectListItem { Text = "11", Value = "11" },
                                                    new SelectListItem { Text = "12", Value = "12" }
                                                    }, "Value", "Text", null), new { @class = "form-control time hour end", style = "width: 70px; display: inline;" })
                                    @Html.DropDownList("EndMinute", new SelectList(new List<string> { "00", "15", "30", "45" }), new { @class = "form-control time minute end", style = "width: 70px; display: inline;" })
                                    @Html.DropDownList("EndAMPM", new SelectList(new List<string>() { "AM", "PM" }), new { @class = "form-control time ampm end", style = "width: 70px; display: inline;" })
                                    @Html.HiddenFor(m => m.Instance.EndTime, new { @class = "timeelement endtime" })
                                    @Html.ValidationMessageFor(model => model.Instance.EndTime, "", new { @class = "text-danger" })
                                    <p>
                                        <span id="EndTimevalidationMessage" class="text-danger" style="display: none;">End Time Must Be After Start Time</span>
                                    </p>
                                </div>
                            </dd>
                        </dl>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-body ">
                <h3>Registrations</h3>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    @foreach (var r in Model.Instance.EventRegistrations)
                    {
                        <tr>
                            <td>
                                @r.User.FullName
                            </td>
                            <td>
                                <a class="btn btn-sm btn-danger" title="Delete" href="@Url.Action("DeleteRegistration", "Event", new { id = r.Id })" onclick="return confirm('Are you sure you want to DELETE this Registration?')">
                                    Remove
                                </a>
                            </td>
                        </tr>
                    }
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

