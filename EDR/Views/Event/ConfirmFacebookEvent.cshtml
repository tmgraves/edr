@model EDR.Models.ViewModels.ConfirmFacebookEvent
@using EDR.Enums

<style>
    .radio-list div
    {
        text-align: left;
        white-space: normal;
        vertical-align: text-top;
        position: relative;
        margin-top: 5px;
    }
    .radio-list input[type="radio"] {
        vertical-align: top;
        width: 20px;
        height: 20px;
        position: absolute;
        top: 5px;
        left: 20px;
        z-index: 10;   
    }

    .radio-list label {
        z-index: 5;
        height: 240px;
        text-align: left;
        display:block;
        padding: 5px 40px;
    }

    .radio-list input[type="radio"]:checked + label {
        background-color:#FFCC99;
    }
</style>
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <h3>Please Confirm Details for the New @Model.EventType</h3>
    <div class="col-lg-3 col-md-3">
        <div class="col-lg-12 col-md-12 croppedpic" style="height: 250px;">
            <a href="@Model.FacebookEvent.CoverPhoto.LargeSource" target="_blank"><img src="@Model.FacebookEvent.CoverPhoto.LargeSource" /></a>
        </div>
    </div>
    <div class="col-lg-9 col-md-9">
        <div class="col-lg-12 col-md-12">
            @if (Model.EventType == EventType.Class)
            {
                @Html.LabelFor(model => model.ClassType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 col-lg-10">
                    @Html.EditorFor(model => model.ClassType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassType, "", new { @class = "text-danger" })
                </div>
            }
            else
            {
                @Html.LabelFor(model => model.SocialType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 col-lg-10">
                    @Html.EnumDropDownListFor(model => model.SocialType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SocialType, "", new { @class = "text-danger" })
                </div>
            }
        </div>
        <div class="col-lg-12 col-md-12">
            @Html.LabelFor(model => model.FacebookEvent.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 col-lg-10">
                @Html.DisplayFor(model => model.FacebookEvent.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookEvent.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            @Html.LabelFor(model => model.FacebookEvent.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 col-lg-10">
                @Html.DisplayFor(model => model.FacebookEvent.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookEvent.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            @Html.LabelFor(model => model.FacebookEvent.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 col-lg-10">
                @Html.DisplayFor(model => model.FacebookEvent.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookEvent.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            @Html.LabelFor(model => model.FacebookEvent.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 col-lg-10">
                @Html.DisplayFor(model => model.FacebookEvent.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookEvent.Description, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 radio-list">
        <h4>Select a Place for this Event</h4>
        <div class="col-lg-4 col-md-4">
            @Html.RadioButton("Places", Model.NewPlace.Selected, new { @id = Model.NewPlace.Id })
            <label class="col-lg-12 col-md-12 btn btn-default" for="@Model.NewPlace.Id">
                <h4>New Place</h4>
                @Html.EditorFor(model => model.Places.Where(x => x.Id == 0).FirstOrDefault().Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Place Name" } })
                @Html.EditorFor(model => model.Places.Where(x => x.Id == 0).FirstOrDefault().Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                @Html.EditorFor(model => model.Places.Where(x => x.Id == 0).FirstOrDefault().City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                @Html.EnumDropDownListFor(model => model.Places.Where(x => x.Id == 0).FirstOrDefault().State, "- Select a State-", new { @class = "form-control" }) 
                @Html.EditorFor(model => model.Places.Where(x => x.Id == 0).FirstOrDefault().Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zipcode" } })
            </label>
        </div>
        @foreach (var pl in Model.Places)
        {
            <div class="col-lg-4 col-md-4">
                @if (pl.Selected)
                {
                    @Html.RadioButtonFor(m => m.Places, pl.Selected, new { id = pl.Id })
                }
                else
                {
                    @Html.RadioButtonFor(m => m.Places, pl.Selected, new { id = pl.Id })
                }
                <label class="col-lg-12 col-md-12 btn btn-default" for="@pl.Id">
                    <h4>@pl.Name</h4>
                    @pl.PlaceType<br />
                    @pl.Address<br />
                    @pl.City @pl.State, @pl.Zip<br />
                    <img src="https://maps.googleapis.com/maps/api/staticmap?center=@pl.Latitude,@pl.Longitude&zoom=10&size=250x100&maptype=roadmap&markers=color:red%7Clabel:A%7C @pl.Latitude, @pl.Longitude">
                </label>
            </div>
        }
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin: 10px;">
        <input type="submit" value="Finish Creating @Model.EventType" class="btn btn-lg btn-primary" />
    </div>
</div>
}
