@model EDR.Models.ViewModels.EventViewModel
@using EDR.Utilities
@using EDR.Models
@using EDR.Enums
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = Model.Event.Name;
    var userid = User.Identity.GetUserId();
}

@{
    var eventType = Model.Event is Class ? "Class" : "Social";
    //var instance = Model.Event.EventInstances.Where(e => e.DateTime >= DateTime.Today).OrderBy(c => c.DateTime).FirstOrDefault();
    //if (instance == null)
    //{
    //    instance = Model.Event.EventInstances.OrderByDescending(c => c.DateTime).FirstOrDefault();
    //}
    var reg = Model.CurrentInstance.EventRegistrations.Where(r => r.UserId == userid).FirstOrDefault();
}

<ol class="breadcrumb">
    @if (Model.Event is Class)
    {
        <li>@Html.ActionLink("All Classes", "Learn", "Home")</li>
    }
    else
    {
        <li>@Html.ActionLink("All Socials", "Social", "Home")</li>
    }
    <li class="active">View @Model.EventType</li>
</ol>

<style>
.oneline {
    display: inline-block;
    vertical-align: middle;
    max-width: 100%;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12 verticaljustify nospace">
            <div class="text-left textoverlaycontainer" style="height: 100%;">
                <div style="opacity:0.7;filter:alpha(opacity=70); height: 100%;">
                    <span style="line-height: 100%; vertical-align: middle;"></span><img style="max-width: 100%; max-height: 100%;" src="@Url.Content(EDR.Utilities.ApplicationUtility.CheckImageLink(Model.Event.PhotoUrl))" />
                </div>
                <div class="textoverlay topleft text-left" style="width: 100%;">
                    <h1 class="oneline" style="color: #fff;">@Model.Event.Name</h1>
                    <h3 class="nospace" style="color: #fff;">
                        @Model.CurrentInstance.DateTime.ToString("ddd, MMM\nd") @@@(((DateTime)Model.CurrentInstance.StartTime).ToShortTimeString())
                        @*@if (instance != null)
                        {
                            @instance.DateTime.ToString("ddd, MMM\nd") @:@@ @(((DateTime)instance.StartTime).ToShortTimeString())
                        }
                        else
                        {
                            <text>Past Event</text>
                        }*@
                    </h3>
                    <div id='parentc' class='col-lg-4 nospace'>
                        <input id='eventrating' type='hidden' class='ratingval' />
                        <div id='cont' class='rateYo'></div>
                    </div>
                </div>
                <div class="textoverlay bottomleft">
                    <h2 class="nospace" style="color: #fff;">
                        @if (Model.Event.Free)
                        {
                            @:Free
                        }
                        else if (Model.Tickets.Count() != 0)
                        {
                            if (Model.Tickets.Where(t => (t.Start == null || t.Start <= DateTime.Today) && (t.End == null || t.End >= DateTime.Today)).Count() > 0)
                            {
                                @Model.Tickets.Where(t => (t.Start == null || t.Start <= DateTime.Today) && (t.End == null || t.End >= DateTime.Today)).Min(t => t.Price).ToString("C0")
                            }
                            else
                            {
                                @Model.Tickets.Min(t => t.Price).ToString("C0")
                            }
                        }
                        else
                        {
                            @:Free
                        }
                    </h2>
                </div>

                @if (Model.EventType == EventType.Class)
                {
                    <div class="textoverlay bottomright">
                        <h3>
                            <span class="label label-success">
                                @{
                                    switch (((Class)Model.Event).SkillLevel)
                                    {
                                        case 1:
                                            <text>Beginner</text>;
                                            break;
                                        case 2:
                                            <text>Beginner/Intermediate</text>;
                                            break;
                                        case 3:
                                            <text>Intermediate</text>;
                                            break;
                                        case 4:
                                            <text>Intermediate/Advanced</text>;
                                            break;
                                        case 5:
                                            <text>Advanced</text>;
                                            break;
                                    }
                                }
                            </span>
                        </h3>
                    </div>
                                }
            </div>
        </div>
        <div class="col-xs-12 verticaljustify nospace">
            <p>
                <div style="border: 1px solid #ddd;">
                    <a rel="nofollow" target="_blank" href="https://maps.google.com/?q=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude">
                        <img style="width: 100%;" src="https://maps.googleapis.com/maps/api/staticmap?center=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude&zoom=10&size=500x200&maptype=roadmap&markers=color:red%7Clabel:A%7C @Model.Event.Place.Latitude, @Model.Event.Place.Longitude&key=@System.Configuration.ConfigurationManager.AppSettings["GoogleAPIKey"]" title="@Model.Event.Place.City, @Model.Event.Place.StateName">
                    </a>
                </div>
            </p>
        </div>
        <div class="col-xs-12">
            @Html.DisplayFor(m => Model.Event.DanceStyles, "DanceStyleLabels")
        </div>
        <div class="col-xs-12 verticaljustify nospace">
            @{
                <div class="text-center verticalcenter">
                    <div class="btn-group" style="width: 100% !important; padding: 10px 0px 10px 0px;">
                        <div>
                            <button class="btn btn-default btn-sm col-lg-11" type="button">
                                <h4>@Model.CurrentInstance.DateTime.ToString("ddd, MMM d, yyyy") at @Convert.ToDateTime(Model.CurrentInstance.StartTime).ToShortTimeString()</h4>
                            </button>
                            <button type="button" class="col-lg-1 btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <h4>
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </h4>
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var i in Model.Event.EventInstances.Where(ei => ei.DateTime >= DateTime.Today))
                                {
                                    <li>
                                        @if (Model.EventType == EDR.Enums.EventType.Class)
                                        {
                                            <a class="large" style="padding: 0px 50px 0px 50px;" href="@Url.Action("Class", "Event", new { id = Model.Event.Id, eventname = ApplicationUtility.ToUrlSlug(Model.Event.Name), location = ApplicationUtility.ToUrlSlug(Model.Event.Place.City), instanceId = i.Id })">
                                                @i.DateTime.ToString("ddd, MMM d, yyyy") at @Convert.ToDateTime(i.StartTime).ToShortTimeString()
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="large" style="padding: 0px 50px 0px 50px;" href="@Url.Action("Social", "Event", new { id = Model.Event.Id, eventname = ApplicationUtility.ToUrlSlug(Model.Event.Name), location = ApplicationUtility.ToUrlSlug(Model.Event.Place.City), instanceId = i.Id })">
                                                @i.DateTime.ToString("ddd, MMM d, yyyy") at @Convert.ToDateTime(i.StartTime).ToShortTimeString()
                                            </a>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div>
                    @if (!Model.Event.Free)
                    {
                        <p class="text-center" style="background-color: lemonchiffon;">
                            <span class="text-success">You have (<strong>@Model.AvailableTickets</strong>) Available Tickets for this Event</span>
                        </p>
                    }
                </div>
                <div class="text-center verticalcenter">
                    <div class="btn-group" style="padding-top: 18px;">
                        @if (Model.CurrentInstance.DateTime >= DateTime.Today)
                        {
                            //  User is not registered
                            if (Model.CurrentInstance.EventRegistrations.Where(r => r.UserId == userid).Count() == 0)
                            {
                                if (Model.AvailableTickets > 0)
                                {
                                    <button type="button" class="btn btn-lg btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Register Now <span class="caret"></span>
                                    </button>
                                                <ul class="dropdown-menu" role="menu">
                                                    @for (int i = 1; i <= Model.AvailableTickets && i <= 10; i++)
                                                    {
                                                        <li><a href="@Url.Action("Attendees", "Store", new { instanceId = Model.CurrentInstance.Id, attendees = i })"><i class="text-info glyphicon glyphicon-plus-sign"></i> @(i) Attendee@(i > 1 ? "(s)" : "")</a></li>
                                                    }
                                                </ul>
                                }
                                else
                                {
                                    if (Model.CurrentInstance.Event.Free)
                                    {
                                        @Html.ActionLink("Register", "Register", new { id = Model.CurrentInstance.Id }, new { @class = "btn btn-primary btn-lg", @style = "width: 100%;" })
                                    }
                                    else
                                    {
                                        var today = DateTime.Today;
                                        if (Model.Tickets.Where(t => (t.Start == null || t.Start <= DateTime.Today) && (t.End == null || t.End >= DateTime.Today)).Count() > 0)
                                        {
                                            @Html.ActionLink("Purchase", "Register", new { id = Model.CurrentInstance.Id }, new { @class = "btn btn-primary btn-lg", @style = "width: 100%;" })
                                        }
                                        else
                                        {
                                            <a class="btn btn-default btn-lg">Tickets Not Available</a>
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (!Model.Event.Free)
                                {
                                    //if (reg.UserTicket.Ticket.EventId == null && reg.Checkedin == null)
                                    if (Model.CurrentInstance.EventRegistrations.Where(r => r.UserId == userid && r.Checkedin != null).Count() == 0)
                                    {
                                        <div class="btn-group">
                                            <a class="btn btn-primary btn-lg">(@Model.CurrentInstance.EventRegistrations.Where(r => r.UserId == userid).Count()) Registered</a>
                                            <button type="button" class="btn btn-primary btn-lg dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu" role="menu" style="width: 100%;">
                                                @*<li>@Html.ActionLink("Un-Register", "UnRegister", new { id = instance.Id }, new { @class = "btn btn-danger" })</li>*@
                                                @foreach (var er in Model.CurrentInstance.EventRegistrations.Where(r => r.UserId == userid))
                                                {
                                                    <li class="col-lg-12" style="padding: 5px;">
                                                        <div class="row">
                                                            <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 oneline" style="padding-top: 5px;">
                                                                @er.FirstName @er.LastName
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 right nospace">
                                                                <a class="btn btn-danger btn-sm" title="Un-register" style="display: inline-block;" href="@Url.Action("UnRegister", "Event", new { id = Model.CurrentInstance.Id, regid = er.Id })">
                                                                    <i class="glyphicon glyphicon glyphicon-remove-circle"></i>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </li>
                                                }
                                                @for (int i = 1; i <= Model.AvailableTickets && i <= 10; i++)
                                                {
                                                    <li><a style="padding: 10px" href="@Url.Action("Attendees", "Store", new { instanceId = Model.CurrentInstance.Id, attendees = i })"><i class="text-info glyphicon glyphicon-plus-sign"></i> @(i) Attendee@(i > 1 ? "(s)" : "")</a></li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <a class="btn btn-default btn-lg">Registered</a>
                                    }
                                }
                                else
                                {
                                    @Html.ActionLink("Un-Register", "UnRegister", new { id = Model.CurrentInstance.Id }, new { @class = "btn btn-danger btn-lg" });
                                }
                            }
                        }
                        else
                        {
                            <h4>Event has Ended</h4>
                        }
                    </div>
                </div>

                @*<div class="text-center verticalcenter">
                    <div class="text-center">
                        @if (instance.DateTime >= DateTime.Today)
                        {
                            if (instance.EventRegistrations.Where(r => r.UserId == userid).Count() == 0)
                            {
                                @Html.ActionLink("Register", "Register", new { id = instance.Id }, new { @class = "btn btn-primary btn-lg", @style = "width: 100%;" })
                            }
                            else
                            {
                                if (!Model.Event.Free)
                                {
                                    if (reg.UserTicket.Ticket.EventId == null && reg.Checkedin == null)
                                    {
                                        @Html.ActionLink("Un-Register", "UnRegister", new { id = instance.Id }, new { @class = "btn btn-danger btn-lg", @style = "width: 100%;" });
                                    }
                                    else
                                    {
                                        <a class="btn btn-default btn-lg">Registered</a>
                                    }
                                }
                                else
                                {
                                    @Html.ActionLink("Un-Register", "UnRegister", new { id = instance.Id }, new { @class = "btn btn-danger btn-lg", @style = "width: 100%;" });
                                }
                            }
                        }
                        else
                        {
                            <h4>Event has Ended</h4>
                        }
                    </div>
                </div>*@
                if (reg != null)
                    {
                        <div class="text-center">
                            <h3>Your Registration Code</h3>
                            <div class="barcode" style="display: inline-block; text-align: center;"><input class="regid" type="hidden" value="@reg.Id" /></div>
                        </div>
                    }
            }
        </div>
        <div class="col-xs-12">
            <div class="description">
                <div style="white-space: pre-line;">
                    @Html.Raw(EDR.Utilities.ApplicationUtility.WithActiveLinks(Model.Event.Description))
                </div>
            </div>
        </div>
        <div class="col-xs-12 nospace" style="margin-top: 20px !important;">
            <div class="panel with-nav-tabs panel-default">
                <div class="panel-heading nospace" style="border-bottom: none !important;">
                    <ul class="nav nav-tabs nav-tabs-justified nospace">
                        <li class="nospace active"><a href="#videotab" data-toggle="tab">Videos</a></li>
                        <li class="nospace"><a href="#picturetab" data-toggle="tab">Pictures</a></li>
                        <li class="nospace"><a id="btnreviewstab" href="#reviewstab" data-toggle="tab">Reviews</a></li>
                    </ul>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="videotab">
                            <div id="videos">
                            </div>
                        </div>
                        <div class="tab-pane fade" id="picturetab">
                            <div id="pictures">
                            </div>
                        </div>
                        <div class="tab-pane fade" id="reviewstab">
                            <div class="text-left">
                                <span style="line-height: 50px; vertical-align: bottom;"></span>
                                @if (User.Identity.IsAuthenticated && Model.Event.EventInstances.Where(i => i.EventRegistrations.Any(r => r.UserId == User.Identity.GetUserId())).Count() > 0)
                                {
                                    <button id="btnreview" type="button" class="btn btn-sm btn-primary" data-toggle="collapse" data-target="#postreview">Write a Review</button>
                                }
                            </div>
                            <div id="reviews-container">
                                <div id="postreview" class="collapse">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)
                                    @Html.HiddenFor(m => m.Review.Id)
                                    @Html.HiddenFor(m => m.Review.ReviewDate)
                                    @Html.HiddenFor(m => m.Review.Author.Id)
                                    @Html.HiddenFor(m => m.Event.Id)
                                    <p>
                                        <div id="parentc">
                                            @Html.HiddenFor(m => m.Review.Rating, new { @class = "ratingval" })
                                            <div id="cont" class="postrating"></div>
                                        </div>
                                    </p>
                                    <p>
                                        @Html.TextAreaFor(m => m.Review.ReviewText, htmlAttributes: new { @class = "form-control", @style = "width: 100%; max-width: 100%; resize: none;", @rows = "10" })
                                    </p>
                                    <div class="text-right">
                                        <button id="btnpostreview" class="btn btn-danger" data-dismiss="modal">Post Review</button>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                                <ul class="my-navigation pagination" style="display: none;">
                                    <li class="simple-pagination-first"></li>
                                    <li class="simple-pagination-previous"></li>
                                    <li class="simple-pagination-next"></li>
                                    <li class="simple-pagination-last"></li>
                                </ul>
                                <div id="reviews" style="padding-top: 10px;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    <link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
    <script src="~/Scripts/jquery.rateyo.js"></script>
    <script src="~/Scripts/jquery-simple-pagination-plugin.js"></script>
    @*<link href="~/Content/Simple-Pagination.css" rel="stylesheet" />*@
    <script src="~/Scripts/readmore.js"></script>
    <script src="~/Scripts/jquery-qrcode-0.14.0.js"></script>

    <script>
        $(function () {
            $('.barcode').qrcode({
                "render": "div",
                "size": 200,
                "color": "#3a3",
                "text": $('.regid', this).val()
            });

            $('.description').readmore({
                speed: 500,
                collapsedHeight: 100,
            });
            loadReviews();

            $(".postrating").rateYo({
                starWidth: "18px",
                ratedFill: "#FFD700",
                normalFill: "#ccc",
                fullStar: true,
                onInit: function (rating, rateYoInstance) {
                    var t = $(this);
                    var rating = t.parent('div').find('.ratingval').prop('value');
                    if (rating >= 1 && rating <= 5) {
                        $(this).rateYo("option", "rating", rating);
                    }
                    else {
                        $(this).rateYo("option", "rating", 5);
                    }
                }
            });
        });

        $('#btnpostreview').click(function () {
            try {
                var id = $("#Review_Id").prop('value');
                if (id == null || id == "") {
                    id = 0;
                }
                var eventId = $("#Event_Id").prop('value');
                var rating = $(".postrating").rateYo("rating");
                var review = $("#Review_ReviewText").prop('value');
                $.ajax({
                    url: '@Url.Action("PostReviewAsync", "Event")',
                    type: 'POST',
                    data: { 'id': id, 'eventId': eventId, 'rating': rating, 'review': review },
                    dataType: 'json',
                    success: function (data) {
                        $("#Review_Id").prop('value', data.Id);
                        loadReviews();
                    }
                    //success: function (result) {
                    //    alert(JSON.stringify(result));
                    //    alert(result.id);
                    //    $("#Review_Id").prop('value', result.id);
                    //    alert($("#Review_Id").prop('value'));
                    //    loadReviews();
                    //}
                });
                $('#postreview.collapse').collapse('hide');
            }
            catch (err) {
                alert(err.message);
            }
        });

        //  Load Videos via JSON
        $(function () {
            $.ajax({
                url: '@Url.Action("GetVideosJSON", "Event")',
                data: { id: '@Model.Event.Id.ToString()' },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var row = ""
                    $.each(data, function (index, item) {
                        row +=
                            "<div class='col-xs-6'>" +
                                "<div class='buttonoverlay_container'>" +
                                    "<img class='img-rounded' src='http://img.youtube.com/vi/" + item.Id + "/0.jpg' />" +
                                    "<a class='btn btn-danger videoplayer' target='_blank' href='" + item.VideoUrl + "' title='" + item.Title + "'>" +
                                        "<i class='glyphicon glyphicon-play'></i>" +
                                    "</a>" +
                                    "<div class='item-short'><b>" + item.Title + "</b></div>" +
                                "</div>" +
                            "</div>"
                    });
                    //  alert(row);
                    $("#videos").html(row);
                    //  $("a.videoplayer").YouTubePopUp();
                    //$(row).find('.pickfbpic').click(function () {
                    //    alert("here");
                    //}).end();
                }
            })
        })
        //  Load Videos via JSON

        //  Load Pictures via JSON
        $(function () {
            $.ajax({
                url: '@Url.Action("GetPicturesJSON", "Event")',
                data: { id: '@Model.Event.Id.ToString()' },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var row = ""
                    $.each(data, function (index, item) {
                        row +=
                            "<div class='col-xs-6'>" +
                                "<a target='_blank' href='" + item.FileName + "' style='text-align: left;' title='" + item.Title + "'>" +
                                    "<div class='croppedpic' style='height: 100px;'>" +
                                        "<img style='max-height: 100%; max-width:100%;' src='" + item.ThumbnailFilename + "' alt='" + item.Title + "' />" +
                                    "</div>" +
                                "</a>" +
                                "<div class='item-short small'><b>" + item.Title + "</b></div>" +
                            "</div>"
                    });
                    $("#pictures").html(row);
                }
            })
        })
        //  Load Pictures via JSON

        //  Load Reviews via JSON
        function loadReviews() {
            $.ajax({
                url: '@Url.Action("GetReviewsJSON", "Event")',
                data: { id: '@Model.Event.Id.ToString()' },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var row = "";
                    $('#btnreviewstab').text('Reviews(' + data.length + ')');
                    var total = 0;
                    for (i = 0; i < data.length; i++) {  //loop through the array
                        total += data[i].Rating;  //Do the math!
                    }
                    $('#eventrating').val(total/data.length);
                    $.each(data, function (index, item) {
                        row +=
                            "<div>" +
                                "<div id='parentc' class='col-lg-4 nospace'>" +
                                    "<input id='rv' type='hidden' value=" + item.Rating + " class='ratingval' />" +
                                    "<div id='cont' class='rateYo'></div>" +
                                "</div>" +
                                "<h4 class='oneline'>" + item.ReviewText + "</h4>" +
                                "<div>" +
                                    item.ReviewText +
                                "</div>" +
                                "<div style='padding-top: 10px;'>" +
                                    "<span class='small'>" +
                                        "from <span class='text-info'>" + item.FirstName + "</span> - " + item.ReviewDate +
                                    "</span>" +
                                "</div>" +
                                "<hr/>" +
                            "</div>"

                            //"<tr>" +
                            //    "<td>" +
                            //        "<div style='border-bottom: 1px dashed #bbb; margin-bottom: 10px; width: 100%;'>" +
                            //            "<div id='parentc' class='col-lg-4 nospace'>" +
                            //                "<input id='rv' type='hidden' value=" + item.Rating + " class='ratingval' />" +
                            //                "<div id='cont' class='rateYo'></div>" +
                            //            "</div>" +
                            //            "<div class='oneline'><strong>" + item.ReviewText + "</strong></div>" +
                            //            "<div style='padding-top: 10px;'>" +
                            //                "<span class='small'>" +
                            //                    "from <span class='text-info'>" + item.FirstName + "</span> - " + item.ReviewDate +
                            //                "</span>" +
                            //            "</div>" +
                            //            "<div class='row' style='padding-top: 10px; padding-bottom: 10px;'>" +
                            //                "<div class='col-lg-12'>" +
                            //                    item.ReviewText +
                            //                "</div>" +
                            //            "</div>" +
                            //        "</div>" +
                            //    "</td>" +
                            //"</tr>";
                    });
                    //  row = "<table style='border-collapse: collapse; width: 100%;' cellpadding='0' cellspacing='0'>" + row + "</table>";
                    $("#reviews").html(row);
                    $(".rateYo").rateYo({
                        starWidth: "18px",
                        ratedFill: "#FFD700",
                        normalFill: "#ccc",
                        onInit: function (rating, rateYoInstance) {
                            var t = $(this);
                            $(this).rateYo("option", "rating", t.parent('div').find('.ratingval').prop('value'));
                            $(this).rateYo("option", "readOnly", true);
                        }
                    });
                    //  pageReviews();
                }
            })
        }
        //  Load Reviews via JSON
    </script>
}