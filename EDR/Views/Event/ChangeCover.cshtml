@model EDR.Models.ViewModels.EventChangeCoverViewModel
@using EDR.Models
@using EDR.Enums

@{
    ViewBag.Title = "ChangePicture";
}

<h1 class="page-header">
    Change Picture for @Model.Event.Name
</h1>

<div class="container">
    <div class="row">
        <div class="thumbnail col-md-2">
            @if (Model.Event.VideoUrl != null)
            {
                <div style="height: 150px;">
                    @Html.Partial("~/Views/Shared/_VideoPlayerPartial.cshtml", new Video() { PhotoUrl = Model.Event.PhotoUrl, VideoUrl = Model.Event.VideoUrl })
                </div>
            }
            else
            {
                if (Model.Event.PhotoUrl != null)
                {
                    <a target="_blank" href="@Url.Content(Model.Event.PhotoUrl)">
                        <div class="croppedpic" style="height: 150px;">
                            <img src="@Url.Content(Model.Event.PhotoUrl)" />
                        </div>
                    </a>
                }
                else
                {
                    <div class="croppedpic" style="height: 150px;">
                        <img src="~/Content/images/MissingImage.jpg" />
                    </div>
                }
            }
        </div>
    </div>
    <div class="tabbable panel panel-default">
        <div class="panel-heading">
            <ul class="nav nav-tabs nav-justified" role="tablist">
                <li class="active"><a href="#newpic" data-toggle="tab">New Picture</a></li>
                <li><a href="#eventmedia" data-toggle="tab">Choose an Existing Picture or Video</a></li>
            </ul>
        </div>
        <div class="panel-body">
            <div class="tab-content">
                <div id="newpic" class="tab-pane active">
                    <h3>Upload a New Picture</h3>
                    @using (Html.BeginForm("UploadPicture",
                                "Event",
                                new { returnUrl = @Url.Action("ChangeCover", new { id = @Model.Event.Id }) },
                                FormMethod.Post,
                                new { enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(x => x.Event.Id)
                        <div class="form-group form-inline">
                            <input type="file" name="file" id="file" class="form-control" />
                            <input id="submit" type="submit" class="btn btn-default" value="Submit" />
                        </div>
                        <p>
                            @ViewBag.Message
                        </p>

                        <script type="text/javascript">
                            $('#submit').click(function () {
                                //check whether browser fully supports all File API
                                if (window.File && window.FileReader && window.FileList && window.Blob) {
                                    //get the file size and file type from file input field
                                    var fsize = $('#file')[0].files[0].size;

                                    if (fsize > 1048576) //do something if file size more than 1 mb (1048576)
                                    {
                                        alert("File is too big.  Please try another.");
                                        return false;
                                    } else {
                                        return true;
                                    }
                                } else {
                                    alert("Please upgrade your browser, because your current browser lacks some new features we need!");
                                }
                            });
                        </script>
                    }
                </div>
                <div id="eventmedia" class="tab-pane">
                    <ul class="list-inline">
                        @if (Model.Media != null && Model.Media.Count() > 0)
                        {
                            foreach (var media in Model.Media)
                            {
                                <li class="thumbnail" style="vertical-align: top; width: 150px;">
                                    @if (media.MediaType == MediaType.Video)
                                    {
                                        <div style="height: 100px;">
                                            @Html.Partial("~/Views/Shared/_VideoPlayerPartial.cshtml", new Video() { PhotoUrl = media.PhotoUrl, VideoUrl = media.MediaUrl })
                                        </div>
                                    }
                                    else
                                    {
                                        <a target="_blank" href="@Url.Content(media.PhotoUrl)">
                                            <div class="croppedpic" style="height: 100px;">
                                                <img src="@Url.Content(media.PhotoUrl)" />
                                            </div>
                                        </a>
                                    }
                                    <a class="btn btn-primary" style="width: 100%;" title="Add to Cover" href="@Url.Action("Cover", "Event", new { eventId = Model.Event.Id, photoUrl = media.PhotoUrl, videoUrl = media.MediaUrl, returnUrl = @Url.Action("View", "Event", new { id = @Model.Event.Id, eventType = Model.EventType }) })">
                                        <i class="glyphicon glyphicon-plus-sign"></i>
                                        Set Cover
                                    </a>
                                </li>
                            }
                        }
                        else
                        {
                            @:There are no pictures for this event.
                }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.ActionLink("Back to Event", "View", "Event", new { id = Model.Event.Id, eventType = Model.EventType }, htmlAttributes: new { @class = "btn btn-primary" })
