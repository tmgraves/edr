@model EDR.Models.ViewModels.EventViewModel
@using EDR.Utilities
@using EDR.Models
@using EDR.Enums
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = Model.Event.Name;
    var userid = User.Identity.GetUserId();
}

<style>
    .verticaljustify {
        height: 220px;
      position: relative;
    }

    .verticaljustify .attachbottom {
      position: absolute;
      bottom: 0;
      right: 0;
    }

.verticalcenter {
    display: inline;
    line-height: 100px;
}

.verticalcenter > * {
    display: inline;
    vertical-align: middle;
}

.verticalcenter > * > * {
    display: inline;
    vertical-align: middle;
}
    .viewbtn {
        position:absolute;
        top:5px;
        left:5px;
        display: none;
    }
    #img_container:hover a {
        display: block;
    }
</style>

@{
    var eventType = Model.Event is Class ? "Class" : "Social";
    var instance = Model.Event.EventInstances.Where(e => e.DateTime >= DateTime.Today).OrderBy(c => c.DateTime).FirstOrDefault();
    if (instance == null)
    {
        instance = Model.Event.EventInstances.OrderByDescending(c => c.DateTime).FirstOrDefault();
    }
    var reg = instance.EventRegistrations.Where(r => r.UserId == userid).FirstOrDefault();
}

<ol class="breadcrumb">
    @if (Model.Event is Class)
    {
        <li>@Html.ActionLink("All Classes", "Learn", "Home")</li>
    }
    else
    {
        <li>@Html.ActionLink("All Socials", "Social", "Home")</li>
    }
    <li class="active">View @Model.EventType</li>
</ol>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 verticaljustify nospace">
            <div class="col-lg-4" style="height: 100%;">
                <img style="max-height: 100%; max-width: 100%;" src="@Url.Content(EDR.Utilities.ApplicationUtility.CheckImageLink(Model.Event.PhotoUrl))" />
            </div>
            <div class="col-lg-8">
                <div class="row">
                    <div class="col-lg-10 nospace">
                        <h2 class="item-short" style="margin: 0px !important;">@Model.Event.Name</h2>
                        <h3 style="margin: 0px !important;">
                            @if (Model.EventType == EventType.Class)
                            {
                                @:(@Model.Class.ClassType)
                            }
                            else
                            {
                                @:(@(((EDR.Models.Social)Model.Event).SocialType))
                        }
                        </h3>
                    </div>
                    <div class="col-lg-2 text-right">
                        @if ((Model.EventType == EventType.Class && ((Class)Model.Event).Teachers.Where(t => t.ApplicationUser.Id == User.Identity.GetUserId()).Count() == 1) || (Model.EventType == EventType.Social && ((Social)Model.Event).Promoters.Where(p => p.ApplicationUser.Id == User.Identity.GetUserId()).Count() == 1))
                        {
                            <a class="btn btn-warning" title="Edit" href="@Url.Action("Manage", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">
                                <i class="glyphicon glyphicon-edit"></i>
                                <span class="sr-only">Edit</span>
                            </a>
                                <a class="btn btn-danger" title="Delete Event" href="@Url.Action("Delete", "Event", new { id = Model.Event.Id, eventType = Model.EventType, returnUrl = Model.ReturnUrl })" onclick="return confirm('Are you sure you want to DELETE this Event?')">
                                    <i class="glyphicon glyphicon-remove"></i>
                                    <span class="sr-only">Delete Event</span>
                                </a>
                        }
                    </div>
                </div>
                @if (Model.EventType == EventType.Class)
                {
                    <p>
                        <span class="label label-success">
                            @{
                                switch (((Class)Model.Event).SkillLevel)
                                {
                                    case 1:
                                        <text>Beginner</text>;
                                        break;
                                    case 2:
                                        <text>Beginner/Intermediate</text>;
                                        break;
                                    case 3:
                                        <text>Intermediate</text>;
                                        break;
                                    case 4:
                                        <text>Intermediate/Advanced</text>;
                                        break;
                                    case 5:
                                        <text>Advanced</text>;
                                        break;
                                }
                            }
                        </span>
                    </p>
                    }
            </div>
            <div class="col-lg-8 attachbottom bg-success">
                @{
                    <div style="width: 100%;">
                        <div class="col-lg-8">
                            <h3>Next Date: <span class="text-info">@instance.DateTime.ToString("ddd, MMM d, yyyy") at @Convert.ToDateTime(instance.StartTime).ToShortTimeString()</span></h3>
                            <p class="text-center" style="background-color: lemonchiffon;">
                                <span class="text-success">You have (<strong>@Model.AvailableTickets</strong>) Available Tickets for this Event</span>
                            </p>
                        </div>
                        <div class="col-lg-4 text-center verticalcenter">
                            <div class="text-center">
                                @if (instance.DateTime >= DateTime.Today)
                                {
                                    if (instance.EventRegistrations.Where(r => r.UserId == userid).Count() == 0)
                                    {
                                        @Html.ActionLink("Register", "Register", new { id = instance.Id }, new { @class = "btn btn-primary btn-lg", @style = "width: 100%;" })
                                    }
                                    else
                                    {
                                        if (reg.UserTicket.Ticket.EventId == null && reg.Checkedin == null)
                                        {
                                            @Html.ActionLink("Un-Register", "UnRegister", new { id = instance.Id }, new { @class = "btn btn-danger btn-lg" });
                                        }
                                        else
                                        {
                                            <a class="btn btn-default btn-lg">Registered</a>
                                        }
                                    }
                                }
                                else
                                {
                                    <h4>Event has Ended</h4>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <hr />
    <div class="row vertical-divider">
        <div class="col-lg-4">
            @*@if (reg != null)
            {
                <div class="text-center">
                    <h3>Your Registration Code</h3>
                    <div class="barcode" style="display: inline-block; text-align: center;"><input class="regid" type="hidden" value="@reg.Id" /></div>
                </div>
            }*@
            <div style="border: 1px solid #ddd;" >
                <a target="_blank" href="https://maps.google.com/?q=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude">
                    <img style="width: 100%;" src="https://maps.googleapis.com/maps/api/staticmap?center=@Model.Event.Place.Latitude,@Model.Event.Place.Longitude&zoom=10&size=500x200&maptype=roadmap&markers=color:red%7Clabel:A%7C @Model.Event.Place.Latitude, @Model.Event.Place.Longitude" title="@Model.Event.Place.City, @Model.Event.Place.StateName">
                </a>
            </div>
            <div style="border: 1px solid #ccc;">
                <div class="row" style="padding: 5px;">
                    <div class="col-lg-12">
                        <div class="col-lg-3">
                            @Html.Label("Where:")
                        </div>
                        <div class="col-lg-9">
                            @Html.ActionLink(Model.Event.Place.Name, "Details", "Place", new { id = Model.Event.Place.Id }, new { }) (@Model.Event.Place.PlaceType.ToString())<br />
                            @Model.Event.Place.Address <br /> @Model.Event.Place.City, @Model.Event.Place.StateName @Model.Event.Place.Zip
                        </div>
                    </div>
                </div>
                @if (eventType == "Class")
                {
                    <div class="row" style="padding: 5px;">
                        <div class="col-lg-12">
                            <div class="col-lg-3">
                                @Html.Label("School:")
                            </div>
                            <div class="col-lg-9">
                                @Html.ActionLink(((Class)Model.Event).School.Name, "View", "School", new { id = ((Class)Model.Event).SchoolId }, null)
                            </div>
                        </div>
                    </div>
                }
                @if (eventType == "Social")
                {
                    <div class="row" style="padding: 5px;">
                        <div class="col-lg-12">
                            <div class="col-lg-3">
                                @Html.Label("Music:")
                            </div>
                            <div class="col-lg-9">
                                @(EDR.Utilities.ApplicationUtility.GetDisplayName(((Social)Model.Event).MusicType))
                            </div>
                        </div>
                    </div>
                }
                <div class="row" style="padding: 5px;">
                    <div class="col-lg-12">
                        <div class="col-lg-3">
                            @Html.Label("Styles:")
                        </div>
                        <div class="col-lg-9">
                            @Html.DisplayFor(m => Model.Event.DanceStyles, "DanceStyleLabels")
                        </div>
                    </div>
                </div>
                @if (Model.EventType == EventType.Class)
                {
                    <div class="row" style="padding: 5px;">
                        <div class="col-lg-12">
                            <div class="col-lg-3">
                                @Html.Label("Teachers:")
                            </div>
                            <div class="col-lg-9">
                                @Html.DisplayFor(m => Model.Class.Teachers, "TeacherLinks")
                                @*@foreach (var t in Model.Class.Teachers)
                                {
                                    <div class="col-lg-6">
                                        @Html.DisplayFor(m => t, "Teacher")
                                    </div>
                                }*@
                           </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-lg-8">
            <h3>Details</h3>
            <div class="description">
                <div style="white-space: pre-line;">
                    @Html.Raw(EDR.Utilities.ApplicationUtility.WithActiveLinks(Model.Event.Description))
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row vertical-divider">
        <div class="col-lg-4">
            <div class="col-lg-12 nospace">
                <div class="row">
                    <div class="col-lg-6">
                        <h3>Reviews</h3>
                    </div>
                    <div class="col-lg-6 text-right">
                        <span style="line-height: 50px; vertical-align: bottom;"></span>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button id="btnreview" type="button" class="btn btn-sm btn-info" data-toggle="modal" data-target="#modalReview">Post Review</button>
                        }
                    </div>
                </div>
                <hr />
                <div id="reviews-container">
                    <ul class="my-navigation pagination">
                        <li class="simple-pagination-first"></li>
                        <li class="simple-pagination-previous"></li>
                        @*<li class="simple-pagination-page-numbers"></li>*@
                        <li class="simple-pagination-next"></li>
                        <li class="simple-pagination-last"></li>
                    </ul>
                    <div id="reviews">
                    </div>
                </div>
                @if (Model.Event.Reviews.Count() != 0)
                {
                }
                else
                {
                    <h5>No Reviews have been posted for this Event</h5>
                }
            </div>
            <div class="col-lg-12 nospace">
                <h3>Dancers</h3>
                <div class="row">
                    @{
                        var dancers = Model.Event.EventInstances.SelectMany(i => i.EventRegistrations.Select(r => r.User)).Distinct();
                    }
                    @if (dancers.Count() != 0)
                    {
                        foreach (var r in Model.Event.EventInstances.SelectMany(i => i.EventRegistrations.Select(r => r.User)).Distinct())
                        {
                            <div class="col-lg-3">
                                @Html.DisplayFor(m => r, "DancerThumblink")
                            </div>
                        }
                    }
                    else
                    {
                        <h5 class="text-center">No Dancers Registered</h5>
                    }
                </div>
                <hr />
            </div>
            <div class="col-lg-12 nospace">
                <h3>Links</h3>
                @foreach (var ee in Model.Event.LinkedMedia)
                {
                    <a class="item-short" target="_blank" href="@Url.Content(ee.Url)" title="@ee.Name" style="text-align: left;">
                        <strong>@ee.Name</strong>
                    </a>
                }
            </div>
        </div>
        <div class="col-lg-8">
            <div class="col-lg-12 nospace">
                <h3>Latest Updates</h3>
                <hr />
                
                <div id="updates-container">
                    <ul class="my-navigation pagination">
                        <li class="simple-pagination-first"></li>
                        <li class="simple-pagination-previous"></li>
                        <li class="simple-pagination-page-numbers"></li>
                        <li class="simple-pagination-next"></li>
                        <li class="simple-pagination-last"></li>
                    </ul>
                    <div id="feeddiv">
                    </div>
                </div>
            </div>
            @*<div class="col-lg-12 nospace">
                <h3>Videos</h3>
                <hr />
                <p>
                    <a class="btn btn-primary" data-toggle="collapse" href="#collapseVideos" aria-expanded="false" aria-controls="collapseVideos">
                        +View Videos
                    </a>
                </p>
                <div class="collapse" id="collapseVideos">
                </div>
            </div>*@
            @*@foreach (var v in Model.Event.Videos.OrderByDescending(v => v.PublishDate))
        {
            <div class="col-lg-3">
                @Html.DisplayFor(m => v, "VideoPlayer")
            </div>
        }*@
            @*new Video() { Author = v.Author, FacebookId = v.FacebookId, MediaSource = v.MediaSource, PhotoUrl = v.PhotoUrl, PlayList = v.PlayList, PublishDate = v.PublishDate, Title = v.Title, }))*@
            @*<div class="col-lg-12 nospace">
                <h3>Pictures</h3>
                <hr />
                <p>
                    <a class="btn btn-primary" data-toggle="collapse" href="#collapsePictures" aria-expanded="false" aria-controls="collapsePictures">
                        +View Pictures
                    </a>
                </p>
                <div class="collapse" id="collapsePictures">
                </div>
            </div>*@
            @*@foreach (var p in Model.Event.Pictures.OrderByDescending(v => v.PhotoDate))
        {
            <div class="col-lg-3">
                @Html.DisplayFor(m => p, "PictureThumbnail")
            </div>
        }*@
            <div class="col-lg-12 nospace">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs nav-justified" role="tablist">
                            <li role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab"><h4>Videos</h4></a></li>
                            <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab"><h4>Pictures</h4></a></li>
                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane active" id="home">
                                <div id="videos">
                                </div>
                            </div>
                            <div role="tabpanel" class="tab-pane" id="profile">
                                <div id="pictures">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Review -->
<div class="modal fade" id="modalReview" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.Review.Id)
                @Html.HiddenFor(m => m.Review.ReviewDate)
                @Html.HiddenFor(m => m.Review.Author.Id)
                @Html.HiddenFor(m => m.Event.Id)

                <p>
                    <div id="parentc">
                        @Html.HiddenFor(m => m.Review.Rating, new { @class = "ratingval" })
                        <div id="cont" class="postrating"></div>
                    </div>
                </p>
                <p>
                    @Html.TextAreaFor(m => m.Review.ReviewText, htmlAttributes: new { @class = "form-control", @style = "width: 100%; max-width: 100%;", @rows = "10" })
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnpostreview" class="btn btn-danger" data-dismiss="modal">Post Review</button>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <link rel="stylesheet" href="~/Content/jquery.rateyo.css" />
    <script src="~/Scripts/jquery.rateyo.js"></script>
    <script src="~/Scripts/jquery-simple-pagination-plugin.js"></script>
    @*<link href="~/Content/Simple-Pagination.css" rel="stylesheet" />*@
    <script src="~/Scripts/readmore.js"></script>
<script src="~/Scripts/jquery-qrcode-0.14.0.js"></script>

<link href="~/Content/YouTubePopUp.css" rel="stylesheet" />
<script src="~/Scripts/YouTubePopUp.jquery.js"></script>

<script>
    $(document).ready(function () {
        $("a.videoplayer").YouTubePopUp();
        //  $("a.bla-2").YouTubePopUp({ autoplay: 0 }); // Disable autoplay
    });

    loadReviews();
    pageUpdates();
    $('.description').readmore({ speed: 500 });

    //Reviews List
    function pageReviews() {
        $('#reviews-container').simplePagination({
            items_per_page: 5,
            number_of_visible_page_numbers: 3
        });
    }

//    pageReviews();

    //Updates List
    function pageUpdates() {
        $('#updates-container').simplePagination({
            items_per_page: 1,
            number_of_visible_page_numbers: 3
        });
    }

    $(function () {
        $('.barcode').qrcode({
            "render": "div",
            "size": 200,
            "color": "#3a3",
            "text": $('.regid', this).val()
        });

        $(".postrating").rateYo({
            starWidth: "18px",
            ratedFill: "#FFD700",
            normalFill: "#ccc",
            fullStar: true,
            onInit: function (rating, rateYoInstance) {
                var t = $(this);
                var rating = t.parent('div').find('.ratingval').prop('value');
                if (rating >= 1 && rating <= 5)
                {
                    $(this).rateYo("option", "rating", rating);
                }
                else {
                    $(this).rateYo("option", "rating", 5);
                }
            }
        });
    });

    //  Load Reviews via JSON
    function loadReviews() {
        $.ajax({
            url: '@Url.Action("GetReviewsJSON", "Event")',
            data: { id: '@Model.Event.Id.ToString()' },
            dataType: 'json',
            type: 'GET',
            success: function (data) {
                var row = ""
                $.each(data, function (index, item) {
                    row +=
                        "<tr>" +
                            "<td>" +
                                "<div style='border-bottom: 1px dashed #bbb; margin-bottom: 10px;'>" +
                                    "<div id='parentc' class='col-lg-4 nospace'>" +
                                        "<input id='rv' type='hidden' value=" + item.Rating + " class='ratingval' />" +
                                        "<div id='cont' class='rateYo'></div>" +
                                    "</div>" +
                                    "<div class='item-short' style='width: 150px !important;'><strong>" + item.ReviewText + "</strong></div>" +
                                    "<div style='padding-top: 10px;'>" +
                                        "<span class='small'>" +
                                            "from <span class='text-info'>" + item.FirstName + "</span> - " + item.ReviewDate +
                                        "</span>" +
                                    "</div>" +
                                    "<div class='row' style='padding-top: 10px; padding-bottom: 10px;'>" +
                                        "<div class='col-lg-12'>" +
                                            item.ReviewText +
                                        "</div>" +
                                    "</div>" +
                                "</div>" +
                            "</td>" +
                        "</tr>";
                });
                row = "<table style='border-collapse: collapse; width: 100%;' cellpadding='0' cellspacing='0'>" + row + "</table>";
                $("#reviews").html(row);
                $(".rateYo").rateYo({
                    starWidth: "18px",
                    ratedFill: "#FFD700",
                    normalFill: "#ccc",
                    onInit: function (rating, rateYoInstance) {
                        var t = $(this);
                        $(this).rateYo("option", "rating", t.parent('div').find('.ratingval').prop('value'));
                        $(this).rateYo("option", "readOnly", true);
                    }
                });
                pageReviews();
            }
        })
    }

    $(function () {

        $('#btnpostreview').click(function () {
            try {
                var id = $("#Review_Id").prop('value');
                if (id == null || id == "")
                {
                    id = 0;
                }
                var eventId = $("#Event_Id").prop('value');
                var rating = $(".postrating").rateYo("rating");
                var review = $("#Review_ReviewText").prop('value');
                $.ajax({
                    url: '@Url.Action("PostReviewAsync", "Event")',
                    type: 'POST',
                    data: { 'id': id, 'eventId' : eventId, 'rating' : rating, 'review' : review },
                    dataType: 'json',
                    success: function (data) {
                        $("#Review_Id").prop('value', data.Id);
                        loadReviews();
                    }
                    //success: function (result) {
                    //    alert(JSON.stringify(result));
                    //    alert(result.id);
                    //    $("#Review_Id").prop('value', result.id);
                    //    alert($("#Review_Id").prop('value'));
                    //    loadReviews();
                    //}
            });
            }
            catch (err) {
                alert(err.message);
            }
        });
    })
    //  Load Videos via JSON

    //alert(row);
    //alert((".rateYo").length);
    //$(".rateYo").each(function () {
    //    alert($(this).parent('div').find('.ratingval').prop('value'));
    //    $(this).addClass("foo");
    //});
    //$(".rateYo").each(function () {
    //});

    //  Load Feed via JSON
    $(function () {
        $.ajax({
            url: '@Url.Action("GetFeedJSON", "Event")',
            data: { id: '@Model.Event.Id.ToString()' },
            dataType: 'json',
            type: 'GET',
            success: function (data) {
                var row = "<table style='border-collapse: collapse; width: 100%;' cellpadding='0' cellspacing='0'>";
                $.each(data, function (index, item) {
                    var photolink = "";
                    if (item.PhotoUrl != null)
                    {
                        photolink =
                        photolink = "<img src='" + item.PhotoUrl + "' class='fitpicture' />";
                    }

                    var itemlink = "";
                    if(item.Link != null)
                    {
                        if (item.Message != null)
                        {
                            itemlink += item.Message + "<br/>";
                        }
                        itemlink += "<div id='img_container'>" +
                                        "<img id='profilepic' src='" + item.PhotoUrl + "' />" +
                                        "<a class='btn btn-info viewbtn' target='_blank' href='" + item.Link + "'>" +
                                            "<i class='glyphicon glyphicon-new-window'></i> View" +
                                        "</a>" +
                                    "</div>";
                    }
                    else
                    {
                        itemlink = item.Message;
                    }

                    row +=
                        "<tr>" +
                            "<td>" +
                                "<div style='border-bottom: 1px dashed #bbb; padding-bottom: 15px;'>" +
                                    "<strong>" + item.UpdateTime + "</strong><br />" +
                                    itemlink +
                                "</div>" +
                            "</td>" +
                        "</tr>"
                });
                row += "</table>";

                //  alert(row);
                $("#feeddiv").html(row);
                //$(row).find('.pickfbpic').click(function () {
                //    alert("here");
                //}).end();
                pageUpdates();
            }
        })
    })
    //  Load Feed via JSON

    //  Load Videos via JSON
    $(function () {
        $.ajax({
            url: '@Url.Action("GetVideosJSON", "Event")',
            data: { id: '@Model.Event.Id.ToString()' },
            dataType: 'json',
            type: 'GET',
            success: function (data) {
                var row = ""
                $.each(data, function (index, item) {
                    row +=
                        "<div class='col-lg-4'>" +
                            "<div class='buttonoverlay_container'>" +
                                "<img class='img-rounded' src='http://img.youtube.com/vi/" + item.Id + "/0.jpg' />" +
                                "<a class='btn btn-danger videoplayer' target='_blank' href='" + item.VideoUrl + "' title='" + item.Title + "'>" +
                                    "<i class='glyphicon glyphicon-play'></i>" +
                                "</a>" +
                                "<div class='item-short'><b>" + item.Title + "</b></div>" +
                            "</div>" +
                        "</div>"
                });
                //  alert(row);
                $("#videos").html(row);
                $("a.videoplayer").YouTubePopUp();
                //$(row).find('.pickfbpic').click(function () {
                //    alert("here");
                //}).end();
            }
        })
    })
    //  Load Videos via JSON

    //  Load Pictures via JSON
    $(function () {
        $.ajax({
            url: '@Url.Action("GetPicturesJSON", "Event")',
            data: { id: '@Model.Event.Id.ToString()' },
            dataType: 'json',
            type: 'GET',
            success: function (data) {
                var row = ""
                $.each(data, function (index, item) {
                    row +=
                        "<div class='col-lg-3'>" +
                            "<a target='_blank' href='" + item.FileName + "' style='text-align: left;' title='" + item.Title + "'>" +
                                "<div class='croppedpic' style='height: 100px;'>" +
                                    "<img src='" + item.ThumbnailFilename + "' alt='" + item.Title + "' />" +
                                "</div>" +
                            "</a>" +
                        "</div>"
                });
                // alert(row);
                $("#pictures").html(row);
                //$(row).find('.pickfbpic').click(function () {
                //    alert("here");
                //}).end();
            }
        })
    })
    //  Load Videos via JSON
</script>
}

@*<script type="text/javascript">
    $(document).ready(function (e) {
        //  locate each partial section
        //  if it has a URL set, load the contents into the area.

        $(".partialContents").each(function (index, item) {
                        var url = $(item).data("url");
                        if (url && url.length > 0) {
                $(item).load(url);
                        }
                    });
                });
    </script>*@
@*<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
        <div>
            <div class="partialContents" data-url="/Event/@Model.Event.Id/GetUpdates">
                <img src="~/Content/images/indicator.white.gif" />Loading...
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
        <div class="partialContents" data-url="/Event/@Model.Event.Id/GetRelatedEvents?eventType=@Model.EventType">
            <img src="~/Content/images/indicator.white.gif" />Loading...
        </div>
        <div class="well" style="white-space: pre-line">
            @Html.Raw(EDR.Utilities.ApplicationUtility.WithActiveLinks(Model.Event.Description))
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 style="width: 100%; vertical-align: bottom;">
                    Linked Events/Groups
                </h4>
            </div>
            <div class="panel-body">
                @if (User.Identity != null)
                {
                    if (Model.Event is Class && Model.Class.Teachers.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)
                    {
                        <a class="btn btn-link" title="Link Facebook Event/Group" href="@Url.Action("AddFacebookLink", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">
                            <i class="glyphicon glyphicon-plus-sign"></i>
                            Add an Event/Group/Page
                        </a>
                    }
                    else if (Model.Event is Social && Model.Social.Promoters.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)
                    {
                        <a class="btn btn-link" title="Link Facebook Event/Group" href="@Url.Action("AddFacebookLink", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">
                            <i class="glyphicon glyphicon-plus-sign"></i>
                            Add an Event/Group/Page
                        </a>
                    }
                    else if (Model.Event.Creator.UserName == User.Identity.Name)
                    {
                        <a class="btn btn-link" title="Link Facebook Event/Group" href="@Url.Action("AddFacebookLink", "Event", new { id = Model.Event.Id, eventType = Model.EventType })">
                            <i class="glyphicon glyphicon-plus-sign"></i>
                            Add an Event/Group/Page
                        </a>
                    }
                }
            </div>
        </div>
    </div>
</div>*@

@*@foreach (var ee in Model.LinkedFacebookObjects)
    {
        <div class="row" style="margin-top: 5px;">
            <a class="btn btn-info col-lg-8 col-md-8 col-lg-offset-1 col-md-offset-1" target="_blank" href="@Url.Content(ee.Url)" title="@ee.Name" style="text-align: left;">
                <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    <img class="img-rounded" style="height: 20px;" src="@Url.Content("~/Content/images/facebookSmall.png")" />
                    @ee.Name
                </div>
            </a>
            @if (ee.FacebookId != Model.Event.FacebookId)
            {
                if (User.Identity != null)
                {
                    if (Model.Event is Class && Model.Class.Teachers.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)
                    {
                        <a class="btn btn-danger" href="@Url.Action("RemoveLinkedFacebookObject", "Event", new { id = ee.Id, returnUrl = Request.Url.AbsolutePath })">
                            <span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span>
                        </a>
                    }
                    else if (Model.Event is Social && Model.Social.Promoters.Where(x => x.ApplicationUser.UserName == User.Identity.Name).Count() == 1)
                    {
                        <a class="btn btn-danger" href="@Url.Action("RemoveLinkedFacebookObject", "Event", new { id = ee.Id, returnUrl = Request.Url.AbsolutePath })">
                            <span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span>
                        </a>
                    }
                    else if (Model.Event.Creator.UserName == User.Identity.Name)
                    {
                        <a class="btn btn-danger" href="@Url.Action("RemoveLinkedFacebookObject", "Event", new { id = ee.Id, returnUrl = Request.Url.AbsolutePath })">
                            <span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span>
                        </a>
                    }
                }
            }
        </div>
    }*@

@*<div style="border-bottom: 1px dashed #bbb; margin-bottom: 10px;">
        <div class="row">
            <div id="parentc" class="col-lg-4">
                <input id="rv" type="hidden" value="@(rr.Rating) : 0)" class="ratingval" />
                <div id="cont" class="rateYo"></div>
            </div>
            <div class="col-lg-8">
                <div class="item-short"><strong>@rr.ReviewText</strong></div>
            </div>
        </div>
        <div class="row" style="padding-top: 10px;">
            <div class="col-lg-12 small">
                from <span class="text-info">@rr.Author.FirstName</span> - @rr.ReviewDate.ToLongDateString()
            </div>
        </div>
        <div class="row" style="padding-top: 10px; padding-bottom: 10px;">
            <div class="col-lg-12">
                @rr.ReviewText
            </div>
        </div>
    </div>*@
